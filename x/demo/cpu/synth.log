Running yosys for verilog parsing and synthesis

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `cpu.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `cpu.v' to AST representation.
Generating RTLIL representation for module `\cpu'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend.
Parsing Verilog input from `ALU.v' to AST representation.
Generating RTLIL representation for module `\ALU'.
Successfully finished Verilog frontend.

4. Executing SYNTH pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.1.1. Analyzing design hierarchy..
Top module:  \cpu
Used module:     \ALU

4.1.2. Analyzing design hierarchy..
Top module:  \cpu
Used module:     \ALU
Removed 0 unused modules.

4.2. Executing PROC pass (convert processes to netlists).

4.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$ALU.v:69$239 in module ALU.
Removed 1 dead cases from process $proc$ALU.v:55$235 in module ALU.
Removed 1 dead cases from process $proc$cpu.v:1196$211 in module cpu.
Removed 1 dead cases from process $proc$cpu.v:515$40 in module cpu.
Removed 1 dead cases from process $proc$cpu.v:501$39 in module cpu.
Removed a total of 5 dead cases.

4.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cpu.$proc$cpu.v:1209$230'.
  Set init value: \NMI_1 = 1'0
Found init rule in `\cpu.$proc$cpu.v:73$229'.
  Set init value: \NMI_edge = 1'0
Found init rule in `\cpu.$proc$cpu.v:56$228'.
  Set init value: \N = 1'0
Found init rule in `\cpu.$proc$cpu.v:55$227'.
  Set init value: \V = 1'0
Found init rule in `\cpu.$proc$cpu.v:54$226'.
  Set init value: \D = 1'0
Found init rule in `\cpu.$proc$cpu.v:53$225'.
  Set init value: \I = 1'0
Found init rule in `\cpu.$proc$cpu.v:52$224'.
  Set init value: \Z = 1'0
Found init rule in `\cpu.$proc$cpu.v:51$223'.
  Set init value: \C = 1'0

4.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\cpu.$proc$cpu.v:862$130'.

4.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ALU.$proc$ALU.v:95$251'.
     1/6: $0\AI7[0:0]
     2/6: $0\BI7[0:0]
     3/6: $0\OUT[7:0]
     4/6: $0\HC[0:0]
     5/6: $0\N[0:0]
     6/6: $0\CO[0:0]
Creating decoders for process `\ALU.$proc$ALU.v:89$246'.
     1/2: $0\temp_h[4:0]
     2/2: $0\temp_l[4:0]
Creating decoders for process `\ALU.$proc$ALU.v:69$239'.
     1/2: $1\temp_BI[7:0]
     2/2: $0\temp_BI[7:0]
Creating decoders for process `\ALU.$proc$ALU.v:55$235'.
     1/3: $2\temp_logic[8:0]
     2/3: $1\temp_logic[8:0]
     3/3: $0\temp_logic[8:0]
Creating decoders for process `\cpu.$proc$cpu.v:1209$230'.
     1/1: $1\NMI_1[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:73$229'.
     1/1: $1\NMI_edge[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:56$228'.
     1/1: $1\N[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:55$227'.
     1/1: $1\V[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:54$226'.
     1/1: $1\D[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:53$225'.
     1/1: $1\I[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:52$224'.
     1/1: $1\Z[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:51$223'.
     1/1: $1\C[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1214$217'.
     1/1: $0\NMI_edge[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1211$216'.
     1/1: $0\NMI_1[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1196$211'.
     1/2: $1\cond_true[0:0]
     2/2: $0\cond_true[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1192$210'.
     1/1: $0\cond_code[2:0]
Creating decoders for process `\cpu.$proc$cpu.v:1178$197'.
     1/10: $0\brk[0:0]
     2/10: $0\clv[0:0]
     3/10: $0\sei[0:0]
     4/10: $0\cli[0:0]
     5/10: $0\sed[0:0]
     6/10: $0\cld[0:0]
     7/10: $0\sec[0:0]
     8/10: $0\clc[0:0]
     9/10: $0\php[0:0]
    10/10: $0\plp[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1166$194'.
     1/1: $0\bit_ins[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1140$191'.
     1/1: $0\op[3:0]
Creating decoders for process `\cpu.$proc$cpu.v:1130$188'.
     1/1: $0\rotate[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1121$185'.
     1/1: $0\shift_right[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1110$182'.
     1/1: $0\compare[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1100$179'.
     1/1: $0\shift[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1091$174'.
     1/1: $0\adc_bcd[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1082$169'.
     1/1: $0\adc_sbc[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1072$166'.
     1/1: $0\inc[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1064$163'.
     1/1: $0\load_only[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1053$160'.
     1/1: $0\write_back[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1042$157'.
     1/1: $0\store[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1030$154'.
     1/1: $0\index_y[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:1009$151'.
     1/1: $0\src_reg[1:0]
Creating decoders for process `\cpu.$proc$cpu.v:989$148'.
     1/1: $0\dst_reg[1:0]
Creating decoders for process `\cpu.$proc$cpu.v:972$145'.
     1/1: $0\load_reg[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:966$143'.
     1/1: $0\res[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:862$130'.
     1/1: $0\state[5:0]
Creating decoders for process `\cpu.$proc$cpu.v:853$127'.
     1/1: $0\DIHOLD[7:0]
Creating decoders for process `\cpu.$proc$cpu.v:839$117'.
     1/2: $0\IRHOLD_valid[0:0]
     2/2: $0\IRHOLD[7:0]
Creating decoders for process `\cpu.$proc$cpu.v:819$112'.
     1/1: $0\V[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:807$109'.
     1/1: $0\D[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:793$104'.
     1/1: $0\I[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:776$95'.
     1/1: $0\N[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:764$87'.
     1/1: $0\Z[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:744$78'.
     1/1: $0\C[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:707$67'.
     1/2: $1\CI[0:0]
     2/2: $0\CI[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:674$66'.
     1/2: $1\BI[7:0]
     2/2: $0\BI[7:0]
Creating decoders for process `\cpu.$proc$cpu.v:632$63'.
     1/2: $1\AI[7:0]
     2/2: $0\AI[7:0]
Creating decoders for process `\cpu.$proc$cpu.v:624$62'.
     1/1: $0\backwards[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:614$56'.
     1/2: $1\alu_shift_right[0:0]
     2/2: $0\alu_shift_right[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:588$54'.
     1/2: $1\alu_op[3:0]
     2/2: $0\alu_op[3:0]
Creating decoders for process `\cpu.$proc$cpu.v:540$50'.
     1/2: $1\regsel[1:0]
     2/2: $0\regsel[1:0]
Creating decoders for process `\cpu.$proc$cpu.v:531$41'.
     1/3: $0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44
     2/3: $0$memwr$\AXYS$cpu.v:533$1_DATA[7:0]$43
     3/3: $0$memwr$\AXYS$cpu.v:533$1_ADDR[1:0]$42
Creating decoders for process `\cpu.$proc$cpu.v:515$40'.
     1/2: $1\ADJH[3:0]
     2/2: $0\ADJH[3:0]
Creating decoders for process `\cpu.$proc$cpu.v:501$39'.
     1/2: $1\ADJL[3:0]
     2/2: $0\ADJL[3:0]
Creating decoders for process `\cpu.$proc$cpu.v:491$37'.
     1/1: $0\adj_bcd[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:473$34'.
     1/2: $1\write_register[0:0]
     2/2: $0\write_register[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:445$33'.
     1/2: $1\WE[0:0]
     2/2: $0\WE[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:424$28'.
     1/2: $1\DO[7:0]
     2/2: $0\DO[7:0]
Creating decoders for process `\cpu.$proc$cpu.v:413$17'.
     1/2: $0\ABH[7:0]
     2/2: $0\ABL[7:0]
Creating decoders for process `\cpu.$proc$cpu.v:361$16'.
     1/2: $1\AB[15:0]
     2/2: $0\AB[15:0]
Creating decoders for process `\cpu.$proc$cpu.v:349$14'.
     1/1: $0\PC[15:0]
Creating decoders for process `\cpu.$proc$cpu.v:323$9'.
     1/3: $2\PC_inc[0:0]
     2/3: $1\PC_inc[0:0]
     3/3: $0\PC_inc[0:0]
Creating decoders for process `\cpu.$proc$cpu.v:296$3'.
     1/3: $2\PC_temp[15:0]
     2/3: $1\PC_temp[15:0]
     3/3: $0\PC_temp[15:0]

4.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ALU.\temp_l' from process `\ALU.$proc$ALU.v:89$246'.
No latch inferred for signal `\ALU.\temp_h' from process `\ALU.$proc$ALU.v:89$246'.
No latch inferred for signal `\ALU.\temp_BI' from process `\ALU.$proc$ALU.v:69$239'.
No latch inferred for signal `\ALU.\temp_logic' from process `\ALU.$proc$ALU.v:55$235'.
No latch inferred for signal `\cpu.\cond_true' from process `\cpu.$proc$cpu.v:1196$211'.
No latch inferred for signal `\cpu.\CI' from process `\cpu.$proc$cpu.v:707$67'.
No latch inferred for signal `\cpu.\BI' from process `\cpu.$proc$cpu.v:674$66'.
No latch inferred for signal `\cpu.\AI' from process `\cpu.$proc$cpu.v:632$63'.
No latch inferred for signal `\cpu.\alu_shift_right' from process `\cpu.$proc$cpu.v:614$56'.
No latch inferred for signal `\cpu.\alu_op' from process `\cpu.$proc$cpu.v:588$54'.
No latch inferred for signal `\cpu.\regsel' from process `\cpu.$proc$cpu.v:540$50'.
No latch inferred for signal `\cpu.\ADJH' from process `\cpu.$proc$cpu.v:515$40'.
No latch inferred for signal `\cpu.\ADJL' from process `\cpu.$proc$cpu.v:501$39'.
No latch inferred for signal `\cpu.\write_register' from process `\cpu.$proc$cpu.v:473$34'.
No latch inferred for signal `\cpu.\WE' from process `\cpu.$proc$cpu.v:445$33'.
No latch inferred for signal `\cpu.\DO' from process `\cpu.$proc$cpu.v:424$28'.
No latch inferred for signal `\cpu.\AB' from process `\cpu.$proc$cpu.v:361$16'.
No latch inferred for signal `\cpu.\PC_inc' from process `\cpu.$proc$cpu.v:323$9'.
No latch inferred for signal `\cpu.\PC_temp' from process `\cpu.$proc$cpu.v:296$3'.

4.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ALU.\CO' using process `\ALU.$proc$ALU.v:95$251'.
  created $dff cell `$procdff$783' with positive edge clock.
Creating register for signal `\ALU.\N' using process `\ALU.$proc$ALU.v:95$251'.
  created $dff cell `$procdff$784' with positive edge clock.
Creating register for signal `\ALU.\HC' using process `\ALU.$proc$ALU.v:95$251'.
  created $dff cell `$procdff$785' with positive edge clock.
Creating register for signal `\ALU.\OUT' using process `\ALU.$proc$ALU.v:95$251'.
  created $dff cell `$procdff$786' with positive edge clock.
Creating register for signal `\ALU.\BI7' using process `\ALU.$proc$ALU.v:95$251'.
  created $dff cell `$procdff$787' with positive edge clock.
Creating register for signal `\ALU.\AI7' using process `\ALU.$proc$ALU.v:95$251'.
  created $dff cell `$procdff$788' with positive edge clock.
Creating register for signal `\cpu.\NMI_edge' using process `\cpu.$proc$cpu.v:1214$217'.
  created $dff cell `$procdff$789' with positive edge clock.
Creating register for signal `\cpu.\NMI_1' using process `\cpu.$proc$cpu.v:1211$216'.
  created $dff cell `$procdff$790' with positive edge clock.
Creating register for signal `\cpu.\cond_code' using process `\cpu.$proc$cpu.v:1192$210'.
  created $dff cell `$procdff$791' with positive edge clock.
Creating register for signal `\cpu.\plp' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$792' with positive edge clock.
Creating register for signal `\cpu.\php' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$793' with positive edge clock.
Creating register for signal `\cpu.\clc' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$794' with positive edge clock.
Creating register for signal `\cpu.\sec' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$795' with positive edge clock.
Creating register for signal `\cpu.\cld' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$796' with positive edge clock.
Creating register for signal `\cpu.\sed' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$797' with positive edge clock.
Creating register for signal `\cpu.\cli' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$798' with positive edge clock.
Creating register for signal `\cpu.\sei' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$799' with positive edge clock.
Creating register for signal `\cpu.\clv' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$800' with positive edge clock.
Creating register for signal `\cpu.\brk' using process `\cpu.$proc$cpu.v:1178$197'.
  created $dff cell `$procdff$801' with positive edge clock.
Creating register for signal `\cpu.\bit_ins' using process `\cpu.$proc$cpu.v:1166$194'.
  created $dff cell `$procdff$802' with positive edge clock.
Creating register for signal `\cpu.\op' using process `\cpu.$proc$cpu.v:1140$191'.
  created $dff cell `$procdff$803' with positive edge clock.
Creating register for signal `\cpu.\rotate' using process `\cpu.$proc$cpu.v:1130$188'.
  created $dff cell `$procdff$804' with positive edge clock.
Creating register for signal `\cpu.\shift_right' using process `\cpu.$proc$cpu.v:1121$185'.
  created $dff cell `$procdff$805' with positive edge clock.
Creating register for signal `\cpu.\compare' using process `\cpu.$proc$cpu.v:1110$182'.
  created $dff cell `$procdff$806' with positive edge clock.
Creating register for signal `\cpu.\shift' using process `\cpu.$proc$cpu.v:1100$179'.
  created $dff cell `$procdff$807' with positive edge clock.
Creating register for signal `\cpu.\adc_bcd' using process `\cpu.$proc$cpu.v:1091$174'.
  created $dff cell `$procdff$808' with positive edge clock.
Creating register for signal `\cpu.\adc_sbc' using process `\cpu.$proc$cpu.v:1082$169'.
  created $dff cell `$procdff$809' with positive edge clock.
Creating register for signal `\cpu.\inc' using process `\cpu.$proc$cpu.v:1072$166'.
  created $dff cell `$procdff$810' with positive edge clock.
Creating register for signal `\cpu.\load_only' using process `\cpu.$proc$cpu.v:1064$163'.
  created $dff cell `$procdff$811' with positive edge clock.
Creating register for signal `\cpu.\write_back' using process `\cpu.$proc$cpu.v:1053$160'.
  created $dff cell `$procdff$812' with positive edge clock.
Creating register for signal `\cpu.\store' using process `\cpu.$proc$cpu.v:1042$157'.
  created $dff cell `$procdff$813' with positive edge clock.
Creating register for signal `\cpu.\index_y' using process `\cpu.$proc$cpu.v:1030$154'.
  created $dff cell `$procdff$814' with positive edge clock.
Creating register for signal `\cpu.\src_reg' using process `\cpu.$proc$cpu.v:1009$151'.
  created $dff cell `$procdff$815' with positive edge clock.
Creating register for signal `\cpu.\dst_reg' using process `\cpu.$proc$cpu.v:989$148'.
  created $dff cell `$procdff$816' with positive edge clock.
Creating register for signal `\cpu.\load_reg' using process `\cpu.$proc$cpu.v:972$145'.
  created $dff cell `$procdff$817' with positive edge clock.
Creating register for signal `\cpu.\res' using process `\cpu.$proc$cpu.v:966$143'.
  created $dff cell `$procdff$818' with positive edge clock.
Creating register for signal `\cpu.\state' using process `\cpu.$proc$cpu.v:862$130'.
  created $adff cell `$procdff$819' with positive edge clock and positive level reset.
Creating register for signal `\cpu.\DIHOLD' using process `\cpu.$proc$cpu.v:853$127'.
  created $dff cell `$procdff$820' with positive edge clock.
Creating register for signal `\cpu.\IRHOLD' using process `\cpu.$proc$cpu.v:839$117'.
  created $dff cell `$procdff$821' with positive edge clock.
Creating register for signal `\cpu.\IRHOLD_valid' using process `\cpu.$proc$cpu.v:839$117'.
  created $dff cell `$procdff$822' with positive edge clock.
Creating register for signal `\cpu.\V' using process `\cpu.$proc$cpu.v:819$112'.
  created $dff cell `$procdff$823' with positive edge clock.
Creating register for signal `\cpu.\D' using process `\cpu.$proc$cpu.v:807$109'.
  created $dff cell `$procdff$824' with positive edge clock.
Creating register for signal `\cpu.\I' using process `\cpu.$proc$cpu.v:793$104'.
  created $dff cell `$procdff$825' with positive edge clock.
Creating register for signal `\cpu.\N' using process `\cpu.$proc$cpu.v:776$95'.
  created $dff cell `$procdff$826' with positive edge clock.
Creating register for signal `\cpu.\Z' using process `\cpu.$proc$cpu.v:764$87'.
  created $dff cell `$procdff$827' with positive edge clock.
Creating register for signal `\cpu.\C' using process `\cpu.$proc$cpu.v:744$78'.
  created $dff cell `$procdff$828' with positive edge clock.
Creating register for signal `\cpu.\backwards' using process `\cpu.$proc$cpu.v:624$62'.
  created $dff cell `$procdff$829' with positive edge clock.
Creating register for signal `\cpu.$memwr$\AXYS$cpu.v:533$1_ADDR' using process `\cpu.$proc$cpu.v:531$41'.
  created $dff cell `$procdff$830' with positive edge clock.
Creating register for signal `\cpu.$memwr$\AXYS$cpu.v:533$1_DATA' using process `\cpu.$proc$cpu.v:531$41'.
  created $dff cell `$procdff$831' with positive edge clock.
Creating register for signal `\cpu.$memwr$\AXYS$cpu.v:533$1_EN' using process `\cpu.$proc$cpu.v:531$41'.
  created $dff cell `$procdff$832' with positive edge clock.
Creating register for signal `\cpu.\adj_bcd' using process `\cpu.$proc$cpu.v:491$37'.
  created $dff cell `$procdff$833' with positive edge clock.
Creating register for signal `\cpu.\ABL' using process `\cpu.$proc$cpu.v:413$17'.
  created $dff cell `$procdff$834' with positive edge clock.
Creating register for signal `\cpu.\ABH' using process `\cpu.$proc$cpu.v:413$17'.
  created $dff cell `$procdff$835' with positive edge clock.
Creating register for signal `\cpu.\PC' using process `\cpu.$proc$cpu.v:349$14'.
  created $dff cell `$procdff$836' with positive edge clock.

4.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$ALU.v:95$251'.
Removing empty process `ALU.$proc$ALU.v:95$251'.
Removing empty process `ALU.$proc$ALU.v:89$246'.
Found and cleaned up 1 empty switch in `\ALU.$proc$ALU.v:69$239'.
Removing empty process `ALU.$proc$ALU.v:69$239'.
Found and cleaned up 2 empty switches in `\ALU.$proc$ALU.v:55$235'.
Removing empty process `ALU.$proc$ALU.v:55$235'.
Removing empty process `cpu.$proc$cpu.v:1209$230'.
Removing empty process `cpu.$proc$cpu.v:73$229'.
Removing empty process `cpu.$proc$cpu.v:56$228'.
Removing empty process `cpu.$proc$cpu.v:55$227'.
Removing empty process `cpu.$proc$cpu.v:54$226'.
Removing empty process `cpu.$proc$cpu.v:53$225'.
Removing empty process `cpu.$proc$cpu.v:52$224'.
Removing empty process `cpu.$proc$cpu.v:51$223'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1214$217'.
Removing empty process `cpu.$proc$cpu.v:1214$217'.
Removing empty process `cpu.$proc$cpu.v:1211$216'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:1196$211'.
Removing empty process `cpu.$proc$cpu.v:1196$211'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:1192$210'.
Removing empty process `cpu.$proc$cpu.v:1192$210'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:1178$197'.
Removing empty process `cpu.$proc$cpu.v:1178$197'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1166$194'.
Removing empty process `cpu.$proc$cpu.v:1166$194'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1140$191'.
Removing empty process `cpu.$proc$cpu.v:1140$191'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1130$188'.
Removing empty process `cpu.$proc$cpu.v:1130$188'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1121$185'.
Removing empty process `cpu.$proc$cpu.v:1121$185'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1110$182'.
Removing empty process `cpu.$proc$cpu.v:1110$182'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1100$179'.
Removing empty process `cpu.$proc$cpu.v:1100$179'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1091$174'.
Removing empty process `cpu.$proc$cpu.v:1091$174'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1082$169'.
Removing empty process `cpu.$proc$cpu.v:1082$169'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1072$166'.
Removing empty process `cpu.$proc$cpu.v:1072$166'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1064$163'.
Removing empty process `cpu.$proc$cpu.v:1064$163'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1053$160'.
Removing empty process `cpu.$proc$cpu.v:1053$160'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1042$157'.
Removing empty process `cpu.$proc$cpu.v:1042$157'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1030$154'.
Removing empty process `cpu.$proc$cpu.v:1030$154'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:1009$151'.
Removing empty process `cpu.$proc$cpu.v:1009$151'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:989$148'.
Removing empty process `cpu.$proc$cpu.v:989$148'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:972$145'.
Removing empty process `cpu.$proc$cpu.v:972$145'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:966$143'.
Removing empty process `cpu.$proc$cpu.v:966$143'.
Found and cleaned up 3 empty switches in `\cpu.$proc$cpu.v:862$130'.
Removing empty process `cpu.$proc$cpu.v:862$130'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:853$127'.
Removing empty process `cpu.$proc$cpu.v:853$127'.
Found and cleaned up 4 empty switches in `\cpu.$proc$cpu.v:839$117'.
Removing empty process `cpu.$proc$cpu.v:839$117'.
Found and cleaned up 6 empty switches in `\cpu.$proc$cpu.v:819$112'.
Removing empty process `cpu.$proc$cpu.v:819$112'.
Found and cleaned up 5 empty switches in `\cpu.$proc$cpu.v:807$109'.
Removing empty process `cpu.$proc$cpu.v:807$109'.
Found and cleaned up 7 empty switches in `\cpu.$proc$cpu.v:793$104'.
Removing empty process `cpu.$proc$cpu.v:793$104'.
Found and cleaned up 6 empty switches in `\cpu.$proc$cpu.v:776$95'.
Removing empty process `cpu.$proc$cpu.v:776$95'.
Found and cleaned up 5 empty switches in `\cpu.$proc$cpu.v:764$87'.
Removing empty process `cpu.$proc$cpu.v:764$87'.
Found and cleaned up 7 empty switches in `\cpu.$proc$cpu.v:744$78'.
Removing empty process `cpu.$proc$cpu.v:744$78'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:707$67'.
Removing empty process `cpu.$proc$cpu.v:707$67'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:674$66'.
Removing empty process `cpu.$proc$cpu.v:674$66'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:632$63'.
Removing empty process `cpu.$proc$cpu.v:632$63'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:624$62'.
Removing empty process `cpu.$proc$cpu.v:624$62'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:614$56'.
Removing empty process `cpu.$proc$cpu.v:614$56'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:588$54'.
Removing empty process `cpu.$proc$cpu.v:588$54'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:540$50'.
Removing empty process `cpu.$proc$cpu.v:540$50'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:531$41'.
Removing empty process `cpu.$proc$cpu.v:531$41'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:515$40'.
Removing empty process `cpu.$proc$cpu.v:515$40'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:501$39'.
Removing empty process `cpu.$proc$cpu.v:501$39'.
Removing empty process `cpu.$proc$cpu.v:491$37'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:473$34'.
Removing empty process `cpu.$proc$cpu.v:473$34'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:445$33'.
Removing empty process `cpu.$proc$cpu.v:445$33'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:424$28'.
Removing empty process `cpu.$proc$cpu.v:424$28'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:413$17'.
Removing empty process `cpu.$proc$cpu.v:413$17'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:361$16'.
Removing empty process `cpu.$proc$cpu.v:361$16'.
Found and cleaned up 1 empty switch in `\cpu.$proc$cpu.v:349$14'.
Removing empty process `cpu.$proc$cpu.v:349$14'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:323$9'.
Removing empty process `cpu.$proc$cpu.v:323$9'.
Found and cleaned up 2 empty switches in `\cpu.$proc$cpu.v:296$3'.
Removing empty process `cpu.$proc$cpu.v:296$3'.
Cleaned up 107 empty switches.

4.3. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$procmux$280_CMP0' in module `ALU' with $logic_not.
Replacing $eq cell `$procmux$288_CMP0' in module `ALU' with $logic_not.
Replacing $eq cell `$procmux$764_CMP0' in module `cpu' with $logic_not.
Optimizing away select inverter for $mux cell `$ternary$cpu.v:857$129' in module `cpu'.
Replacing $eq cell `$procmux$718_CMP0' in module `cpu' with inverter.
Replacing $eq cell `$procmux$712_CMP0' in module `cpu' with inverter.
Replacing $eq cell `$procmux$303_CMP0' in module `cpu' with $logic_not.
Replacing $eq cell `$eq$cpu.v:1189$209' in module `cpu' with $logic_not.
Replacing $eq cell `$procmux$495_CMP0' in module `cpu' with $logic_not.
Replacing $eq cell `$procmux$524_CMP0' in module `cpu' with $logic_not.

4.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
  removing buffer cell `$extend$ALU.v:50$233': $extend$ALU.v:50$233_Y = \CI
Finding unused cells or wires in module \cpu..
  removing buffer cell `$extend$cpu.v:722$76': $extend$cpu.v:722$76_Y = \C
  removing buffer cell `$extend$cpu.v:722$73': $extend$cpu.v:722$73_Y = \C
  removing buffer cell `$extend$cpu.v:718$70': $extend$cpu.v:718$70_Y = \C
  removing buffer cell `$extend$cpu.v:718$68': $extend$cpu.v:718$68_Y = \inc
  removing buffer cell `$extend$cpu.v:661$64': $extend$cpu.v:661$64_Y = \regfile
  removing unused `$not' cell `$not$cpu.v:857$128'.
  removing unused `$logic_not' cell `$eq$cpu.v:1189$209'.
  removing unused `$mux' cell `$procmux$308'.
  removing unused `$dff' cell `$procdff$801'.
  removing unused non-port wire \brk.
  removing unused non-port wire \DIHOLD_valid.
  removed 2 unused temporary wires.

4.5. Executing CHECK pass (checking for obvious problems).
checking module ALU..
checking module cpu..
found and reported 0 problems.

4.6. Executing OPT pass (performing simple optimizations).

4.6.1. Executing OPT_EXPR pass (perform const folding).

4.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
  Cell `$procmux$277_CMP0' is identical to cell `$eq$ALU.v:50$231'.
    Redirecting output \Y: $procmux$277_CMP = $eq$ALU.v:50$231_Y
    Removing $eq cell `$procmux$277_CMP0' from module `\ALU'.
Finding identical cells in module `\cpu'.
  Cell `$eq$cpu.v:1031$155' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1031$155_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1031$155' from module `\cpu'.
  Cell `$eq$cpu.v:1043$158' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1043$158_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1043$158' from module `\cpu'.
  Cell `$eq$cpu.v:1054$161' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1054$161_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1054$161' from module `\cpu'.
  Cell `$eq$cpu.v:1065$164' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1065$164_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1065$164' from module `\cpu'.
  Cell `$eq$cpu.v:1073$167' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1073$167_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1073$167' from module `\cpu'.
  Cell `$eq$cpu.v:1083$170' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1083$170_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1083$170' from module `\cpu'.
  Cell `$eq$cpu.v:1092$175' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1092$175_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1092$175' from module `\cpu'.
  Cell `$eq$cpu.v:1092$176' is identical to cell `$eq$cpu.v:1083$171'.
    Redirecting output \Y: $eq$cpu.v:1092$176_Y = $eq$cpu.v:1083$171_Y
    Removing $eq cell `$eq$cpu.v:1092$176' from module `\cpu'.
  Cell `$eq$cpu.v:1101$180' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1101$180_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1101$180' from module `\cpu'.
  Cell `$eq$cpu.v:1111$183' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1111$183_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1111$183' from module `\cpu'.
  Cell `$eq$cpu.v:1122$186' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1122$186_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1122$186' from module `\cpu'.
  Cell `$eq$cpu.v:1131$189' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1131$189_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1131$189' from module `\cpu'.
  Cell `$eq$cpu.v:1141$192' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1141$192_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1141$192' from module `\cpu'.
  Cell `$eq$cpu.v:1167$195' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1167$195_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1167$195' from module `\cpu'.
  Cell `$eq$cpu.v:1179$198' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:1179$198_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:1179$198' from module `\cpu'.
  Cell `$eq$cpu.v:615$57' is identical to cell `$eq$cpu.v:575$52'.
    Redirecting output \Y: $eq$cpu.v:615$57_Y = $eq$cpu.v:575$52_Y
    Removing $eq cell `$eq$cpu.v:615$57' from module `\cpu'.
  Cell `$eq$cpu.v:749$83' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:749$83_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:749$83' from module `\cpu'.
  Cell `$eq$cpu.v:765$88' is identical to cell `$eq$cpu.v:745$79'.
    Redirecting output \Y: $eq$cpu.v:765$88_Y = $eq$cpu.v:745$79_Y
    Removing $eq cell `$eq$cpu.v:765$88' from module `\cpu'.
  Cell `$eq$cpu.v:767$89' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $eq$cpu.v:767$89_Y = $eq$cpu.v:747$81_Y
    Removing $eq cell `$eq$cpu.v:767$89' from module `\cpu'.
  Cell `$eq$cpu.v:769$90' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:769$90_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:769$90' from module `\cpu'.
  Cell `$eq$cpu.v:777$96' is identical to cell `$eq$cpu.v:745$79'.
    Redirecting output \Y: $eq$cpu.v:777$96_Y = $eq$cpu.v:745$79_Y
    Removing $eq cell `$eq$cpu.v:777$96' from module `\cpu'.
  Cell `$eq$cpu.v:779$97' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $eq$cpu.v:779$97_Y = $eq$cpu.v:747$81_Y
    Removing $eq cell `$eq$cpu.v:779$97' from module `\cpu'.
  Cell `$eq$cpu.v:781$98' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:781$98_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:781$98' from module `\cpu'.
  Cell `$eq$cpu.v:786$102' is identical to cell `$eq$cpu.v:575$52'.
    Redirecting output \Y: $eq$cpu.v:786$102_Y = $eq$cpu.v:575$52_Y
    Removing $eq cell `$eq$cpu.v:786$102' from module `\cpu'.
  Cell `$eq$cpu.v:794$105' is identical to cell `$eq$cpu.v:1215$218'.
    Redirecting output \Y: $eq$cpu.v:794$105_Y = $eq$cpu.v:1215$218_Y
    Removing $eq cell `$eq$cpu.v:794$105' from module `\cpu'.
  Cell `$eq$cpu.v:796$106' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $eq$cpu.v:796$106_Y = $eq$cpu.v:747$81_Y
    Removing $eq cell `$eq$cpu.v:796$106' from module `\cpu'.
  Cell `$eq$cpu.v:798$107' is identical to cell `$eq$cpu.v:615$58'.
    Redirecting output \Y: $eq$cpu.v:798$107_Y = $eq$cpu.v:615$58_Y
    Removing $eq cell `$eq$cpu.v:798$107' from module `\cpu'.
  Cell `$eq$cpu.v:801$108' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:801$108_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:801$108' from module `\cpu'.
  Cell `$eq$cpu.v:808$110' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $eq$cpu.v:808$110_Y = $eq$cpu.v:747$81_Y
    Removing $eq cell `$eq$cpu.v:808$110' from module `\cpu'.
  Cell `$eq$cpu.v:810$111' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:810$111_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:810$111' from module `\cpu'.
  Cell `$eq$cpu.v:820$113' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $eq$cpu.v:820$113_Y = $eq$cpu.v:747$81_Y
    Removing $eq cell `$eq$cpu.v:820$113' from module `\cpu'.
  Cell `$eq$cpu.v:822$114' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:822$114_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:822$114' from module `\cpu'.
  Cell `$eq$cpu.v:826$115' is identical to cell `$eq$cpu.v:575$52'.
    Redirecting output \Y: $eq$cpu.v:826$115_Y = $eq$cpu.v:575$52_Y
    Removing $eq cell `$eq$cpu.v:826$115' from module `\cpu'.
  Cell `$eq$cpu.v:846$121' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:846$121_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:846$121' from module `\cpu'.
  Cell `$eq$cpu.v:969$144' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:969$144_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:969$144' from module `\cpu'.
  Cell `$eq$cpu.v:973$146' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:973$146_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:973$146' from module `\cpu'.
  Cell `$eq$cpu.v:990$149' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $eq$cpu.v:990$149_Y = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$eq$cpu.v:990$149' from module `\cpu'.
  Cell `$logic_and$cpu.v:1031$156' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1031$156_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1031$156' from module `\cpu'.
  Cell `$logic_and$cpu.v:1043$159' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1043$159_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1043$159' from module `\cpu'.
  Cell `$logic_and$cpu.v:1054$162' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1054$162_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1054$162' from module `\cpu'.
  Cell `$logic_and$cpu.v:1065$165' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1065$165_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1065$165' from module `\cpu'.
  Cell `$logic_and$cpu.v:1073$168' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1073$168_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1073$168' from module `\cpu'.
  Cell `$logic_and$cpu.v:1101$181' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1101$181_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1101$181' from module `\cpu'.
  Cell `$logic_and$cpu.v:1111$184' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1111$184_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1111$184' from module `\cpu'.
  Cell `$logic_and$cpu.v:1122$187' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1122$187_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1122$187' from module `\cpu'.
  Cell `$logic_and$cpu.v:1131$190' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1131$190_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1131$190' from module `\cpu'.
  Cell `$logic_and$cpu.v:1141$193' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1141$193_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1141$193' from module `\cpu'.
  Cell `$logic_and$cpu.v:1167$196' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1167$196_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1167$196' from module `\cpu'.
  Cell `$logic_and$cpu.v:1179$199' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:1179$199_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:1179$199' from module `\cpu'.
  Cell `$logic_and$cpu.v:826$116' is identical to cell `$logic_and$cpu.v:786$103'.
    Redirecting output \Y: $logic_and$cpu.v:826$116_Y = $logic_and$cpu.v:786$103_Y
    Removing $logic_and cell `$logic_and$cpu.v:826$116' from module `\cpu'.
  Cell `$logic_and$cpu.v:973$147' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:973$147_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:973$147' from module `\cpu'.
  Cell `$logic_and$cpu.v:990$150' is identical to cell `$logic_and$cpu.v:1010$153'.
    Redirecting output \Y: $logic_and$cpu.v:990$150_Y = $logic_and$cpu.v:1010$153_Y
    Removing $logic_and cell `$logic_and$cpu.v:990$150' from module `\cpu'.
  Cell `$logic_or$cpu.v:1092$177' is identical to cell `$logic_or$cpu.v:1083$172'.
    Redirecting output \Y: $logic_or$cpu.v:1092$177_Y = $logic_or$cpu.v:1083$172_Y
    Removing $logic_or cell `$logic_or$cpu.v:1092$177' from module `\cpu'.
  Cell `$ne$cpu.v:784$99' is identical to cell `$ne$cpu.v:772$91'.
    Redirecting output \Y: $ne$cpu.v:784$99_Y = $ne$cpu.v:772$91_Y
    Removing $ne cell `$ne$cpu.v:784$99' from module `\cpu'.
  Cell `$not$cpu.v:325$10' is identical to cell `$not$cpu.v:298$4'.
    Redirecting output \Y: $not$cpu.v:325$10_Y = $not$cpu.v:298$4_Y
    Removing $not cell `$not$cpu.v:325$10' from module `\cpu'.
  Cell `$not$cpu.v:850$122' is identical to cell `$not$cpu.v:298$4'.
    Redirecting output \Y: $not$cpu.v:850$122_Y = $not$cpu.v:298$4_Y
    Removing $not cell `$not$cpu.v:850$122' from module `\cpu'.
  Cell `$or$cpu.v:913$138' is identical to cell `$or$cpu.v:903$134'.
    Redirecting output \Y: $or$cpu.v:913$138_Y = $or$cpu.v:903$134_Y
    Removing $or cell `$or$cpu.v:913$138' from module `\cpu'.
  Cell `$procmux$349_CMP0' is identical to cell `$procmux$340_CMP0'.
    Redirecting output \Y: $procmux$349_CMP = $procmux$340_CMP
    Removing $eq cell `$procmux$349_CMP0' from module `\cpu'.
  Cell `$procmux$362_CMP0' is identical to cell `$procmux$348_CMP0'.
    Redirecting output \Y: $procmux$362_CMP = $procmux$348_CMP
    Removing $eq cell `$procmux$362_CMP0' from module `\cpu'.
  Cell `$procmux$368_CMP0' is identical to cell `$procmux$347_CMP4'.
    Redirecting output \Y: $procmux$368_CMP [0] = $procmux$347_CMP [4]
    Removing $eq cell `$procmux$368_CMP0' from module `\cpu'.
  Cell `$procmux$368_CMP1' is identical to cell `$procmux$347_CMP5'.
    Redirecting output \Y: $procmux$368_CMP [1] = $procmux$347_CMP [5]
    Removing $eq cell `$procmux$368_CMP1' from module `\cpu'.
  Cell `$procmux$404_CMP0' is identical to cell `$procmux$374_CMP0'.
    Redirecting output \Y: $procmux$404_CMP [0] = $procmux$374_CMP [0]
    Removing $eq cell `$procmux$404_CMP0' from module `\cpu'.
  Cell `$procmux$423_CMP3' is identical to cell `$procmux$347_CMP1'.
    Redirecting output \Y: $procmux$423_CMP [3] = $procmux$347_CMP [1]
    Removing $eq cell `$procmux$423_CMP3' from module `\cpu'.
  Cell `$procmux$430_CMP0' is identical to cell `$procmux$422_CMP3'.
    Redirecting output \Y: $procmux$430_CMP [0] = $procmux$422_CMP [3]
    Removing $eq cell `$procmux$430_CMP0' from module `\cpu'.
  Cell `$procmux$432_CMP1' is identical to cell `$procmux$347_CMP1'.
    Redirecting output \Y: $procmux$432_CMP [1] = $procmux$347_CMP [1]
    Removing $eq cell `$procmux$432_CMP1' from module `\cpu'.
  Cell `$procmux$438_CMP4' is identical to cell `$procmux$424_CMP0'.
    Redirecting output \Y: $procmux$438_CMP [4] = $procmux$424_CMP
    Removing $eq cell `$procmux$438_CMP4' from module `\cpu'.
  Cell `$procmux$438_CMP6' is identical to cell `$procmux$347_CMP1'.
    Redirecting output \Y: $procmux$438_CMP [6] = $procmux$347_CMP [1]
    Removing $eq cell `$procmux$438_CMP6' from module `\cpu'.
  Cell `$procmux$450_CMP0' is identical to cell `$eq$cpu.v:1215$218'.
    Redirecting output \Y: $procmux$450_CMP = $eq$cpu.v:1215$218_Y
    Removing $eq cell `$procmux$450_CMP0' from module `\cpu'.
  Cell `$procmux$453_CMP0' is identical to cell `$eq$cpu.v:1083$171'.
    Redirecting output \Y: $procmux$453_CMP = $eq$cpu.v:1083$171_Y
    Removing $eq cell `$procmux$453_CMP0' from module `\cpu'.
  Cell `$procmux$467_CMP0' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $procmux$467_CMP = $eq$cpu.v:747$81_Y
    Removing $eq cell `$procmux$467_CMP0' from module `\cpu'.
  Cell `$procmux$473_CMP0' is identical to cell `$eq$cpu.v:533$46'.
    Redirecting output \Y: $procmux$473_CMP = $eq$cpu.v:533$46_Y
    Removing $eq cell `$procmux$473_CMP0' from module `\cpu'.
  Cell `$procmux$476_CMP0' is identical to cell `$eq$cpu.v:843$118'.
    Redirecting output \Y: $procmux$476_CMP = $eq$cpu.v:843$118_Y
    Removing $eq cell `$procmux$476_CMP0' from module `\cpu'.
  Cell `$procmux$478_CMP0' is identical to cell `$eq$cpu.v:843$119'.
    Redirecting output \Y: $procmux$478_CMP = $eq$cpu.v:843$119_Y
    Removing $eq cell `$procmux$478_CMP0' from module `\cpu'.
  Cell `$procmux$479_CMP0' is identical to cell `$eq$cpu.v:615$58'.
    Redirecting output \Y: $procmux$479_CMP = $eq$cpu.v:615$58_Y
    Removing $eq cell `$procmux$479_CMP0' from module `\cpu'.
  Cell `$procmux$480_CMP0' is identical to cell `$eq$cpu.v:575$52'.
    Redirecting output \Y: $procmux$480_CMP = $eq$cpu.v:575$52_Y
    Removing $eq cell `$procmux$480_CMP0' from module `\cpu'.
  Cell `$procmux$481_CMP0' is identical to cell `$eq$cpu.v:745$79'.
    Redirecting output \Y: $procmux$481_CMP = $eq$cpu.v:745$79_Y
    Removing $eq cell `$procmux$481_CMP0' from module `\cpu'.
  Cell `$procmux$482_CMP0' is identical to cell `$eq$cpu.v:615$60'.
    Redirecting output \Y: $procmux$482_CMP = $eq$cpu.v:615$60_Y
    Removing $eq cell `$procmux$482_CMP0' from module `\cpu'.
  Cell `$procmux$505_CMP0' is identical to cell `$procmux$416_CMP0'.
    Redirecting output \Y: $procmux$505_CMP = $procmux$416_CMP [0]
    Removing $eq cell `$procmux$505_CMP0' from module `\cpu'.
  Cell `$procmux$517_CMP0' is identical to cell `$procmux$431_CMP0'.
    Redirecting output \Y: $procmux$517_CMP = $procmux$431_CMP [0]
    Removing $eq cell `$procmux$517_CMP0' from module `\cpu'.
  Cell `$procmux$525_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$525_CMP = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$525_CMP0' from module `\cpu'.
  Cell `$procmux$662_CMP0' is identical to cell `$eq$cpu.v:843$118'.
    Redirecting output \Y: $procmux$662_CMP [0] = $eq$cpu.v:843$118_Y
    Removing $eq cell `$procmux$662_CMP0' from module `\cpu'.
  Cell `$procmux$662_CMP1' is identical to cell `$procmux$469_CMP0'.
    Redirecting output \Y: $procmux$662_CMP [1] = $procmux$469_CMP
    Removing $eq cell `$procmux$662_CMP1' from module `\cpu'.
  Cell `$procmux$662_CMP2' is identical to cell `$procmux$468_CMP0'.
    Redirecting output \Y: $procmux$662_CMP [2] = $procmux$468_CMP
    Removing $eq cell `$procmux$662_CMP2' from module `\cpu'.
  Cell `$procmux$662_CMP3' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $procmux$662_CMP [3] = $eq$cpu.v:747$81_Y
    Removing $eq cell `$procmux$662_CMP3' from module `\cpu'.
  Cell `$procmux$662_CMP4' is identical to cell `$procmux$464_CMP0'.
    Redirecting output \Y: $procmux$662_CMP [4] = $procmux$464_CMP
    Removing $eq cell `$procmux$662_CMP4' from module `\cpu'.
  Cell `$procmux$662_CMP5' is identical to cell `$procmux$463_CMP0'.
    Redirecting output \Y: $procmux$662_CMP [5] = $procmux$463_CMP
    Removing $eq cell `$procmux$662_CMP5' from module `\cpu'.
  Cell `$procmux$662_CMP6' is identical to cell `$procmux$486_CMP0'.
    Redirecting output \Y: $procmux$662_CMP [6] = $procmux$486_CMP
    Removing $eq cell `$procmux$662_CMP6' from module `\cpu'.
  Cell `$procmux$662_CMP7' is identical to cell `$procmux$489_CMP0'.
    Redirecting output \Y: $procmux$662_CMP [7] = $procmux$489_CMP
    Removing $eq cell `$procmux$662_CMP7' from module `\cpu'.
  Cell `$procmux$663_CMP0' is identical to cell `$eq$cpu.v:575$52'.
    Redirecting output \Y: $procmux$663_CMP = $eq$cpu.v:575$52_Y
    Removing $eq cell `$procmux$663_CMP0' from module `\cpu'.
  Cell `$procmux$664_CMP0' is identical to cell `$eq$cpu.v:615$60'.
    Redirecting output \Y: $procmux$664_CMP [0] = $eq$cpu.v:615$60_Y
    Removing $eq cell `$procmux$664_CMP0' from module `\cpu'.
  Cell `$procmux$664_CMP1' is identical to cell `$eq$cpu.v:615$58'.
    Redirecting output \Y: $procmux$664_CMP [1] = $eq$cpu.v:615$58_Y
    Removing $eq cell `$procmux$664_CMP1' from module `\cpu'.
  Cell `$procmux$665_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$665_CMP [0] = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$665_CMP0' from module `\cpu'.
  Cell `$procmux$665_CMP1' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$665_CMP [1] = $procmux$494_CMP
    Removing $eq cell `$procmux$665_CMP1' from module `\cpu'.
  Cell `$procmux$666_CMP0' is identical to cell `$procmux$484_CMP0'.
    Redirecting output \Y: $procmux$666_CMP [0] = $procmux$484_CMP
    Removing $eq cell `$procmux$666_CMP0' from module `\cpu'.
  Cell `$procmux$666_CMP1' is identical to cell `$procmux$459_CMP0'.
    Redirecting output \Y: $procmux$666_CMP [1] = $procmux$459_CMP
    Removing $eq cell `$procmux$666_CMP1' from module `\cpu'.
  Cell `$procmux$666_CMP2' is identical to cell `$procmux$492_CMP0'.
    Redirecting output \Y: $procmux$666_CMP [2] = $procmux$492_CMP
    Removing $eq cell `$procmux$666_CMP2' from module `\cpu'.
  Cell `$procmux$669_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$669_CMP [0] = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$669_CMP0' from module `\cpu'.
  Cell `$procmux$669_CMP1' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$669_CMP [1] = $procmux$494_CMP
    Removing $eq cell `$procmux$669_CMP1' from module `\cpu'.
  Cell `$procmux$670_CMP0' is identical to cell `$procmux$460_CMP0'.
    Redirecting output \Y: $procmux$670_CMP = $procmux$460_CMP
    Removing $eq cell `$procmux$670_CMP0' from module `\cpu'.
  Cell `$procmux$671_CMP0' is identical to cell `$procmux$459_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [0] = $procmux$459_CMP
    Removing $eq cell `$procmux$671_CMP0' from module `\cpu'.
  Cell `$procmux$671_CMP1' is identical to cell `$procmux$463_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [1] = $procmux$463_CMP
    Removing $eq cell `$procmux$671_CMP1' from module `\cpu'.
  Cell `$procmux$671_CMP10' is identical to cell `$procmux$471_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [10] = $procmux$471_CMP
    Removing $eq cell `$procmux$671_CMP10' from module `\cpu'.
  Cell `$procmux$671_CMP11' is identical to cell `$eq$cpu.v:1083$171'.
    Redirecting output \Y: $procmux$671_CMP [11] = $eq$cpu.v:1083$171_Y
    Removing $eq cell `$procmux$671_CMP11' from module `\cpu'.
  Cell `$procmux$671_CMP12' is identical to cell `$procmux$452_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [12] = $procmux$452_CMP
    Removing $eq cell `$procmux$671_CMP12' from module `\cpu'.
  Cell `$procmux$671_CMP13' is identical to cell `$procmux$451_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [13] = $procmux$451_CMP
    Removing $eq cell `$procmux$671_CMP13' from module `\cpu'.
  Cell `$procmux$671_CMP14' is identical to cell `$eq$cpu.v:843$119'.
    Redirecting output \Y: $procmux$671_CMP [14] = $eq$cpu.v:843$119_Y
    Removing $eq cell `$procmux$671_CMP14' from module `\cpu'.
  Cell `$procmux$671_CMP15' is identical to cell `$procmux$477_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [15] = $procmux$477_CMP
    Removing $eq cell `$procmux$671_CMP15' from module `\cpu'.
  Cell `$procmux$671_CMP16' is identical to cell `$eq$cpu.v:843$118'.
    Redirecting output \Y: $procmux$671_CMP [16] = $eq$cpu.v:843$118_Y
    Removing $eq cell `$procmux$671_CMP16' from module `\cpu'.
  Cell `$procmux$671_CMP17' is identical to cell `$procmux$464_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [17] = $procmux$464_CMP
    Removing $eq cell `$procmux$671_CMP17' from module `\cpu'.
  Cell `$procmux$671_CMP2' is identical to cell `$procmux$469_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [2] = $procmux$469_CMP
    Removing $eq cell `$procmux$671_CMP2' from module `\cpu'.
  Cell `$procmux$671_CMP3' is identical to cell `$procmux$468_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [3] = $procmux$468_CMP
    Removing $eq cell `$procmux$671_CMP3' from module `\cpu'.
  Cell `$procmux$671_CMP4' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $procmux$671_CMP [4] = $eq$cpu.v:747$81_Y
    Removing $eq cell `$procmux$671_CMP4' from module `\cpu'.
  Cell `$procmux$671_CMP5' is identical to cell `$procmux$489_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [5] = $procmux$489_CMP
    Removing $eq cell `$procmux$671_CMP5' from module `\cpu'.
  Cell `$procmux$671_CMP6' is identical to cell `$eq$cpu.v:615$60'.
    Redirecting output \Y: $procmux$671_CMP [6] = $eq$cpu.v:615$60_Y
    Removing $eq cell `$procmux$671_CMP6' from module `\cpu'.
  Cell `$procmux$671_CMP7' is identical to cell `$eq$cpu.v:615$58'.
    Redirecting output \Y: $procmux$671_CMP [7] = $eq$cpu.v:615$58_Y
    Removing $eq cell `$procmux$671_CMP7' from module `\cpu'.
  Cell `$procmux$671_CMP8' is identical to cell `$eq$cpu.v:533$46'.
    Redirecting output \Y: $procmux$671_CMP [8] = $eq$cpu.v:533$46_Y
    Removing $eq cell `$procmux$671_CMP8' from module `\cpu'.
  Cell `$procmux$671_CMP9' is identical to cell `$procmux$472_CMP0'.
    Redirecting output \Y: $procmux$671_CMP [9] = $procmux$472_CMP
    Removing $eq cell `$procmux$671_CMP9' from module `\cpu'.
  Cell `$procmux$674_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$674_CMP [0] = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$674_CMP0' from module `\cpu'.
  Cell `$procmux$674_CMP1' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$674_CMP [1] = $procmux$494_CMP
    Removing $eq cell `$procmux$674_CMP1' from module `\cpu'.
  Cell `$procmux$675_CMP0' is identical to cell `$eq$cpu.v:575$52'.
    Redirecting output \Y: $procmux$675_CMP = $eq$cpu.v:575$52_Y
    Removing $eq cell `$procmux$675_CMP0' from module `\cpu'.
  Cell `$procmux$676_CMP0' is identical to cell `$procmux$459_CMP0'.
    Redirecting output \Y: $procmux$676_CMP = $procmux$459_CMP
    Removing $eq cell `$procmux$676_CMP0' from module `\cpu'.
  Cell `$procmux$677_CMP0' is identical to cell `$procmux$460_CMP0'.
    Redirecting output \Y: $procmux$677_CMP [0] = $procmux$460_CMP
    Removing $eq cell `$procmux$677_CMP0' from module `\cpu'.
  Cell `$procmux$677_CMP1' is identical to cell `$eq$cpu.v:615$60'.
    Redirecting output \Y: $procmux$677_CMP [1] = $eq$cpu.v:615$60_Y
    Removing $eq cell `$procmux$677_CMP1' from module `\cpu'.
  Cell `$procmux$678_CMP0' is identical to cell `$eq$cpu.v:615$58'.
    Redirecting output \Y: $procmux$678_CMP [0] = $eq$cpu.v:615$58_Y
    Removing $eq cell `$procmux$678_CMP0' from module `\cpu'.
  Cell `$procmux$678_CMP1' is identical to cell `$procmux$497_CMP0'.
    Redirecting output \Y: $procmux$678_CMP [1] = $procmux$497_CMP
    Removing $eq cell `$procmux$678_CMP1' from module `\cpu'.
  Cell `$procmux$678_CMP10' is identical to cell `$procmux$485_CMP0'.
    Redirecting output \Y: $procmux$678_CMP [10] = $procmux$485_CMP
    Removing $eq cell `$procmux$678_CMP10' from module `\cpu'.
  Cell `$procmux$678_CMP11' is identical to cell `$eq$cpu.v:843$119'.
    Redirecting output \Y: $procmux$678_CMP [11] = $eq$cpu.v:843$119_Y
    Removing $eq cell `$procmux$678_CMP11' from module `\cpu'.
  Cell `$procmux$678_CMP12' is identical to cell `$procmux$477_CMP0'.
    Redirecting output \Y: $procmux$678_CMP [12] = $procmux$477_CMP
    Removing $eq cell `$procmux$678_CMP12' from module `\cpu'.
  Cell `$procmux$678_CMP2' is identical to cell `$procmux$490_CMP0'.
    Redirecting output \Y: $procmux$678_CMP [2] = $procmux$490_CMP
    Removing $eq cell `$procmux$678_CMP2' from module `\cpu'.
  Cell `$procmux$678_CMP3' is identical to cell `$procmux$493_CMP0'.
    Redirecting output \Y: $procmux$678_CMP [3] = $procmux$493_CMP
    Removing $eq cell `$procmux$678_CMP3' from module `\cpu'.
  Cell `$procmux$678_CMP4' is identical to cell `$procmux$469_CMP0'.
    Redirecting output \Y: $procmux$678_CMP [4] = $procmux$469_CMP
    Removing $eq cell `$procmux$678_CMP4' from module `\cpu'.
  Cell `$procmux$678_CMP5' is identical to cell `$procmux$464_CMP0'.
    Redirecting output \Y: $procmux$678_CMP [5] = $procmux$464_CMP
    Removing $eq cell `$procmux$678_CMP5' from module `\cpu'.
  Cell `$procmux$678_CMP6' is identical to cell `$eq$cpu.v:533$46'.
    Redirecting output \Y: $procmux$678_CMP [6] = $eq$cpu.v:533$46_Y
    Removing $eq cell `$procmux$678_CMP6' from module `\cpu'.
  Cell `$procmux$678_CMP7' is identical to cell `$procmux$471_CMP0'.
    Redirecting output \Y: $procmux$678_CMP [7] = $procmux$471_CMP
    Removing $eq cell `$procmux$678_CMP7' from module `\cpu'.
  Cell `$procmux$678_CMP8' is identical to cell `$eq$cpu.v:1083$171'.
    Redirecting output \Y: $procmux$678_CMP [8] = $eq$cpu.v:1083$171_Y
    Removing $eq cell `$procmux$678_CMP8' from module `\cpu'.
  Cell `$procmux$678_CMP9' is identical to cell `$eq$cpu.v:843$118'.
    Redirecting output \Y: $procmux$678_CMP [9] = $eq$cpu.v:843$118_Y
    Removing $eq cell `$procmux$678_CMP9' from module `\cpu'.
  Cell `$procmux$679_CMP0' is identical to cell `$procmux$472_CMP0'.
    Redirecting output \Y: $procmux$679_CMP [0] = $procmux$472_CMP
    Removing $eq cell `$procmux$679_CMP0' from module `\cpu'.
  Cell `$procmux$679_CMP1' is identical to cell `$procmux$463_CMP0'.
    Redirecting output \Y: $procmux$679_CMP [1] = $procmux$463_CMP
    Removing $eq cell `$procmux$679_CMP1' from module `\cpu'.
  Cell `$procmux$679_CMP2' is identical to cell `$procmux$468_CMP0'.
    Redirecting output \Y: $procmux$679_CMP [2] = $procmux$468_CMP
    Removing $eq cell `$procmux$679_CMP2' from module `\cpu'.
  Cell `$procmux$679_CMP3' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $procmux$679_CMP [3] = $eq$cpu.v:747$81_Y
    Removing $eq cell `$procmux$679_CMP3' from module `\cpu'.
  Cell `$procmux$679_CMP4' is identical to cell `$procmux$452_CMP0'.
    Redirecting output \Y: $procmux$679_CMP [4] = $procmux$452_CMP
    Removing $eq cell `$procmux$679_CMP4' from module `\cpu'.
  Cell `$procmux$679_CMP5' is identical to cell `$procmux$451_CMP0'.
    Redirecting output \Y: $procmux$679_CMP [5] = $procmux$451_CMP
    Removing $eq cell `$procmux$679_CMP5' from module `\cpu'.
  Cell `$procmux$679_CMP6' is identical to cell `$procmux$489_CMP0'.
    Redirecting output \Y: $procmux$679_CMP [6] = $procmux$489_CMP
    Removing $eq cell `$procmux$679_CMP6' from module `\cpu'.
  Cell `$procmux$688_CMP0' is identical to cell `$procmux$477_CMP0'.
    Redirecting output \Y: $procmux$688_CMP [0] = $procmux$477_CMP
    Removing $eq cell `$procmux$688_CMP0' from module `\cpu'.
  Cell `$procmux$688_CMP1' is identical to cell `$eq$cpu.v:1083$171'.
    Redirecting output \Y: $procmux$688_CMP [1] = $eq$cpu.v:1083$171_Y
    Removing $eq cell `$procmux$688_CMP1' from module `\cpu'.
  Cell `$procmux$688_CMP2' is identical to cell `$procmux$452_CMP0'.
    Redirecting output \Y: $procmux$688_CMP [2] = $procmux$452_CMP
    Removing $eq cell `$procmux$688_CMP2' from module `\cpu'.
  Cell `$procmux$688_CMP3' is identical to cell `$procmux$451_CMP0'.
    Redirecting output \Y: $procmux$688_CMP [3] = $procmux$451_CMP
    Removing $eq cell `$procmux$688_CMP3' from module `\cpu'.
  Cell `$procmux$688_CMP4' is identical to cell `$eq$cpu.v:533$46'.
    Redirecting output \Y: $procmux$688_CMP [4] = $eq$cpu.v:533$46_Y
    Removing $eq cell `$procmux$688_CMP4' from module `\cpu'.
  Cell `$procmux$688_CMP5' is identical to cell `$procmux$472_CMP0'.
    Redirecting output \Y: $procmux$688_CMP [5] = $procmux$472_CMP
    Removing $eq cell `$procmux$688_CMP5' from module `\cpu'.
  Cell `$procmux$689_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$689_CMP [0] = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$689_CMP0' from module `\cpu'.
  Cell `$procmux$689_CMP1' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$689_CMP [1] = $procmux$494_CMP
    Removing $eq cell `$procmux$689_CMP1' from module `\cpu'.
  Cell `$procmux$690_CMP0' is identical to cell `$eq$cpu.v:575$52'.
    Redirecting output \Y: $procmux$690_CMP [0] = $eq$cpu.v:575$52_Y
    Removing $eq cell `$procmux$690_CMP0' from module `\cpu'.
  Cell `$procmux$690_CMP1' is identical to cell `$eq$cpu.v:615$58'.
    Redirecting output \Y: $procmux$690_CMP [1] = $eq$cpu.v:615$58_Y
    Removing $eq cell `$procmux$690_CMP1' from module `\cpu'.
  Cell `$procmux$691_CMP0' is identical to cell `$procmux$459_CMP0'.
    Redirecting output \Y: $procmux$691_CMP = $procmux$459_CMP
    Removing $eq cell `$procmux$691_CMP0' from module `\cpu'.
  Cell `$procmux$692_CMP0' is identical to cell `$eq$cpu.v:615$60'.
    Redirecting output \Y: $procmux$692_CMP = $eq$cpu.v:615$60_Y
    Removing $eq cell `$procmux$692_CMP0' from module `\cpu'.
  Cell `$procmux$695_CMP0' is identical to cell `$eq$cpu.v:1083$171'.
    Redirecting output \Y: $procmux$695_CMP [0] = $eq$cpu.v:1083$171_Y
    Removing $eq cell `$procmux$695_CMP0' from module `\cpu'.
  Cell `$procmux$695_CMP1' is identical to cell `$eq$cpu.v:1215$218'.
    Redirecting output \Y: $procmux$695_CMP [1] = $eq$cpu.v:1215$218_Y
    Removing $eq cell `$procmux$695_CMP1' from module `\cpu'.
  Cell `$procmux$695_CMP10' is identical to cell `$procmux$462_CMP0'.
    Redirecting output \Y: $procmux$695_CMP [10] = $procmux$462_CMP
    Removing $eq cell `$procmux$695_CMP10' from module `\cpu'.
  Cell `$procmux$695_CMP2' is identical to cell `$eq$cpu.v:533$46'.
    Redirecting output \Y: $procmux$695_CMP [2] = $eq$cpu.v:533$46_Y
    Removing $eq cell `$procmux$695_CMP2' from module `\cpu'.
  Cell `$procmux$695_CMP3' is identical to cell `$procmux$471_CMP0'.
    Redirecting output \Y: $procmux$695_CMP [3] = $procmux$471_CMP
    Removing $eq cell `$procmux$695_CMP3' from module `\cpu'.
  Cell `$procmux$695_CMP4' is identical to cell `$eq$cpu.v:843$118'.
    Redirecting output \Y: $procmux$695_CMP [4] = $eq$cpu.v:843$118_Y
    Removing $eq cell `$procmux$695_CMP4' from module `\cpu'.
  Cell `$procmux$695_CMP5' is identical to cell `$procmux$475_CMP0'.
    Redirecting output \Y: $procmux$695_CMP [5] = $procmux$475_CMP
    Removing $eq cell `$procmux$695_CMP5' from module `\cpu'.
  Cell `$procmux$695_CMP6' is identical to cell `$procmux$477_CMP0'.
    Redirecting output \Y: $procmux$695_CMP [6] = $procmux$477_CMP
    Removing $eq cell `$procmux$695_CMP6' from module `\cpu'.
  Cell `$procmux$695_CMP7' is identical to cell `$procmux$469_CMP0'.
    Redirecting output \Y: $procmux$695_CMP [7] = $procmux$469_CMP
    Removing $eq cell `$procmux$695_CMP7' from module `\cpu'.
  Cell `$procmux$695_CMP8' is identical to cell `$procmux$466_CMP0'.
    Redirecting output \Y: $procmux$695_CMP [8] = $procmux$466_CMP
    Removing $eq cell `$procmux$695_CMP8' from module `\cpu'.
  Cell `$procmux$695_CMP9' is identical to cell `$procmux$464_CMP0'.
    Redirecting output \Y: $procmux$695_CMP [9] = $procmux$464_CMP
    Removing $eq cell `$procmux$695_CMP9' from module `\cpu'.
  Cell `$procmux$696_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$696_CMP = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$696_CMP0' from module `\cpu'.
  Cell `$procmux$697_CMP0' is identical to cell `$procmux$485_CMP0'.
    Redirecting output \Y: $procmux$697_CMP [0] = $procmux$485_CMP
    Removing $eq cell `$procmux$697_CMP0' from module `\cpu'.
  Cell `$procmux$697_CMP1' is identical to cell `$procmux$490_CMP0'.
    Redirecting output \Y: $procmux$697_CMP [1] = $procmux$490_CMP
    Removing $eq cell `$procmux$697_CMP1' from module `\cpu'.
  Cell `$procmux$697_CMP2' is identical to cell `$procmux$497_CMP0'.
    Redirecting output \Y: $procmux$697_CMP [2] = $procmux$497_CMP
    Removing $eq cell `$procmux$697_CMP2' from module `\cpu'.
  Cell `$procmux$697_CMP3' is identical to cell `$procmux$493_CMP0'.
    Redirecting output \Y: $procmux$697_CMP [3] = $procmux$493_CMP
    Removing $eq cell `$procmux$697_CMP3' from module `\cpu'.
  Cell `$procmux$718_CMP0' is identical to cell `$procmux$712_CMP0'.
    Redirecting output \Y: $procmux$718_CMP = $procmux$712_CMP
    Removing $not cell `$procmux$718_CMP0' from module `\cpu'.
  Cell `$procmux$721_CMP0' is identical to cell `$procmux$475_CMP0'.
    Redirecting output \Y: $procmux$721_CMP [0] = $procmux$475_CMP
    Removing $eq cell `$procmux$721_CMP0' from module `\cpu'.
  Cell `$procmux$721_CMP1' is identical to cell `$procmux$462_CMP0'.
    Redirecting output \Y: $procmux$721_CMP [1] = $procmux$462_CMP
    Removing $eq cell `$procmux$721_CMP1' from module `\cpu'.
  Cell `$procmux$721_CMP2' is identical to cell `$procmux$466_CMP0'.
    Redirecting output \Y: $procmux$721_CMP [2] = $procmux$466_CMP
    Removing $eq cell `$procmux$721_CMP2' from module `\cpu'.
  Cell `$procmux$721_CMP3' is identical to cell `$eq$cpu.v:1215$218'.
    Redirecting output \Y: $procmux$721_CMP [3] = $eq$cpu.v:1215$218_Y
    Removing $eq cell `$procmux$721_CMP3' from module `\cpu'.
  Cell `$procmux$721_CMP4' is identical to cell `$eq$cpu.v:533$46'.
    Redirecting output \Y: $procmux$721_CMP [4] = $eq$cpu.v:533$46_Y
    Removing $eq cell `$procmux$721_CMP4' from module `\cpu'.
  Cell `$procmux$721_CMP5' is identical to cell `$procmux$471_CMP0'.
    Redirecting output \Y: $procmux$721_CMP [5] = $procmux$471_CMP
    Removing $eq cell `$procmux$721_CMP5' from module `\cpu'.
  Cell `$procmux$722_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$722_CMP = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$722_CMP0' from module `\cpu'.
  Cell `$procmux$725_CMP0' is identical to cell `$procmux$487_CMP0'.
    Redirecting output \Y: $procmux$725_CMP [0] = $procmux$487_CMP
    Removing $eq cell `$procmux$725_CMP0' from module `\cpu'.
  Cell `$procmux$725_CMP1' is identical to cell `$procmux$483_CMP0'.
    Redirecting output \Y: $procmux$725_CMP [1] = $procmux$483_CMP
    Removing $eq cell `$procmux$725_CMP1' from module `\cpu'.
  Cell `$procmux$725_CMP2' is identical to cell `$procmux$491_CMP0'.
    Redirecting output \Y: $procmux$725_CMP [2] = $procmux$491_CMP
    Removing $eq cell `$procmux$725_CMP2' from module `\cpu'.
  Cell `$procmux$725_CMP3' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$725_CMP [3] = $procmux$494_CMP
    Removing $eq cell `$procmux$725_CMP3' from module `\cpu'.
  Cell `$procmux$725_CMP4' is identical to cell `$procmux$496_CMP0'.
    Redirecting output \Y: $procmux$725_CMP [4] = $procmux$496_CMP
    Removing $eq cell `$procmux$725_CMP4' from module `\cpu'.
  Cell `$procmux$725_CMP5' is identical to cell `$procmux$498_CMP0'.
    Redirecting output \Y: $procmux$725_CMP [5] = $procmux$498_CMP
    Removing $eq cell `$procmux$725_CMP5' from module `\cpu'.
  Cell `$procmux$726_CMP0' is identical to cell `$eq$cpu.v:1083$171'.
    Redirecting output \Y: $procmux$726_CMP [0] = $eq$cpu.v:1083$171_Y
    Removing $eq cell `$procmux$726_CMP0' from module `\cpu'.
  Cell `$procmux$726_CMP1' is identical to cell `$procmux$452_CMP0'.
    Redirecting output \Y: $procmux$726_CMP [1] = $procmux$452_CMP
    Removing $eq cell `$procmux$726_CMP1' from module `\cpu'.
  Cell `$procmux$726_CMP2' is identical to cell `$procmux$451_CMP0'.
    Redirecting output \Y: $procmux$726_CMP [2] = $procmux$451_CMP
    Removing $eq cell `$procmux$726_CMP2' from module `\cpu'.
  Cell `$procmux$726_CMP3' is identical to cell `$eq$cpu.v:533$46'.
    Redirecting output \Y: $procmux$726_CMP [3] = $eq$cpu.v:533$46_Y
    Removing $eq cell `$procmux$726_CMP3' from module `\cpu'.
  Cell `$procmux$726_CMP4' is identical to cell `$procmux$472_CMP0'.
    Redirecting output \Y: $procmux$726_CMP [4] = $procmux$472_CMP
    Removing $eq cell `$procmux$726_CMP4' from module `\cpu'.
  Cell `$procmux$726_CMP5' is identical to cell `$procmux$477_CMP0'.
    Redirecting output \Y: $procmux$726_CMP [5] = $procmux$477_CMP
    Removing $eq cell `$procmux$726_CMP5' from module `\cpu'.
  Cell `$procmux$726_CMP6' is identical to cell `$eq$cpu.v:745$79'.
    Redirecting output \Y: $procmux$726_CMP [6] = $eq$cpu.v:745$79_Y
    Removing $eq cell `$procmux$726_CMP6' from module `\cpu'.
  Cell `$procmux$729_CMP0' is identical to cell `$procmux$451_CMP0'.
    Redirecting output \Y: $procmux$729_CMP = $procmux$451_CMP
    Removing $eq cell `$procmux$729_CMP0' from module `\cpu'.
  Cell `$procmux$730_CMP0' is identical to cell `$procmux$477_CMP0'.
    Redirecting output \Y: $procmux$730_CMP = $procmux$477_CMP
    Removing $eq cell `$procmux$730_CMP0' from module `\cpu'.
  Cell `$procmux$731_CMP0' is identical to cell `$procmux$472_CMP0'.
    Redirecting output \Y: $procmux$731_CMP [0] = $procmux$472_CMP
    Removing $eq cell `$procmux$731_CMP0' from module `\cpu'.
  Cell `$procmux$731_CMP1' is identical to cell `$procmux$452_CMP0'.
    Redirecting output \Y: $procmux$731_CMP [1] = $procmux$452_CMP
    Removing $eq cell `$procmux$731_CMP1' from module `\cpu'.
  Cell `$procmux$732_CMP0' is identical to cell `$eq$cpu.v:533$46'.
    Redirecting output \Y: $procmux$732_CMP [0] = $eq$cpu.v:533$46_Y
    Removing $eq cell `$procmux$732_CMP0' from module `\cpu'.
  Cell `$procmux$732_CMP1' is identical to cell `$eq$cpu.v:1083$171'.
    Redirecting output \Y: $procmux$732_CMP [1] = $eq$cpu.v:1083$171_Y
    Removing $eq cell `$procmux$732_CMP1' from module `\cpu'.
  Cell `$procmux$733_CMP0' is identical to cell `$eq$cpu.v:745$79'.
    Redirecting output \Y: $procmux$733_CMP = $eq$cpu.v:745$79_Y
    Removing $eq cell `$procmux$733_CMP0' from module `\cpu'.
  Cell `$procmux$742_CMP0' is identical to cell `$eq$cpu.v:615$58'.
    Redirecting output \Y: $procmux$742_CMP [0] = $eq$cpu.v:615$58_Y
    Removing $eq cell `$procmux$742_CMP0' from module `\cpu'.
  Cell `$procmux$742_CMP1' is identical to cell `$eq$cpu.v:615$60'.
    Redirecting output \Y: $procmux$742_CMP [1] = $eq$cpu.v:615$60_Y
    Removing $eq cell `$procmux$742_CMP1' from module `\cpu'.
  Cell `$procmux$742_CMP2' is identical to cell `$eq$cpu.v:745$79'.
    Redirecting output \Y: $procmux$742_CMP [2] = $eq$cpu.v:745$79_Y
    Removing $eq cell `$procmux$742_CMP2' from module `\cpu'.
  Cell `$procmux$743_CMP0' is identical to cell `$procmux$498_CMP0'.
    Redirecting output \Y: $procmux$743_CMP [0] = $procmux$498_CMP
    Removing $eq cell `$procmux$743_CMP0' from module `\cpu'.
  Cell `$procmux$743_CMP1' is identical to cell `$procmux$486_CMP0'.
    Redirecting output \Y: $procmux$743_CMP [1] = $procmux$486_CMP
    Removing $eq cell `$procmux$743_CMP1' from module `\cpu'.
  Cell `$procmux$744_CMP0' is identical to cell `$procmux$485_CMP0'.
    Redirecting output \Y: $procmux$744_CMP [0] = $procmux$485_CMP
    Removing $eq cell `$procmux$744_CMP0' from module `\cpu'.
  Cell `$procmux$744_CMP1' is identical to cell `$procmux$489_CMP0'.
    Redirecting output \Y: $procmux$744_CMP [1] = $procmux$489_CMP
    Removing $eq cell `$procmux$744_CMP1' from module `\cpu'.
  Cell `$procmux$744_CMP2' is identical to cell `$procmux$496_CMP0'.
    Redirecting output \Y: $procmux$744_CMP [2] = $procmux$496_CMP
    Removing $eq cell `$procmux$744_CMP2' from module `\cpu'.
  Cell `$procmux$744_CMP3' is identical to cell `$procmux$488_CMP0'.
    Redirecting output \Y: $procmux$744_CMP [3] = $procmux$488_CMP
    Removing $eq cell `$procmux$744_CMP3' from module `\cpu'.
  Cell `$procmux$745_CMP0' is identical to cell `$procmux$452_CMP0'.
    Redirecting output \Y: $procmux$745_CMP [0] = $procmux$452_CMP
    Removing $eq cell `$procmux$745_CMP0' from module `\cpu'.
  Cell `$procmux$745_CMP1' is identical to cell `$procmux$472_CMP0'.
    Redirecting output \Y: $procmux$745_CMP [1] = $procmux$472_CMP
    Removing $eq cell `$procmux$745_CMP1' from module `\cpu'.
  Cell `$procmux$745_CMP2' is identical to cell `$procmux$475_CMP0'.
    Redirecting output \Y: $procmux$745_CMP [2] = $procmux$475_CMP
    Removing $eq cell `$procmux$745_CMP2' from module `\cpu'.
  Cell `$procmux$745_CMP3' is identical to cell `$procmux$463_CMP0'.
    Redirecting output \Y: $procmux$745_CMP [3] = $procmux$463_CMP
    Removing $eq cell `$procmux$745_CMP3' from module `\cpu'.
  Cell `$procmux$745_CMP4' is identical to cell `$procmux$462_CMP0'.
    Redirecting output \Y: $procmux$745_CMP [4] = $procmux$462_CMP
    Removing $eq cell `$procmux$745_CMP4' from module `\cpu'.
  Cell `$procmux$745_CMP5' is identical to cell `$procmux$468_CMP0'.
    Redirecting output \Y: $procmux$745_CMP [5] = $procmux$468_CMP
    Removing $eq cell `$procmux$745_CMP5' from module `\cpu'.
  Cell `$procmux$745_CMP6' is identical to cell `$eq$cpu.v:747$81'.
    Redirecting output \Y: $procmux$745_CMP [6] = $eq$cpu.v:747$81_Y
    Removing $eq cell `$procmux$745_CMP6' from module `\cpu'.
  Cell `$procmux$745_CMP7' is identical to cell `$procmux$466_CMP0'.
    Redirecting output \Y: $procmux$745_CMP [7] = $procmux$466_CMP
    Removing $eq cell `$procmux$745_CMP7' from module `\cpu'.
  Cell `$procmux$745_CMP8' is identical to cell `$procmux$451_CMP0'.
    Redirecting output \Y: $procmux$745_CMP [8] = $procmux$451_CMP
    Removing $eq cell `$procmux$745_CMP8' from module `\cpu'.
  Cell `$procmux$746_CMP0' is identical to cell `$eq$cpu.v:533$46'.
    Redirecting output \Y: $procmux$746_CMP [0] = $eq$cpu.v:533$46_Y
    Removing $eq cell `$procmux$746_CMP0' from module `\cpu'.
  Cell `$procmux$746_CMP1' is identical to cell `$procmux$477_CMP0'.
    Redirecting output \Y: $procmux$746_CMP [1] = $procmux$477_CMP
    Removing $eq cell `$procmux$746_CMP1' from module `\cpu'.
  Cell `$procmux$746_CMP2' is identical to cell `$procmux$464_CMP0'.
    Redirecting output \Y: $procmux$746_CMP [2] = $procmux$464_CMP
    Removing $eq cell `$procmux$746_CMP2' from module `\cpu'.
  Cell `$procmux$746_CMP3' is identical to cell `$procmux$469_CMP0'.
    Redirecting output \Y: $procmux$746_CMP [3] = $procmux$469_CMP
    Removing $eq cell `$procmux$746_CMP3' from module `\cpu'.
  Cell `$procmux$746_CMP4' is identical to cell `$eq$cpu.v:1083$171'.
    Redirecting output \Y: $procmux$746_CMP [4] = $eq$cpu.v:1083$171_Y
    Removing $eq cell `$procmux$746_CMP4' from module `\cpu'.
  Cell `$procmux$747_CMP0' is identical to cell `$procmux$459_CMP0'.
    Redirecting output \Y: $procmux$747_CMP = $procmux$459_CMP
    Removing $eq cell `$procmux$747_CMP0' from module `\cpu'.
  Cell `$procmux$748_CMP0' is identical to cell `$procmux$458_CMP0'.
    Redirecting output \Y: $procmux$748_CMP [0] = $procmux$458_CMP
    Removing $eq cell `$procmux$748_CMP0' from module `\cpu'.
  Cell `$procmux$748_CMP1' is identical to cell `$procmux$483_CMP0'.
    Redirecting output \Y: $procmux$748_CMP [1] = $procmux$483_CMP
    Removing $eq cell `$procmux$748_CMP1' from module `\cpu'.
  Cell `$procmux$748_CMP2' is identical to cell `$procmux$491_CMP0'.
    Redirecting output \Y: $procmux$748_CMP [2] = $procmux$491_CMP
    Removing $eq cell `$procmux$748_CMP2' from module `\cpu'.
  Cell `$procmux$749_CMP0' is identical to cell `$procmux$492_CMP0'.
    Redirecting output \Y: $procmux$749_CMP [0] = $procmux$492_CMP
    Removing $eq cell `$procmux$749_CMP0' from module `\cpu'.
  Cell `$procmux$749_CMP1' is identical to cell `$procmux$487_CMP0'.
    Redirecting output \Y: $procmux$749_CMP [1] = $procmux$487_CMP
    Removing $eq cell `$procmux$749_CMP1' from module `\cpu'.
  Cell `$procmux$749_CMP2' is identical to cell `$procmux$484_CMP0'.
    Redirecting output \Y: $procmux$749_CMP [2] = $procmux$484_CMP
    Removing $eq cell `$procmux$749_CMP2' from module `\cpu'.
  Cell `$procmux$749_CMP3' is identical to cell `$procmux$456_CMP0'.
    Redirecting output \Y: $procmux$749_CMP [3] = $procmux$456_CMP
    Removing $eq cell `$procmux$749_CMP3' from module `\cpu'.
  Cell `$procmux$749_CMP4' is identical to cell `$procmux$454_CMP0'.
    Redirecting output \Y: $procmux$749_CMP [4] = $procmux$454_CMP
    Removing $eq cell `$procmux$749_CMP4' from module `\cpu'.
  Cell `$procmux$749_CMP5' is identical to cell `$procmux$465_CMP0'.
    Redirecting output \Y: $procmux$749_CMP [5] = $procmux$465_CMP
    Removing $eq cell `$procmux$749_CMP5' from module `\cpu'.
  Cell `$procmux$749_CMP6' is identical to cell `$procmux$494_CMP0'.
    Redirecting output \Y: $procmux$749_CMP [6] = $procmux$494_CMP
    Removing $eq cell `$procmux$749_CMP6' from module `\cpu'.
  Cell `$procmux$760_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$760_CMP = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$760_CMP0' from module `\cpu'.
  Cell `$procmux$763_CMP0' is identical to cell `$procmux$459_CMP0'.
    Redirecting output \Y: $procmux$763_CMP = $procmux$459_CMP
    Removing $eq cell `$procmux$763_CMP0' from module `\cpu'.
  Cell `$procmux$764_CMP0' is identical to cell `$procmux$495_CMP0'.
    Redirecting output \Y: $procmux$764_CMP [0] = $procmux$495_CMP
    Removing $logic_not cell `$procmux$764_CMP0' from module `\cpu'.
  Cell `$procmux$764_CMP1' is identical to cell `$procmux$493_CMP0'.
    Redirecting output \Y: $procmux$764_CMP [1] = $procmux$493_CMP
    Removing $eq cell `$procmux$764_CMP1' from module `\cpu'.
  Cell `$procmux$764_CMP2' is identical to cell `$eq$cpu.v:575$52'.
    Redirecting output \Y: $procmux$764_CMP [2] = $eq$cpu.v:575$52_Y
    Removing $eq cell `$procmux$764_CMP2' from module `\cpu'.
  Cell `$procmux$764_CMP3' is identical to cell `$procmux$460_CMP0'.
    Redirecting output \Y: $procmux$764_CMP [3] = $procmux$460_CMP
    Removing $eq cell `$procmux$764_CMP3' from module `\cpu'.
  Cell `$procmux$764_CMP4' is identical to cell `$procmux$458_CMP0'.
    Redirecting output \Y: $procmux$764_CMP [4] = $procmux$458_CMP
    Removing $eq cell `$procmux$764_CMP4' from module `\cpu'.
  Cell `$procmux$764_CMP5' is identical to cell `$eq$cpu.v:1215$218'.
    Redirecting output \Y: $procmux$764_CMP [5] = $eq$cpu.v:1215$218_Y
    Removing $eq cell `$procmux$764_CMP5' from module `\cpu'.
  Cell `$procmux$764_CMP6' is identical to cell `$procmux$454_CMP0'.
    Redirecting output \Y: $procmux$764_CMP [6] = $procmux$454_CMP
    Removing $eq cell `$procmux$764_CMP6' from module `\cpu'.
  Cell `$procmux$764_CMP7' is identical to cell `$procmux$456_CMP0'.
    Redirecting output \Y: $procmux$764_CMP [7] = $procmux$456_CMP
    Removing $eq cell `$procmux$764_CMP7' from module `\cpu'.
  Cell `$procmux$764_CMP8' is identical to cell `$procmux$465_CMP0'.
    Redirecting output \Y: $procmux$764_CMP [8] = $procmux$465_CMP
    Removing $eq cell `$procmux$764_CMP8' from module `\cpu'.
  Cell `$procmux$764_CMP9' is identical to cell `$procmux$461_CMP0'.
    Redirecting output \Y: $procmux$764_CMP [9] = $procmux$461_CMP
    Removing $eq cell `$procmux$764_CMP9' from module `\cpu'.
  Cell `$procmux$765_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$765_CMP = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$765_CMP0' from module `\cpu'.
  Cell `$procmux$775_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$775_CMP = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$775_CMP0' from module `\cpu'.
  Cell `$procmux$778_CMP0' is identical to cell `$procmux$451_CMP0'.
    Redirecting output \Y: $procmux$778_CMP = $procmux$451_CMP
    Removing $eq cell `$procmux$778_CMP0' from module `\cpu'.
  Cell `$procmux$779_CMP0' is identical to cell `$procmux$458_CMP0'.
    Redirecting output \Y: $procmux$779_CMP = $procmux$458_CMP
    Removing $eq cell `$procmux$779_CMP0' from module `\cpu'.
  Cell `$procmux$780_CMP0' is identical to cell `$procmux$459_CMP0'.
    Redirecting output \Y: $procmux$780_CMP = $procmux$459_CMP
    Removing $eq cell `$procmux$780_CMP0' from module `\cpu'.
  Cell `$procmux$781_CMP0' is identical to cell `$procmux$456_CMP0'.
    Redirecting output \Y: $procmux$781_CMP [0] = $procmux$456_CMP
    Removing $eq cell `$procmux$781_CMP0' from module `\cpu'.
  Cell `$procmux$781_CMP1' is identical to cell `$procmux$454_CMP0'.
    Redirecting output \Y: $procmux$781_CMP [1] = $procmux$454_CMP
    Removing $eq cell `$procmux$781_CMP1' from module `\cpu'.
  Cell `$procmux$781_CMP2' is identical to cell `$procmux$470_CMP0'.
    Redirecting output \Y: $procmux$781_CMP [2] = $procmux$470_CMP
    Removing $eq cell `$procmux$781_CMP2' from module `\cpu'.
  Cell `$procmux$781_CMP3' is identical to cell `$procmux$461_CMP0'.
    Redirecting output \Y: $procmux$781_CMP [3] = $procmux$461_CMP
    Removing $eq cell `$procmux$781_CMP3' from module `\cpu'.
  Cell `$procmux$781_CMP4' is identical to cell `$procmux$465_CMP0'.
    Redirecting output \Y: $procmux$781_CMP [4] = $procmux$465_CMP
    Removing $eq cell `$procmux$781_CMP4' from module `\cpu'.
  Cell `$procmux$782_CMP0' is identical to cell `$eq$cpu.v:1010$152'.
    Redirecting output \Y: $procmux$782_CMP = $eq$cpu.v:1010$152_Y
    Removing $eq cell `$procmux$782_CMP0' from module `\cpu'.
  Cell `$logic_and$cpu.v:1092$178' is identical to cell `$logic_and$cpu.v:1083$173'.
    Redirecting output \Y: $logic_and$cpu.v:1092$178_Y = $logic_and$cpu.v:1083$173_Y
    Removing $logic_and cell `$logic_and$cpu.v:1092$178' from module `\cpu'.
  Cell `$procmux$669_ANY' is identical to cell `$procmux$665_ANY'.
    Redirecting output \Y: $procmux$669_CTRL = $procmux$665_CTRL
    Removing $reduce_or cell `$procmux$669_ANY' from module `\cpu'.
  Cell `$and$cpu.v:298$5' is identical to cell `$and$cpu.v:850$123'.
    Redirecting output \Y: $and$cpu.v:298$5_Y = $and$cpu.v:850$123_Y
    Removing $and cell `$and$cpu.v:298$5' from module `\cpu'.
  Cell `$and$cpu.v:325$11' is identical to cell `$and$cpu.v:850$123'.
    Redirecting output \Y: $and$cpu.v:325$11_Y = $and$cpu.v:850$123_Y
    Removing $and cell `$and$cpu.v:325$11' from module `\cpu'.
  Cell `$procmux$674_ANY' is identical to cell `$procmux$665_ANY'.
    Redirecting output \Y: $procmux$674_CTRL = $procmux$665_CTRL
    Removing $reduce_or cell `$procmux$674_ANY' from module `\cpu'.
  Cell `$or$cpu.v:325$12' is identical to cell `$or$cpu.v:298$6'.
    Redirecting output \Y: $or$cpu.v:325$12_Y = $or$cpu.v:298$6_Y
    Removing $or cell `$or$cpu.v:325$12' from module `\cpu'.
  Cell `$or$cpu.v:850$124' is identical to cell `$or$cpu.v:298$6'.
    Redirecting output \Y: $or$cpu.v:850$124_Y = $or$cpu.v:298$6_Y
    Removing $or cell `$or$cpu.v:850$124' from module `\cpu'.
  Cell `$procmux$689_ANY' is identical to cell `$procmux$665_ANY'.
    Redirecting output \Y: $procmux$689_CTRL = $procmux$665_CTRL
    Removing $reduce_or cell `$procmux$689_ANY' from module `\cpu'.
  Cell `$and$cpu.v:784$100' is identical to cell `$and$cpu.v:772$92'.
    Redirecting output \Y: $and$cpu.v:784$100_Y = $and$cpu.v:772$92_Y
    Removing $and cell `$and$cpu.v:784$100' from module `\cpu'.
  Cell `$or$cpu.v:784$101' is identical to cell `$or$cpu.v:772$93'.
    Redirecting output \Y: $or$cpu.v:784$101_Y = $or$cpu.v:772$93_Y
    Removing $or cell `$or$cpu.v:784$101' from module `\cpu'.
Removed a total of 267 cells.

4.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$259 (pure)
    Root of a mux tree: $procmux$262 (pure)
    Root of a mux tree: $procmux$265 (pure)
    Root of a mux tree: $procmux$268 (pure)
    Root of a mux tree: $procmux$271 (pure)
    Root of a mux tree: $procmux$274 (pure)
    Root of a mux tree: $procmux$276 (pure)
    Root of a mux tree: $procmux$282 (pure)
    Root of a mux tree: $ternary$ALU.v:50$234 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$417 (pure)
    Root of a mux tree: $procmux$425 (pure)
    Root of a mux tree: $procmux$433 (pure)
    Root of a mux tree: $procmux$439 (pure)
    Root of a mux tree: $procmux$445 (pure)
    Root of a mux tree: $procmux$526 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$541 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$568 (pure)
    Root of a mux tree: $procmux$583 (pure)
    Root of a mux tree: $procmux$604 (pure)
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$637 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$661 (pure)
    Root of a mux tree: $procmux$668 (pure)
    Root of a mux tree: $procmux$405 (pure)
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$681 (pure)
    Root of a mux tree: $procmux$684 (pure)
    Root of a mux tree: $procmux$687 (pure)
    Root of a mux tree: $procmux$411 (pure)
    Root of a mux tree: $procmux$694 (pure)
    Root of a mux tree: $procmux$699 (pure)
    Root of a mux tree: $procmux$702 (pure)
    Root of a mux tree: $procmux$705 (pure)
    Root of a mux tree: $procmux$707 (pure)
    Root of a mux tree: $procmux$713 (pure)
    Root of a mux tree: $procmux$720 (pure)
    Root of a mux tree: $procmux$724 (pure)
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$295 (pure)
    Root of a mux tree: $procmux$728 (pure)
    Root of a mux tree: $procmux$305 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$323 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$738 (pure)
    Root of a mux tree: $procmux$741 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$351 (pure)
    Root of a mux tree: $procmux$357 (pure)
    Root of a mux tree: $procmux$363 (pure)
    Root of a mux tree: $procmux$751 (pure)
    Root of a mux tree: $procmux$762 (pure)
    Root of a mux tree: $procmux$369 (pure)
    Root of a mux tree: $procmux$375 (pure)
    Root of a mux tree: $procmux$381 (pure)
    Root of a mux tree: $procmux$387 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $procmux$393 (pure)
    Root of a mux tree: $procmux$399 (pure)
    Root of a mux tree: $ternary$cpu.v:851$126 (pure)
    Root of a mux tree: $ternary$cpu.v:857$129
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$759.
    dead port 2/2 on $mux $procmux$774.
Removed 2 multiplexer ports.

4.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU.
    New input vector for $reduce_or cell $reduce_or$ALU.v:106$256: { \OUT [0] \OUT [1] \OUT [2] \OUT [3] \OUT [4] \OUT [5] \OUT [6] \OUT [7] }
  Optimizing cells in module \ALU.
  Optimizing cells in module \cpu.
    New input vector for $reduce_or cell $procmux$404_ANY: { $procmux$374_CMP [0] $procmux$404_CMP [1] }
    New input vector for $reduce_or cell $procmux$781_ANY: { $procmux$454_CMP $procmux$456_CMP $procmux$461_CMP $procmux$465_CMP $procmux$470_CMP }
    New input vector for $reduce_or cell $procmux$392_ANY: { $procmux$392_CMP [0] $procmux$392_CMP [1] }
    New input vector for $reduce_or cell $procmux$374_ANY: { $procmux$374_CMP [0] $procmux$374_CMP [1] }
    New input vector for $reduce_or cell $procmux$764_ANY: { $eq$cpu.v:575$52_Y $eq$cpu.v:1215$218_Y $procmux$454_CMP $procmux$456_CMP $procmux$458_CMP $procmux$460_CMP $procmux$461_CMP $procmux$465_CMP $procmux$493_CMP $procmux$495_CMP }
    New input vector for $reduce_or cell $procmux$368_ANY: { $procmux$347_CMP [4] $procmux$347_CMP [5] $procmux$368_CMP [2] }
    New input vector for $reduce_or cell $procmux$749_ANY: { $procmux$454_CMP $procmux$456_CMP $procmux$465_CMP $procmux$484_CMP $procmux$487_CMP $procmux$492_CMP $procmux$494_CMP }
    New input vector for $reduce_or cell $procmux$748_ANY: { $procmux$458_CMP $procmux$483_CMP $procmux$491_CMP }
    New input vector for $reduce_or cell $procmux$356_ANY: { $procmux$356_CMP [0] $procmux$356_CMP [1] }
    New input vector for $reduce_or cell $procmux$746_ANY: { $eq$cpu.v:533$46_Y $eq$cpu.v:1083$171_Y $procmux$464_CMP $procmux$469_CMP $procmux$477_CMP }
    New input vector for $reduce_or cell $procmux$347_ANY: { $procmux$347_CMP [0] $procmux$347_CMP [1] $procmux$347_CMP [2] $procmux$347_CMP [3] $procmux$347_CMP [4] $procmux$347_CMP [5] }
    New input vector for $reduce_or cell $procmux$745_ANY: { $eq$cpu.v:747$81_Y $procmux$451_CMP $procmux$452_CMP $procmux$462_CMP $procmux$463_CMP $procmux$466_CMP $procmux$468_CMP $procmux$472_CMP $procmux$475_CMP }
    New input vector for $reduce_or cell $procmux$346_ANY: { $procmux$346_CMP [0] $procmux$346_CMP [1] }
    New input vector for $reduce_or cell $procmux$744_ANY: { $procmux$485_CMP $procmux$488_CMP $procmux$489_CMP $procmux$496_CMP }
    New input vector for $reduce_or cell $procmux$742_ANY: { $eq$cpu.v:615$58_Y $eq$cpu.v:615$60_Y $eq$cpu.v:745$79_Y }
    New input vector for $reduce_or cell $procmux$732_ANY: { $eq$cpu.v:533$46_Y $eq$cpu.v:1083$171_Y }
    New input vector for $reduce_or cell $procmux$726_ANY: { $eq$cpu.v:533$46_Y $eq$cpu.v:745$79_Y $eq$cpu.v:1083$171_Y $procmux$451_CMP $procmux$452_CMP $procmux$472_CMP $procmux$477_CMP }
    New input vector for $reduce_or cell $procmux$725_ANY: { $procmux$483_CMP $procmux$487_CMP $procmux$491_CMP $procmux$494_CMP $procmux$496_CMP $procmux$498_CMP }
    New input vector for $reduce_or cell $procmux$721_ANY: { $eq$cpu.v:533$46_Y $eq$cpu.v:1215$218_Y $procmux$462_CMP $procmux$466_CMP $procmux$471_CMP $procmux$475_CMP }
    New input vector for $reduce_or cell $procmux$697_ANY: { $procmux$485_CMP $procmux$490_CMP $procmux$493_CMP $procmux$497_CMP }
    New input vector for $reduce_or cell $procmux$695_ANY: { $eq$cpu.v:533$46_Y $eq$cpu.v:843$118_Y $eq$cpu.v:1083$171_Y $eq$cpu.v:1215$218_Y $procmux$462_CMP $procmux$464_CMP $procmux$466_CMP $procmux$469_CMP $procmux$471_CMP $procmux$475_CMP $procmux$477_CMP }
    New input vector for $reduce_or cell $procmux$690_ANY: { $eq$cpu.v:575$52_Y $eq$cpu.v:615$58_Y }
    New input vector for $reduce_or cell $procmux$688_ANY: { $eq$cpu.v:533$46_Y $eq$cpu.v:1083$171_Y $procmux$451_CMP $procmux$452_CMP $procmux$472_CMP $procmux$477_CMP }
    New input vector for $reduce_or cell $procmux$679_ANY: { $eq$cpu.v:747$81_Y $procmux$451_CMP $procmux$452_CMP $procmux$463_CMP $procmux$468_CMP $procmux$472_CMP $procmux$489_CMP }
    New input vector for $reduce_or cell $procmux$416_ANY: { $procmux$416_CMP [0] $procmux$416_CMP [1] $procmux$416_CMP [2] }
    New input vector for $reduce_or cell $procmux$678_ANY: { $eq$cpu.v:533$46_Y $eq$cpu.v:615$58_Y $eq$cpu.v:843$118_Y $eq$cpu.v:843$119_Y $eq$cpu.v:1083$171_Y $procmux$464_CMP $procmux$469_CMP $procmux$471_CMP $procmux$477_CMP $procmux$485_CMP $procmux$490_CMP $procmux$493_CMP $procmux$497_CMP }
    New input vector for $reduce_or cell $procmux$410_ANY: { $procmux$410_CMP [0] $procmux$410_CMP [1] }
    New input vector for $reduce_or cell $procmux$671_ANY: { $eq$cpu.v:533$46_Y $eq$cpu.v:615$58_Y $eq$cpu.v:615$60_Y $eq$cpu.v:747$81_Y $eq$cpu.v:843$118_Y $eq$cpu.v:843$119_Y $eq$cpu.v:1083$171_Y $procmux$451_CMP $procmux$452_CMP $procmux$459_CMP $procmux$463_CMP $procmux$464_CMP $procmux$468_CMP $procmux$469_CMP $procmux$471_CMP $procmux$472_CMP $procmux$477_CMP $procmux$489_CMP }
    New input vector for $reduce_or cell $procmux$666_ANY: { $procmux$459_CMP $procmux$484_CMP $procmux$492_CMP }
    New input vector for $reduce_or cell $procmux$665_ANY: { $eq$cpu.v:1010$152_Y $procmux$494_CMP }
    New input vector for $reduce_or cell $procmux$662_ANY: { $eq$cpu.v:747$81_Y $eq$cpu.v:843$118_Y $procmux$463_CMP $procmux$464_CMP $procmux$468_CMP $procmux$469_CMP $procmux$486_CMP $procmux$489_CMP }
    New input vector for $reduce_or cell $procmux$438_ANY: { $procmux$347_CMP [1] $procmux$424_CMP $procmux$438_CMP [0] $procmux$438_CMP [1] $procmux$438_CMP [2] $procmux$438_CMP [3] $procmux$438_CMP [5] $procmux$438_CMP [7] $procmux$438_CMP [8] }
    New input vector for $reduce_or cell $procmux$432_ANY: { $procmux$347_CMP [1] $procmux$432_CMP [0] $procmux$432_CMP [2] }
    New input vector for $reduce_or cell $procmux$431_ANY: { $procmux$431_CMP [0] $procmux$431_CMP [1] }
    New input vector for $reduce_or cell $procmux$430_ANY: { $procmux$422_CMP [3] $procmux$430_CMP [1] $procmux$430_CMP [2] }
    New input vector for $reduce_or cell $procmux$423_ANY: { $procmux$347_CMP [1] $procmux$423_CMP [0] $procmux$423_CMP [1] $procmux$423_CMP [2] }
    New input vector for $reduce_or cell $procmux$422_ANY: { $procmux$422_CMP [0] $procmux$422_CMP [1] $procmux$422_CMP [2] $procmux$422_CMP [3] }
    New ctrl vector for $pmux cell $procmux$449: { $eq$cpu.v:1010$152_Y $procmux$498_CMP $procmux$497_CMP $procmux$496_CMP $procmux$495_CMP $procmux$494_CMP $procmux$493_CMP $procmux$492_CMP $procmux$491_CMP $procmux$490_CMP $procmux$489_CMP $procmux$488_CMP $procmux$486_CMP $procmux$485_CMP $procmux$484_CMP $eq$cpu.v:615$60_Y $eq$cpu.v:843$119_Y $eq$cpu.v:843$118_Y $procmux$475_CMP $eq$cpu.v:533$46_Y $procmux$472_CMP $procmux$471_CMP $procmux$469_CMP $procmux$468_CMP $eq$cpu.v:747$81_Y $procmux$466_CMP $procmux$464_CMP $procmux$463_CMP $procmux$462_CMP $auto$opt_reduce.cc:132:opt_mux$842 $procmux$460_CMP $procmux$459_CMP $procmux$457_CMP $auto$opt_reduce.cc:132:opt_mux$840 $procmux$455_CMP $eq$cpu.v:1083$171_Y $procmux$452_CMP $procmux$451_CMP $auto$opt_reduce.cc:132:opt_mux$838 }
    New ctrl vector for $pmux cell $procmux$500: { $procmux$524_CMP $procmux$523_CMP $procmux$521_CMP $procmux$520_CMP $procmux$519_CMP $procmux$518_CMP $procmux$431_CMP [0] $procmux$516_CMP $procmux$511_CMP $procmux$510_CMP $auto$opt_reduce.cc:132:opt_mux$850 $auto$opt_reduce.cc:132:opt_mux$848 $procmux$506_CMP $procmux$416_CMP [0] $procmux$504_CMP $auto$opt_reduce.cc:132:opt_mux$846 $auto$opt_reduce.cc:132:opt_mux$844 }
    New ctrl vector for $pmux cell $procmux$687: { $procmux$459_CMP $auto$opt_reduce.cc:132:opt_mux$852 $procmux$665_CTRL $procmux$688_CTRL }
    Consolidated identical input bits for $mux cell $procmux$699:
      Old ports: A=8'00000000, B=8'11111111, Y=$0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44
      New ports: A=1'0, B=1'1, Y=$0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [0]
      New connections: $0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [7:1] = { $0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [0] $0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [0] $0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [0] $0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [0] $0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [0] $0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [0] $0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [0] }
    New ctrl vector for $pmux cell $procmux$707: { $procmux$711_CMP $auto$opt_reduce.cc:132:opt_mux$854 $procmux$708_CMP }
    New ctrl vector for $pmux cell $procmux$713: { $procmux$717_CMP $auto$opt_reduce.cc:132:opt_mux$856 $procmux$714_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$837: { $eq$cpu.v:1215$218_Y $procmux$454_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$839: { $eq$cpu.v:575$52_Y $eq$cpu.v:615$58_Y $procmux$456_CMP $procmux$458_CMP $procmux$465_CMP $procmux$474_CMP $procmux$477_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$841: { $eq$cpu.v:745$79_Y $procmux$461_CMP $procmux$470_CMP $procmux$483_CMP $procmux$487_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$843: { $procmux$501_CMP $procmux$512_CMP $procmux$515_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$845: { $procmux$502_CMP $procmux$503_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$847: { $procmux$507_CMP $procmux$508_CMP $procmux$513_CMP $procmux$522_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$849: { $procmux$509_CMP $procmux$514_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$851: { $eq$cpu.v:615$60_Y $eq$cpu.v:575$52_Y $eq$cpu.v:615$58_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$853: { $procmux$709_CMP $procmux$710_CMP $procmux$712_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$855: { $procmux$712_CMP $procmux$715_CMP $procmux$716_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$851: { $eq$cpu.v:575$52_Y $eq$cpu.v:615$58_Y $eq$cpu.v:615$60_Y }
  Optimizing cells in module \cpu.
Performed a total of 55 changes.

4.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
  Cell `$ternary$cpu.v:857$129' is identical to cell `$procmux$529'.
    Redirecting output \Y: \DIMUX = $0\DIHOLD[7:0]
    Removing $mux cell `$ternary$cpu.v:857$129' from module `\cpu'.
  Cell `$ternary$cpu.v:897$132' is identical to cell `$ternary$cpu.v:894$131'.
    Redirecting output \Y: $ternary$cpu.v:897$132_Y = $ternary$cpu.v:894$131_Y
    Removing $mux cell `$ternary$cpu.v:897$132' from module `\cpu'.
  Cell `$ternary$cpu.v:900$133' is identical to cell `$ternary$cpu.v:894$131'.
    Redirecting output \Y: $ternary$cpu.v:900$133_Y = $ternary$cpu.v:894$131_Y
    Removing $mux cell `$ternary$cpu.v:900$133' from module `\cpu'.
  Cell `$ternary$cpu.v:904$137' is identical to cell `$ternary$cpu.v:894$131'.
    Redirecting output \Y: $ternary$cpu.v:904$137_Y = $ternary$cpu.v:894$131_Y
    Removing $mux cell `$ternary$cpu.v:904$137' from module `\cpu'.
Removed a total of 4 cells.

4.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..
  removing unused `$reduce_or' cell `$procmux$690_ANY'.

4.6.8. Executing OPT_EXPR pass (perform const folding).

4.6.9. Rerunning OPT passes. (Maybe there is more to do..)

4.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$259 (pure)
    Root of a mux tree: $procmux$262 (pure)
    Root of a mux tree: $procmux$265 (pure)
    Root of a mux tree: $procmux$268 (pure)
    Root of a mux tree: $procmux$271 (pure)
    Root of a mux tree: $procmux$274 (pure)
    Root of a mux tree: $procmux$276 (pure)
    Root of a mux tree: $procmux$282 (pure)
    Root of a mux tree: $ternary$ALU.v:50$234 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$295 (pure)
    Root of a mux tree: $procmux$305 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$323 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$351 (pure)
    Root of a mux tree: $procmux$357 (pure)
    Root of a mux tree: $procmux$363 (pure)
    Root of a mux tree: $procmux$369 (pure)
    Root of a mux tree: $procmux$375 (pure)
    Root of a mux tree: $procmux$381 (pure)
    Root of a mux tree: $procmux$387 (pure)
    Root of a mux tree: $procmux$393 (pure)
    Root of a mux tree: $procmux$399 (pure)
    Root of a mux tree: $procmux$405 (pure)
    Root of a mux tree: $procmux$411 (pure)
    Root of a mux tree: $procmux$417 (pure)
    Root of a mux tree: $procmux$425 (pure)
    Root of a mux tree: $procmux$433 (pure)
    Root of a mux tree: $procmux$439 (pure)
    Root of a mux tree: $procmux$445 (pure)
    Root of a mux tree: $procmux$526 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$541 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$568 (pure)
    Root of a mux tree: $procmux$583 (pure)
    Root of a mux tree: $procmux$604 (pure)
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$637 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$661 (pure)
    Root of a mux tree: $procmux$668 (pure)
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$681 (pure)
    Root of a mux tree: $procmux$684 (pure)
    Root of a mux tree: $procmux$687 (pure)
    Root of a mux tree: $procmux$694 (pure)
    Root of a mux tree: $procmux$699 (pure)
    Root of a mux tree: $procmux$702 (pure)
    Root of a mux tree: $procmux$705 (pure)
    Root of a mux tree: $procmux$707 (pure)
    Root of a mux tree: $procmux$713 (pure)
    Root of a mux tree: $procmux$720 (pure)
    Root of a mux tree: $procmux$724 (pure)
    Root of a mux tree: $procmux$728 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$738 (pure)
    Root of a mux tree: $procmux$741 (pure)
    Root of a mux tree: $procmux$751 (pure)
    Root of a mux tree: $procmux$762 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $ternary$cpu.v:851$126 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU.
  Optimizing cells in module \cpu.
    New ctrl vector for $pmux cell $procmux$449: { $eq$cpu.v:1010$152_Y $procmux$497_CMP $procmux$495_CMP $procmux$493_CMP $procmux$492_CMP $auto$opt_reduce.cc:132:opt_mux$858 $procmux$490_CMP $procmux$489_CMP $procmux$488_CMP $procmux$486_CMP $procmux$485_CMP $procmux$484_CMP $eq$cpu.v:615$60_Y $eq$cpu.v:843$119_Y $eq$cpu.v:843$118_Y $procmux$475_CMP $eq$cpu.v:533$46_Y $procmux$472_CMP $procmux$471_CMP $procmux$469_CMP $procmux$468_CMP $eq$cpu.v:747$81_Y $procmux$466_CMP $procmux$464_CMP $procmux$463_CMP $procmux$462_CMP $auto$opt_reduce.cc:132:opt_mux$842 $procmux$460_CMP $procmux$459_CMP $procmux$457_CMP $auto$opt_reduce.cc:132:opt_mux$840 $procmux$455_CMP $eq$cpu.v:1083$171_Y $procmux$452_CMP $procmux$451_CMP $auto$opt_reduce.cc:132:opt_mux$838 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$857: { $procmux$491_CMP $procmux$494_CMP $procmux$496_CMP $procmux$498_CMP }
  Optimizing cells in module \cpu.
Performed a total of 2 changes.

4.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

4.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..

4.6.15. Executing OPT_EXPR pass (perform const folding).

4.6.16. Rerunning OPT passes. (Maybe there is more to do..)

4.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$259 (pure)
    Root of a mux tree: $procmux$262 (pure)
    Root of a mux tree: $procmux$265 (pure)
    Root of a mux tree: $procmux$268 (pure)
    Root of a mux tree: $procmux$271 (pure)
    Root of a mux tree: $procmux$274 (pure)
    Root of a mux tree: $procmux$276 (pure)
    Root of a mux tree: $procmux$282 (pure)
    Root of a mux tree: $ternary$ALU.v:50$234 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$295 (pure)
    Root of a mux tree: $procmux$305 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$323 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$351 (pure)
    Root of a mux tree: $procmux$357 (pure)
    Root of a mux tree: $procmux$363 (pure)
    Root of a mux tree: $procmux$369 (pure)
    Root of a mux tree: $procmux$375 (pure)
    Root of a mux tree: $procmux$381 (pure)
    Root of a mux tree: $procmux$387 (pure)
    Root of a mux tree: $procmux$393 (pure)
    Root of a mux tree: $procmux$399 (pure)
    Root of a mux tree: $procmux$405 (pure)
    Root of a mux tree: $procmux$411 (pure)
    Root of a mux tree: $procmux$417 (pure)
    Root of a mux tree: $procmux$425 (pure)
    Root of a mux tree: $procmux$433 (pure)
    Root of a mux tree: $procmux$439 (pure)
    Root of a mux tree: $procmux$445 (pure)
    Root of a mux tree: $procmux$526 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$541 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$568 (pure)
    Root of a mux tree: $procmux$583 (pure)
    Root of a mux tree: $procmux$604 (pure)
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$637 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$661 (pure)
    Root of a mux tree: $procmux$668 (pure)
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$681 (pure)
    Root of a mux tree: $procmux$684 (pure)
    Root of a mux tree: $procmux$687 (pure)
    Root of a mux tree: $procmux$694 (pure)
    Root of a mux tree: $procmux$699 (pure)
    Root of a mux tree: $procmux$702 (pure)
    Root of a mux tree: $procmux$705 (pure)
    Root of a mux tree: $procmux$707 (pure)
    Root of a mux tree: $procmux$713 (pure)
    Root of a mux tree: $procmux$720 (pure)
    Root of a mux tree: $procmux$724 (pure)
    Root of a mux tree: $procmux$728 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$738 (pure)
    Root of a mux tree: $procmux$741 (pure)
    Root of a mux tree: $procmux$751 (pure)
    Root of a mux tree: $procmux$762 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $ternary$cpu.v:851$126 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU.
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

4.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

4.6.20. Executing OPT_RMDFF pass (remove dff with constant values).

4.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..

4.6.22. Executing OPT_EXPR pass (perform const folding).

4.6.23. Finished OPT passes. (There is nothing left to do.)

4.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from mux cell ALU.$ternary$ALU.v:50$234 ($mux).
Removed top 1 bits (of 9) from port Y of cell ALU.$or$ALU.v:57$236 ($or).
Removed top 1 bits (of 9) from port Y of cell ALU.$and$ALU.v:58$237 ($and).
Removed top 1 bits (of 9) from port Y of cell ALU.$xor$ALU.v:59$238 ($xor).
Removed top 1 bits (of 2) from port B of cell ALU.$procmux$279_CMP0 ($eq).
Removed top 1 bits (of 9) from mux cell ALU.$procmux$284 ($pmux).
Removed top 1 bits (of 2) from port B of cell ALU.$procmux$287_CMP0 ($eq).
Removed top 1 bits (of 9) from wire ALU.$1\temp_logic[8:0].
Removed top 1 bits (of 9) from wire ALU.$and$ALU.v:58$237_Y.
Removed top 2 bits (of 9) from wire ALU.$or$ALU.v:57$236_Y.
Removed top 1 bits (of 9) from wire ALU.$xor$ALU.v:59$238_Y.
Removed top 13 bits (of 16) from mux cell cpu.$ternary$cpu.v:315$7 ($mux).
Removed top 13 bits (of 16) from mux cell cpu.$ternary$cpu.v:315$8 ($mux).
Removed top 1 bits (of 6) from port B of cell cpu.$ne$cpu.v:415$22 ($ne).
Removed top 1 bits (of 6) from port B of cell cpu.$ne$cpu.v:415$24 ($ne).
Removed top 1 bits (of 6) from port B of cell cpu.$eq$cpu.v:533$46 ($eq).
Removed top 1 bits (of 2) from mux cell cpu.$ternary$cpu.v:545$51 ($mux).
Removed top 2 bits (of 6) from port B of cell cpu.$eq$cpu.v:575$52 ($eq).
Removed top 1 bits (of 4) from mux cell cpu.$ternary$cpu.v:592$55 ($mux).
Removed top 24 bits (of 32) from mux cell cpu.$ternary$cpu.v:661$65 ($mux).
Removed top 31 bits (of 32) from mux cell cpu.$ternary$cpu.v:718$69 ($mux).
Removed top 31 bits (of 32) from mux cell cpu.$ternary$cpu.v:718$71 ($mux).
Removed top 31 bits (of 32) from mux cell cpu.$ternary$cpu.v:722$74 ($mux).
Removed top 31 bits (of 32) from mux cell cpu.$ternary$cpu.v:722$75 ($mux).
Removed top 31 bits (of 32) from mux cell cpu.$ternary$cpu.v:722$77 ($mux).
Removed top 1 bits (of 2) from port B of cell cpu.$ne$cpu.v:772$91 ($ne).
Removed top 1 bits (of 6) from port B of cell cpu.$eq$cpu.v:843$118 ($eq).
Removed top 2 bits (of 6) from mux cell cpu.$ternary$cpu.v:903$136 ($mux).
Removed top 1 bits (of 6) from mux cell cpu.$ternary$cpu.v:913$139 ($mux).
Removed top 2 bits (of 6) from mux cell cpu.$ternary$cpu.v:945$140 ($mux).
Removed top 2 bits (of 6) from mux cell cpu.$ternary$cpu.v:946$142 ($mux).
Removed top 2 bits (of 6) from port B of cell cpu.$eq$cpu.v:1010$152 ($eq).
Removed top 2 bits (of 6) from port B of cell cpu.$eq$cpu.v:1083$171 ($eq).
Removed top 4 bits (of 8) from port B of cell cpu.$eq$cpu.v:1180$200 ($eq).
Removed top 3 bits (of 8) from port B of cell cpu.$eq$cpu.v:1181$201 ($eq).
Removed top 2 bits (of 8) from port B of cell cpu.$eq$cpu.v:1182$202 ($eq).
Removed top 2 bits (of 8) from port B of cell cpu.$eq$cpu.v:1183$203 ($eq).
Removed top 1 bits (of 8) from port B of cell cpu.$eq$cpu.v:1184$204 ($eq).
Removed top 1 bits (of 8) from port B of cell cpu.$eq$cpu.v:1185$205 ($eq).
Removed top 2 bits (of 6) from port B of cell cpu.$eq$cpu.v:1215$218 ($eq).
Removed top 1 bits (of 3) from port B of cell cpu.$procmux$300_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell cpu.$procmux$301_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell cpu.$procmux$302_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell cpu.$procmux$340_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$346_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell cpu.$procmux$346_CMP1 ($eq).
Removed top 1 bits (of 4) from port B of cell cpu.$procmux$348_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell cpu.$procmux$350_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$356_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$356_CMP1 ($eq).
Removed top 1 bits (of 4) from port B of cell cpu.$procmux$374_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$374_CMP1 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$380_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell cpu.$procmux$431_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell cpu.$procmux$438_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell cpu.$procmux$438_CMP1 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$438_CMP8 ($eq).
Removed top 2 bits (of 6) from port B of cell cpu.$procmux$451_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell cpu.$procmux$452_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$454_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$455_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$456_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$457_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell cpu.$procmux$458_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell cpu.$procmux$459_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell cpu.$procmux$460_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$470_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$471_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$472_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$475_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$483_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$484_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$485_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$486_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$487_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$488_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell cpu.$procmux$489_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell cpu.$procmux$490_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell cpu.$procmux$491_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell cpu.$procmux$492_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell cpu.$procmux$493_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell cpu.$procmux$494_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$507_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$508_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$509_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell cpu.$procmux$510_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cpu.$procmux$511_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$procmux$515_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell cpu.$procmux$516_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell cpu.$procmux$518_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell cpu.$procmux$519_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell cpu.$procmux$520_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell cpu.$procmux$521_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell cpu.$procmux$522_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell cpu.$procmux$523_CMP0 ($eq).
Removed cell cpu.$procmux$702 ($mux).
Removed cell cpu.$procmux$705 ($mux).
Removed top 1 bits (of 4) from wire cpu.$procmux$423_CMP.
Removed top 13 bits (of 16) from wire cpu.$ternary$cpu.v:315$7_Y.
Removed top 13 bits (of 16) from wire cpu.$ternary$cpu.v:315$8_Y.
Removed top 1 bits (of 2) from wire cpu.$ternary$cpu.v:545$51_Y.
Removed top 1 bits (of 4) from wire cpu.$ternary$cpu.v:592$55_Y.
Removed top 24 bits (of 32) from wire cpu.$ternary$cpu.v:661$65_Y.
Removed top 31 bits (of 32) from wire cpu.$ternary$cpu.v:718$71_Y.
Removed top 31 bits (of 32) from wire cpu.$ternary$cpu.v:722$74_Y.
Removed top 31 bits (of 32) from wire cpu.$ternary$cpu.v:722$77_Y.
Removed top 2 bits (of 6) from wire cpu.$ternary$cpu.v:903$136_Y.
Removed top 1 bits (of 6) from wire cpu.$ternary$cpu.v:913$139_Y.
Removed top 2 bits (of 6) from wire cpu.$ternary$cpu.v:945$140_Y.
Removed top 2 bits (of 6) from wire cpu.$ternary$cpu.v:946$142_Y.

4.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ALU:
  creating $macc model for $add$ALU.v:90$247 ($add).
  creating $macc model for $add$ALU.v:90$248 ($add).
  creating $macc model for $add$ALU.v:91$249 ($add).
  creating $macc model for $add$ALU.v:91$250 ($add).
  merging $macc model for $add$ALU.v:91$249 into $add$ALU.v:91$250.
  merging $macc model for $add$ALU.v:90$247 into $add$ALU.v:90$248.
  creating $alu model for $macc $add$ALU.v:90$248.
  creating $alu model for $macc $add$ALU.v:91$250.
  creating $alu model for $ge$ALU.v:79$241 ($ge): new $alu
  creating $alu model for $ge$ALU.v:82$243 ($ge): new $alu
  creating $alu cell for $ge$ALU.v:82$243: $auto$alumacc.cc:470:replace_alu$878
  creating $alu cell for $ge$ALU.v:79$241: $auto$alumacc.cc:470:replace_alu$887
  creating $alu cell for $add$ALU.v:91$250: $auto$alumacc.cc:470:replace_alu$896
  creating $alu cell for $add$ALU.v:90$248: $auto$alumacc.cc:470:replace_alu$899
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module cpu:
  creating $macc model for $add$cpu.v:533$48 ($add).
  creating $macc model for $add$cpu.v:351$15 ($add).
  creating $macc model for $add$cpu.v:533$47 ($add).
  creating $alu model for $macc $add$cpu.v:533$47.
  creating $alu model for $macc $add$cpu.v:351$15.
  creating $alu model for $macc $add$cpu.v:533$48.
  creating $alu cell for $add$cpu.v:533$48: $auto$alumacc.cc:470:replace_alu$902
  creating $alu cell for $add$cpu.v:351$15: $auto$alumacc.cc:470:replace_alu$905
  creating $alu cell for $add$cpu.v:533$47: $auto$alumacc.cc:470:replace_alu$908
  created 3 $alu and 0 $macc cells.

4.9. Executing SHARE pass (SAT-based resource sharing).

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$259 (pure)
    Root of a mux tree: $procmux$262 (pure)
    Root of a mux tree: $procmux$265 (pure)
    Root of a mux tree: $procmux$268 (pure)
    Root of a mux tree: $procmux$271 (pure)
    Root of a mux tree: $procmux$274 (pure)
    Root of a mux tree: $procmux$276 (pure)
    Root of a mux tree: $procmux$282 (pure)
    Root of a mux tree: $ternary$ALU.v:50$234 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$295 (pure)
    Root of a mux tree: $procmux$305 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$323 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$351 (pure)
    Root of a mux tree: $procmux$357 (pure)
    Root of a mux tree: $procmux$363 (pure)
    Root of a mux tree: $procmux$369 (pure)
    Root of a mux tree: $procmux$375 (pure)
    Root of a mux tree: $procmux$381 (pure)
    Root of a mux tree: $procmux$387 (pure)
    Root of a mux tree: $procmux$393 (pure)
    Root of a mux tree: $procmux$399 (pure)
    Root of a mux tree: $procmux$405 (pure)
    Root of a mux tree: $procmux$411 (pure)
    Root of a mux tree: $procmux$417 (pure)
    Root of a mux tree: $procmux$425 (pure)
    Root of a mux tree: $procmux$433 (pure)
    Root of a mux tree: $procmux$439 (pure)
    Root of a mux tree: $procmux$445 (pure)
    Root of a mux tree: $procmux$526 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$541 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$568 (pure)
    Root of a mux tree: $procmux$583 (pure)
    Root of a mux tree: $procmux$604 (pure)
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$637 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$661 (pure)
    Root of a mux tree: $procmux$668 (pure)
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$681 (pure)
    Root of a mux tree: $procmux$684 (pure)
    Root of a mux tree: $procmux$687 (pure)
    Root of a mux tree: $procmux$694 (pure)
    Root of a mux tree: $procmux$699 (pure)
    Root of a mux tree: $procmux$707 (pure)
    Root of a mux tree: $procmux$713 (pure)
    Root of a mux tree: $procmux$720 (pure)
    Root of a mux tree: $procmux$724 (pure)
    Root of a mux tree: $procmux$728 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$738 (pure)
    Root of a mux tree: $procmux$741 (pure)
    Root of a mux tree: $procmux$751 (pure)
    Root of a mux tree: $procmux$762 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $ternary$cpu.v:533$49 (pure)
    Root of a mux tree: $ternary$cpu.v:851$126 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU.
    New input vector for $reduce_or cell $auto$alumacc.cc:502:replace_alu$885: { $auto$rtlil.cc:1600:Not$882 $auto$rtlil.cc:1603:ReduceAnd$884 }
    New input vector for $reduce_or cell $auto$alumacc.cc:502:replace_alu$894: { $auto$rtlil.cc:1600:Not$891 $auto$rtlil.cc:1603:ReduceAnd$893 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$883: { $auto$alumacc.cc:483:replace_alu$879 [0] $auto$alumacc.cc:483:replace_alu$879 [1] $auto$alumacc.cc:483:replace_alu$879 [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$892: { $auto$alumacc.cc:483:replace_alu$888 [0] $auto$alumacc.cc:483:replace_alu$888 [1] $auto$alumacc.cc:483:replace_alu$888 [2] }
  Optimizing cells in module \ALU.
  Optimizing cells in module \cpu.
    New input vector for $reduce_or cell $procmux$423_ANY: { $auto$wreduce.cc:347:run$863 [0] $auto$wreduce.cc:347:run$863 [1] $auto$wreduce.cc:347:run$863 [2] $procmux$347_CMP [1] }
  Optimizing cells in module \cpu.
Performed a total of 5 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

4.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
  removing unused `$add' cell `$add$ALU.v:90$247'.
  removing unused `$add' cell `$add$ALU.v:91$249'.
Finding unused cells or wires in module \cpu..

4.10.8. Executing OPT_EXPR pass (perform const folding).

4.10.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$259 (pure)
    Root of a mux tree: $procmux$262 (pure)
    Root of a mux tree: $procmux$265 (pure)
    Root of a mux tree: $procmux$268 (pure)
    Root of a mux tree: $procmux$271 (pure)
    Root of a mux tree: $procmux$274 (pure)
    Root of a mux tree: $procmux$276 (pure)
    Root of a mux tree: $procmux$282 (pure)
    Root of a mux tree: $ternary$ALU.v:50$234 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$295 (pure)
    Root of a mux tree: $procmux$305 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$323 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$351 (pure)
    Root of a mux tree: $procmux$357 (pure)
    Root of a mux tree: $procmux$363 (pure)
    Root of a mux tree: $procmux$369 (pure)
    Root of a mux tree: $procmux$375 (pure)
    Root of a mux tree: $procmux$381 (pure)
    Root of a mux tree: $procmux$387 (pure)
    Root of a mux tree: $procmux$393 (pure)
    Root of a mux tree: $procmux$399 (pure)
    Root of a mux tree: $procmux$405 (pure)
    Root of a mux tree: $procmux$411 (pure)
    Root of a mux tree: $procmux$417 (pure)
    Root of a mux tree: $procmux$425 (pure)
    Root of a mux tree: $procmux$433 (pure)
    Root of a mux tree: $procmux$439 (pure)
    Root of a mux tree: $procmux$445 (pure)
    Root of a mux tree: $procmux$526 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$541 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$568 (pure)
    Root of a mux tree: $procmux$583 (pure)
    Root of a mux tree: $procmux$604 (pure)
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$637 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$661 (pure)
    Root of a mux tree: $procmux$668 (pure)
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$681 (pure)
    Root of a mux tree: $procmux$684 (pure)
    Root of a mux tree: $procmux$687 (pure)
    Root of a mux tree: $procmux$694 (pure)
    Root of a mux tree: $procmux$699 (pure)
    Root of a mux tree: $procmux$707 (pure)
    Root of a mux tree: $procmux$713 (pure)
    Root of a mux tree: $procmux$720 (pure)
    Root of a mux tree: $procmux$724 (pure)
    Root of a mux tree: $procmux$728 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$738 (pure)
    Root of a mux tree: $procmux$741 (pure)
    Root of a mux tree: $procmux$751 (pure)
    Root of a mux tree: $procmux$762 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $ternary$cpu.v:533$49 (pure)
    Root of a mux tree: $ternary$cpu.v:851$126 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU.
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

4.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

4.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..

4.10.15. Executing OPT_EXPR pass (perform const folding).

4.10.16. Finished OPT passes. (There is nothing left to do.)

4.11. Executing FSM pass (extract and optimize FSM).

4.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking cpu.$memwr$\AXYS$cpu.v:533$1_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking cpu.dst_reg as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking cpu.src_reg as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register cpu.state.

4.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\state' from module `\cpu'.
  found $adff cell for state register: $procdff$819
  root of input selection tree: $0\state[5:0]
  found reset state: 6'001000 (from async reset)
  found ctrl input: \RDY
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$838
  found ctrl input: $procmux$451_CMP
  found ctrl input: $procmux$452_CMP
  found ctrl input: $eq$cpu.v:1083$171_Y
  found ctrl input: $procmux$455_CMP
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$840
  found ctrl input: $procmux$457_CMP
  found ctrl input: $procmux$459_CMP
  found ctrl input: $procmux$460_CMP
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$842
  found ctrl input: $procmux$462_CMP
  found ctrl input: $procmux$463_CMP
  found ctrl input: $procmux$464_CMP
  found ctrl input: $procmux$466_CMP
  found ctrl input: $eq$cpu.v:747$81_Y
  found ctrl input: $procmux$468_CMP
  found ctrl input: $procmux$469_CMP
  found ctrl input: $procmux$471_CMP
  found ctrl input: $procmux$472_CMP
  found ctrl input: $eq$cpu.v:533$46_Y
  found ctrl input: $procmux$475_CMP
  found ctrl input: $eq$cpu.v:843$118_Y
  found ctrl input: $eq$cpu.v:843$119_Y
  found ctrl input: $eq$cpu.v:615$60_Y
  found ctrl input: $procmux$484_CMP
  found ctrl input: $procmux$485_CMP
  found ctrl input: $procmux$486_CMP
  found ctrl input: $procmux$488_CMP
  found ctrl input: $procmux$489_CMP
  found ctrl input: $procmux$490_CMP
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$858
  found ctrl input: $procmux$492_CMP
  found ctrl input: $procmux$493_CMP
  found ctrl input: $procmux$495_CMP
  found ctrl input: $procmux$497_CMP
  found ctrl input: $eq$cpu.v:1010$152_Y
  found state code: 6'010110
  found state code: 6'001011
  found state code: 6'001010
  found state code: 6'001001
  found state code: 6'011001
  found state code: 6'001100
  found state code: 6'010111
  found ctrl input: $xor$cpu.v:946$141_Y
  found state code: 6'000111
  found ctrl input: \cond_true
  found state code: 6'000110
  found state code: 6'001101
  found state code: 6'101101
  found state code: 6'101100
  found state code: 6'101011
  found state code: 6'101001
  found state code: 6'101000
  found state code: 6'100111
  found state code: 6'100110
  found state code: 6'011101
  found state code: 6'011100
  found state code: 6'011011
  found state code: 6'100000
  found state code: 6'011111
  found state code: 6'100010
  found state code: 6'101110
  found ctrl input: $or$cpu.v:903$134_Y
  found state code: 6'010101
  found state code: 6'010100
  found state code: 6'010011
  found state code: 6'010001
  found state code: 6'010000
  found state code: 6'001111
  found ctrl input: \write_back
  found state code: 6'100011
  found ctrl input: $or$cpu.v:903$135_Y
  found state code: 6'000100
  found state code: 6'000011
  found state code: 6'000001
  found state code: 6'110001
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$844
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$846
  found ctrl input: $procmux$504_CMP
  found ctrl input: $procmux$416_CMP [0]
  found ctrl input: $procmux$506_CMP
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$848
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$850
  found ctrl input: $procmux$510_CMP
  found ctrl input: $procmux$511_CMP
  found ctrl input: $procmux$516_CMP
  found ctrl input: $procmux$431_CMP [0]
  found ctrl input: $procmux$518_CMP
  found ctrl input: $procmux$519_CMP
  found ctrl input: $procmux$520_CMP
  found ctrl input: $procmux$521_CMP
  found ctrl input: $procmux$523_CMP
  found ctrl input: $procmux$524_CMP
  found state code: 6'100100
  found state code: 6'000010
  found state code: 6'110000
  found state code: 6'010010
  found state code: 6'000101
  found state code: 6'000000
  found state code: 6'101111
  found state code: 6'001110
  found state code: 6'011110
  found state code: 6'100001
  found state code: 6'011000
  found state code: 6'101010
  found state code: 6'100101
  found state code: 6'011010
  found ctrl output: $ne$cpu.v:414$18_Y
  found ctrl output: $ne$cpu.v:414$19_Y
  found ctrl output: $ne$cpu.v:415$22_Y
  found ctrl output: $ne$cpu.v:415$24_Y
  found ctrl output: $ne$cpu.v:415$26_Y
  found ctrl output: $eq$cpu.v:533$46_Y
  found ctrl output: $eq$cpu.v:575$52_Y
  found ctrl output: $eq$cpu.v:615$58_Y
  found ctrl output: $eq$cpu.v:615$60_Y
  found ctrl output: $eq$cpu.v:745$79_Y
  found ctrl output: $eq$cpu.v:747$81_Y
  found ctrl output: $eq$cpu.v:843$118_Y
  found ctrl output: $eq$cpu.v:843$119_Y
  found ctrl output: $eq$cpu.v:1010$152_Y
  found ctrl output: $eq$cpu.v:1083$171_Y
  found ctrl output: $eq$cpu.v:1215$218_Y
  found ctrl output: $procmux$451_CMP
  found ctrl output: $procmux$452_CMP
  found ctrl output: $procmux$454_CMP
  found ctrl output: $procmux$455_CMP
  found ctrl output: $procmux$456_CMP
  found ctrl output: $procmux$457_CMP
  found ctrl output: $procmux$458_CMP
  found ctrl output: $procmux$459_CMP
  found ctrl output: $procmux$460_CMP
  found ctrl output: $procmux$461_CMP
  found ctrl output: $procmux$462_CMP
  found ctrl output: $procmux$463_CMP
  found ctrl output: $procmux$464_CMP
  found ctrl output: $procmux$465_CMP
  found ctrl output: $procmux$466_CMP
  found ctrl output: $procmux$468_CMP
  found ctrl output: $procmux$469_CMP
  found ctrl output: $procmux$470_CMP
  found ctrl output: $procmux$471_CMP
  found ctrl output: $procmux$472_CMP
  found ctrl output: $procmux$474_CMP
  found ctrl output: $procmux$475_CMP
  found ctrl output: $procmux$477_CMP
  found ctrl output: $procmux$483_CMP
  found ctrl output: $procmux$484_CMP
  found ctrl output: $procmux$485_CMP
  found ctrl output: $procmux$486_CMP
  found ctrl output: $procmux$487_CMP
  found ctrl output: $procmux$488_CMP
  found ctrl output: $procmux$489_CMP
  found ctrl output: $procmux$490_CMP
  found ctrl output: $procmux$491_CMP
  found ctrl output: $procmux$492_CMP
  found ctrl output: $procmux$493_CMP
  found ctrl output: $procmux$494_CMP
  found ctrl output: $procmux$495_CMP
  found ctrl output: $procmux$496_CMP
  found ctrl output: $procmux$497_CMP
  found ctrl output: $procmux$498_CMP
  ctrl inputs: { $auto$opt_reduce.cc:132:opt_mux$850 $auto$opt_reduce.cc:132:opt_mux$858 $auto$opt_reduce.cc:132:opt_mux$842 $auto$opt_reduce.cc:132:opt_mux$848 $procmux$524_CMP $procmux$523_CMP $procmux$521_CMP $procmux$520_CMP $procmux$519_CMP $procmux$518_CMP $procmux$516_CMP $procmux$511_CMP $procmux$510_CMP $procmux$506_CMP $procmux$504_CMP $procmux$431_CMP [0] $procmux$416_CMP [0] $xor$cpu.v:946$141_Y $or$cpu.v:903$135_Y $or$cpu.v:903$134_Y $auto$opt_reduce.cc:132:opt_mux$840 $auto$opt_reduce.cc:132:opt_mux$838 $auto$opt_reduce.cc:132:opt_mux$844 $auto$opt_reduce.cc:132:opt_mux$846 \cond_true \write_back \RDY }
  ctrl outputs: { $procmux$498_CMP $procmux$497_CMP $procmux$496_CMP $procmux$495_CMP $procmux$494_CMP $procmux$493_CMP $procmux$492_CMP $procmux$491_CMP $procmux$490_CMP $procmux$489_CMP $procmux$488_CMP $procmux$487_CMP $procmux$486_CMP $procmux$485_CMP $procmux$484_CMP $procmux$483_CMP $procmux$477_CMP $procmux$475_CMP $procmux$474_CMP $procmux$472_CMP $procmux$471_CMP $procmux$470_CMP $procmux$469_CMP $procmux$468_CMP $procmux$466_CMP $procmux$465_CMP $procmux$464_CMP $procmux$463_CMP $procmux$462_CMP $procmux$461_CMP $procmux$460_CMP $procmux$459_CMP $procmux$458_CMP $procmux$457_CMP $procmux$456_CMP $procmux$455_CMP $procmux$454_CMP $procmux$452_CMP $procmux$451_CMP $eq$cpu.v:1215$218_Y $eq$cpu.v:1083$171_Y $eq$cpu.v:1010$152_Y $0\state[5:0] $eq$cpu.v:843$119_Y $eq$cpu.v:843$118_Y $eq$cpu.v:747$81_Y $eq$cpu.v:745$79_Y $eq$cpu.v:615$60_Y $eq$cpu.v:615$58_Y $eq$cpu.v:575$52_Y $eq$cpu.v:533$46_Y $ne$cpu.v:415$26_Y $ne$cpu.v:415$24_Y $ne$cpu.v:415$22_Y $ne$cpu.v:414$19_Y $ne$cpu.v:414$18_Y }
  transition:   6'000000 27'--------------------------0 ->   6'000000 61'0001000000000000000000000000000000000000000000000000000011111
  transition:   6'000000 27'--------------------------1 ->   6'000001 61'0001000000000000000000000000000000000000000000010000000011111
  transition:   6'100000 27'--------------------------0 ->   6'100000 61'0000000000000000001000000000000000000000001000000000000001111
  transition:   6'100000 27'-00-----------------------1 ->   6'001100 61'0000000000000000001000000000000000000000000011000000000001111
  transition:   6'010000 27'--------------------------0 ->   6'010000 61'0000000000100000000000000000000000000000000100000000000011111
  transition:   6'010000 27'--------------------------1 ->   6'010001 61'0000000000100000000000000000000000000000000100010000000011111
  transition:   6'110000 27'--------------------------0 ->   6'110000 61'0100000000000000000000000000000000000000001100000000000011111
  transition:   6'110000 27'--------------------------1 ->   6'110001 61'0100000000000000000000000000000000000000001100010000000011111
  transition:   6'001000 27'--------------------------0 ->   6'001000 61'0000000000000000000000000000000000000000100010000000000011111
  transition:   6'001000 27'--------------------------1 ->   6'001001 61'0000000000000000000000000000000000000000100010010000000011111
  transition:   6'101000 27'--------------------------0 ->   6'101000 61'0000000000000000000000001000000000000000001010000000000011111
  transition:   6'101000 27'--------------------------1 ->   6'101001 61'0000000000000000000000001000000000000000001010010000000011111
  transition:   6'011000 27'--------------------------0 ->   6'011000 61'0000000000000000000000000000000000010000000110000000000011111
  transition:   6'011000 27'--------------------------1 ->   6'011001 61'0000000000000000000000000000000000010000000110010000000011111
  transition:   6'000100 27'--------------------------0 ->   6'000100 61'0000000100000000000000000000000000000000000001000000000011111
  transition:   6'000100 27'-------------------------01 ->   6'001101 61'0000000100000000000000000000000000000000000011010000000011111
  transition:   6'000100 27'-------------------------11 ->   6'100011 61'0000000100000000000000000000000000000000001000110000000011111
  transition:   6'100100 27'--------------------------0 ->   6'100100 61'0000000000000000000000000000000000000000001001000000010011111
  transition:   6'100100 27'-00-----------------------1 ->   6'001100 61'0000000000000000000000000000000000000000000011000000010011111
  transition:   6'010100 27'--------------------------0 ->   6'010100 61'0000000000000010000000000000000000000000000101000000000011111
  transition:   6'010100 27'-------------------0------1 ->   6'001101 61'0000000000000010000000000000000000000000000011010000000011111
  transition:   6'010100 27'-------------------1------1 ->   6'010101 61'0000000000000010000000000000000000000000000101010000000011111
  transition:   6'001100 27'--------------------------0 ->   6'001100 61'0000000000000000000000000000000000000000010011000000000011111
  transition:   6'001100 27'0--00000000000000-----00--1 ->   6'001100 61'0000000000000000000000000000000000000000010011000000000011111
  transition:   6'001100 27'----1---------------------1 ->   6'001000 61'0000000000000000000000000000000000000000010010000000000011111
  transition:   6'001100 27'-----1--------------------1 ->   6'011010 61'0000000000000000000000000000000000000000010110100000000011111
  transition:   6'001100 27'------1-------------------1 ->   6'100101 61'0000000000000000000000000000000000000000011001010000000011111
  transition:   6'001100 27'-------1------------------1 ->   6'010110 61'0000000000000000000000000000000000000000010101100000000011111
  transition:   6'001100 27'--------1-----------------1 ->   6'101010 61'0000000000000000000000000000000000000000011010100000000011111
  transition:   6'001100 27'---------1----------------1 ->   6'011000 61'0000000000000000000000000000000000000000010110000000000011111
  transition:   6'001100 27'---------------1----------1 ->   6'100001 61'0000000000000000000000000000000000000000011000010000000011111
  transition:   6'001100 27'----------1---------------1 ->   6'011110 61'0000000000000000000000000000000000000000010111100000000011111
  transition:   6'001100 27'-----------1--------------1 ->   6'001110 61'0000000000000000000000000000000000000000010011100000000011111
  transition:   6'001100 27'------------1-------------1 ->   6'101111 61'0000000000000000000000000000000000000000011011110000000011111
  transition:   6'001100 27'1-------------------------1 ->   6'001101 61'0000000000000000000000000000000000000000010011010000000011111
  transition:   6'001100 27'---1----------------------1 ->   6'000000 61'0000000000000000000000000000000000000000010000000000000011111
  transition:   6'001100 27'-------------1------------1 ->   6'000101 61'0000000000000000000000000000000000000000010001010000000011111
  transition:   6'001100 27'----------------1---------1 ->   6'010010 61'0000000000000000000000000000000000000000010100100000000011111
  transition:   6'001100 27'--------------1-----------1 ->   6'110000 61'0000000000000000000000000000000000000000011100000000000011111
  transition:   6'001100 27'-----------------------1--1 ->   6'000010 61'0000000000000000000000000000000000000000010000100000000011111
  transition:   6'001100 27'----------------------1---1 ->   6'100100 61'0000000000000000000000000000000000000000011001000000000011111
  transition:   6'101100 27'--------------------------0 ->   6'101100 61'0000000000000000000000000000100000000000001011000000000011111
  transition:   6'101100 27'--------------------------1 ->   6'101101 61'0000000000000000000000000000100000000000001011010000000011111
  transition:   6'011100 27'--------------------------0 ->   6'011100 61'0000000000000000000010000000000000000000000111000000000011111
  transition:   6'011100 27'--------------------------1 ->   6'011101 61'0000000000000000000010000000000000000000000111010000000011111
  transition:   6'000010 27'--------------------------0 ->   6'000010 61'0000010000000000000000000000000000000000000000100000000011111
  transition:   6'000010 27'--------------------------1 ->   6'000011 61'0000010000000000000000000000000000000000000000110000000011111
  transition:   6'100010 27'--------------------------0 ->   6'100010 61'0000000000000000100000000000000000000000001000100000000011101
  transition:   6'100010 27'-00-----------------------1 ->   6'001100 61'0000000000000000100000000000000000000000000011000000000011101
  transition:   6'010010 27'--------------------------0 ->   6'010010 61'0000000000001000000000000000000000000000000100100000000011111
  transition:   6'010010 27'--------------------------1 ->   6'010011 61'0000000000001000000000000000000000000000000100110000000011111
  transition:   6'001010 27'--------------------------0 ->   6'001010 61'0000000000000000000000000000000000000010000010100000000011111
  transition:   6'001010 27'--------------------------1 ->   6'001011 61'0000000000000000000000000000000000000010000010110000000011111
  transition:   6'101010 27'--------------------------0 ->   6'101010 61'0000000000000000000000000010000000000000001010100000000011111
  transition:   6'101010 27'--------------------------1 ->   6'101011 61'0000000000000000000000000010000000000000001010110000000011111
  transition:   6'011010 27'--------------------------0 ->   6'011010 61'0000000000000000000000000000000000000000000110100000000111111
  transition:   6'011010 27'--------------------------1 ->   6'011011 61'0000000000000000000000000000000000000000000110110000000111111
  transition:   6'000110 27'--------------------------0 ->   6'000110 61'0000000000000000000000000000000100000000000001100000000011111
  transition:   6'000110 27'-----------------0--------1 ->   6'001100 61'0000000000000000000000000000000100000000000011000000000011111
  transition:   6'000110 27'-----------------1--------1 ->   6'000111 61'0000000000000000000000000000000100000000000001110000000011111
  transition:   6'100110 27'--------------------------0 ->   6'100110 61'0000000000000000000000010000000000000000001001100000000011111
  transition:   6'100110 27'--------------------------1 ->   6'100111 61'0000000000000000000000010000000000000000001001110000000011111
  transition:   6'010110 27'--------------------------0 ->   6'010110 61'0000000000000000000000000000000001000000000101100000000011111
  transition:   6'010110 27'--------------------------1 ->   6'010111 61'0000000000000000000000000000000001000000000101110000000011111
  transition:   6'001110 27'--------------------------0 ->   6'001110 61'0000000010000000000000000000000000000000000011100000000011111
  transition:   6'001110 27'--------------------------1 ->   6'001111 61'0000000010000000000000000000000000000000000011110000000011111
  transition:   6'101110 27'--------------------------0 ->   6'101110 61'0000000000000000000000000000000000000000001011100001000011111
  transition:   6'101110 27'-0------------------------1 ->   6'001101 61'0000000000000000000000000000000000000000000011010001000011111
  transition:   6'011110 27'--------------------------0 ->   6'011110 61'0000000000000000000000000000000000000000000111100100000011011
  transition:   6'011110 27'--------------------------1 ->   6'011111 61'0000000000000000000000000000000000000000000111110100000011011
  transition:   6'000001 27'--------------------------0 ->   6'000001 61'0000100000000000000000000000000000000000000000010000000011111
  transition:   6'000001 27'-------------------------01 ->   6'001101 61'0000100000000000000000000000000000000000000011010000000011111
  transition:   6'000001 27'-------------------------11 ->   6'100011 61'0000100000000000000000000000000000000000001000110000000011111
  transition:   6'100001 27'--------------------------0 ->   6'100001 61'0000000000000000000000000000000000000000001000011000000011110
  transition:   6'100001 27'--------------------------1 ->   6'100010 61'0000000000000000000000000000000000000000001000101000000011110
  transition:   6'010001 27'--------------------------0 ->   6'010001 61'0000000000010000000000000000000000000000000100010000000011111
  transition:   6'010001 27'-0------------------------1 ->   6'001101 61'0000000000010000000000000000000000000000000011010000000011111
  transition:   6'110001 27'--------------------------0 ->   6'110001 61'0010000000000000000000000000000000000000001100010000000011111
  transition:   6'110001 27'-------------------------01 ->   6'001101 61'0010000000000000000000000000000000000000000011010000000011111
  transition:   6'110001 27'-------------------------11 ->   6'100011 61'0010000000000000000000000000000000000000001000110000000011111
  transition:   6'001001 27'--------------------------0 ->   6'001001 61'0000000000000000000000000000000000000100000010010000000011111
  transition:   6'001001 27'--------------------------1 ->   6'001010 61'0000000000000000000000000000000000000100000010100000000011111
  transition:   6'101001 27'--------------------------0 ->   6'101001 61'0000000000000000000000000100000000000000001010010000000011111
  transition:   6'101001 27'-00-----------------------1 ->   6'001100 61'0000000000000000000000000100000000000000000011000000000011111
  transition:   6'011001 27'--------------------------0 ->   6'011001 61'0000000000000000000000000000000000001000000110010000000011111
  transition:   6'011001 27'-00-----------------0-----1 ->   6'010110 61'0000000000000000000000000000000000001000000101100000000011111
  transition:   6'000101 27'--------------------------0 ->   6'000101 61'0000000000000000000000000000001000000000000001010000000011111
  transition:   6'000101 27'------------------------0-1 ->   6'001100 61'0000000000000000000000000000001000000000000011000000000011111
  transition:   6'000101 27'------------------------1-1 ->   6'000110 61'0000000000000000000000000000001000000000000001100000000011111
  transition:   6'100101 27'--------------------------0 ->   6'100101 61'0000000000000000000000100000000000000000001001010000000011111
  transition:   6'100101 27'--------------------------1 ->   6'100110 61'0000000000000000000000100000000000000000001001100000000011111
  transition:   6'010101 27'--------------------------0 ->   6'010101 61'0000000000000001000000000000000000000000000101010000000011111
  transition:   6'010101 27'-0------------------------1 ->   6'001101 61'0000000000000001000000000000000000000000000011010000000011111
  transition:   6'001101 27'--------------------------0 ->   6'001101 61'0000000000000000000000000000000000000000000011010000001011111
  transition:   6'001101 27'-00-----------------------1 ->   6'001100 61'0000000000000000000000000000000000000000000011000000001011111
  transition:   6'101101 27'--------------------------0 ->   6'101101 61'0000000000000000000000000000010000000000001011010000000011111
  transition:   6'101101 27'-0------------------------1 ->   6'001101 61'0000000000000000000000000000010000000000000011010000000011111
  transition:   6'011101 27'--------------------------0 ->   6'011101 61'0000000000000000000001000000000000000000000111010000000011111
  transition:   6'011101 27'-0------------------------1 ->   6'001101 61'0000000000000000000001000000000000000000000011010000000011111
  transition:   6'000011 27'--------------------------0 ->   6'000011 61'0000001000000000000000000000000000000000000000110000000011111
  transition:   6'000011 27'------------------0-------1 ->   6'001101 61'0000001000000000000000000000000000000000000011010000000011111
  transition:   6'000011 27'------------------1-------1 ->   6'000100 61'0000001000000000000000000000000000000000000001000000000011111
  transition:   6'100011 27'--------------------------0 ->   6'100011 61'0000000000000000000000000000000000000000001000110000100011111
  transition:   6'100011 27'--------------------------1 ->   6'101110 61'0000000000000000000000000000000000000000001011100000100011111
  transition:   6'010011 27'--------------------------0 ->   6'010011 61'0000000000000100000000000000000000000000000100110000000011111
  transition:   6'010011 27'--------------------------1 ->   6'010100 61'0000000000000100000000000000000000000000000101000000000011111
  transition:   6'001011 27'--------------------------0 ->   6'001011 61'0000000000000000000000000000000000000001000010110000000011111
  transition:   6'001011 27'-00-----------------0-----1 ->   6'010110 61'0000000000000000000000000000000000000001000101100000000011111
  transition:   6'101011 27'--------------------------0 ->   6'101011 61'0000000000000000000000000001000000000000001010110000000011111
  transition:   6'101011 27'--------------------------1 ->   6'101100 61'0000000000000000000000000001000000000000001011000000000011111
  transition:   6'011011 27'--------------------------0 ->   6'011011 61'0000000000000000000100000000000000000000000110110000000011111
  transition:   6'011011 27'--------------------------1 ->   6'011100 61'0000000000000000000100000000000000000000000111000000000011111
  transition:   6'000111 27'--------------------------0 ->   6'000111 61'0000000000000000000000000000000010000000000001110000000011111
  transition:   6'000111 27'-00-----------------------1 ->   6'001100 61'0000000000000000000000000000000010000000000011000000000011111
  transition:   6'100111 27'--------------------------0 ->   6'100111 61'0000000000000000000000000000000000000000001001110010000011111
  transition:   6'100111 27'--------------------------1 ->   6'101000 61'0000000000000000000000000000000000000000001010000010000011111
  transition:   6'010111 27'--------------------------0 ->   6'010111 61'0000000000000000000000000000000000100000000101110000000011111
  transition:   6'010111 27'-00-----------------------1 ->   6'001100 61'0000000000000000000000000000000000100000000011000000000011111
  transition:   6'001111 27'--------------------------0 ->   6'001111 61'0000000001000000000000000000000000000000000011110000000011111
  transition:   6'001111 27'--------------------------1 ->   6'010000 61'0000000001000000000000000000000000000000000100000000000011111
  transition:   6'101111 27'--------------------------0 ->   6'101111 61'1000000000000000000000000000000000000000001011110000000011111
  transition:   6'101111 27'-------------------------01 ->   6'001101 61'1000000000000000000000000000000000000000000011010000000011111
  transition:   6'101111 27'-------------------------11 ->   6'100011 61'1000000000000000000000000000000000000000001000110000000011111
  transition:   6'011111 27'--------------------------0 ->   6'011111 61'0000000000000000010000000000000000000000000111110000000010111
  transition:   6'011111 27'--------------------------1 ->   6'100000 61'0000000000000000010000000000000000000000001000000000000010111

4.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$911' from module `\cpu'.
  Removing unused input signal $auto$opt_reduce.cc:132:opt_mux$838.

4.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..
  removing unused `$ne' cell `$ne$cpu.v:414$18'.
  removing unused `$ne' cell `$ne$cpu.v:414$19'.
  removing unused `$ne' cell `$ne$cpu.v:415$22'.
  removing unused `$ne' cell `$ne$cpu.v:415$24'.
  removing unused `$ne' cell `$ne$cpu.v:415$26'.
  removing unused `$eq' cell `$eq$cpu.v:533$46'.
  removing unused `$eq' cell `$eq$cpu.v:575$52'.
  removing unused `$eq' cell `$eq$cpu.v:615$58'.
  removing unused `$eq' cell `$eq$cpu.v:615$60'.
  removing unused `$eq' cell `$eq$cpu.v:745$79'.
  removing unused `$eq' cell `$eq$cpu.v:747$81'.
  removing unused `$eq' cell `$eq$cpu.v:843$118'.
  removing unused `$eq' cell `$eq$cpu.v:843$119'.
  removing unused `$mux' cell `$ternary$cpu.v:894$131'.
  removing unused `$mux' cell `$ternary$cpu.v:903$136'.
  removing unused `$mux' cell `$ternary$cpu.v:913$139'.
  removing unused `$mux' cell `$ternary$cpu.v:945$140'.
  removing unused `$mux' cell `$ternary$cpu.v:946$142'.
  removing unused `$eq' cell `$eq$cpu.v:1010$152'.
  removing unused `$eq' cell `$eq$cpu.v:1083$171'.
  removing unused `$eq' cell `$eq$cpu.v:1215$218'.
  removing unused `$pmux' cell `$procmux$449'.
  removing unused `$eq' cell `$procmux$451_CMP0'.
  removing unused `$eq' cell `$procmux$452_CMP0'.
  removing unused `$eq' cell `$procmux$454_CMP0'.
  removing unused `$eq' cell `$procmux$455_CMP0'.
  removing unused `$eq' cell `$procmux$456_CMP0'.
  removing unused `$eq' cell `$procmux$457_CMP0'.
  removing unused `$eq' cell `$procmux$458_CMP0'.
  removing unused `$eq' cell `$procmux$459_CMP0'.
  removing unused `$eq' cell `$procmux$460_CMP0'.
  removing unused `$eq' cell `$procmux$461_CMP0'.
  removing unused `$eq' cell `$procmux$462_CMP0'.
  removing unused `$eq' cell `$procmux$463_CMP0'.
  removing unused `$eq' cell `$procmux$464_CMP0'.
  removing unused `$eq' cell `$procmux$465_CMP0'.
  removing unused `$eq' cell `$procmux$466_CMP0'.
  removing unused `$eq' cell `$procmux$468_CMP0'.
  removing unused `$eq' cell `$procmux$469_CMP0'.
  removing unused `$eq' cell `$procmux$470_CMP0'.
  removing unused `$eq' cell `$procmux$471_CMP0'.
  removing unused `$eq' cell `$procmux$472_CMP0'.
  removing unused `$eq' cell `$procmux$474_CMP0'.
  removing unused `$eq' cell `$procmux$475_CMP0'.
  removing unused `$eq' cell `$procmux$477_CMP0'.
  removing unused `$eq' cell `$procmux$483_CMP0'.
  removing unused `$eq' cell `$procmux$484_CMP0'.
  removing unused `$eq' cell `$procmux$485_CMP0'.
  removing unused `$eq' cell `$procmux$486_CMP0'.
  removing unused `$eq' cell `$procmux$487_CMP0'.
  removing unused `$eq' cell `$procmux$488_CMP0'.
  removing unused `$eq' cell `$procmux$489_CMP0'.
  removing unused `$eq' cell `$procmux$490_CMP0'.
  removing unused `$eq' cell `$procmux$491_CMP0'.
  removing unused `$eq' cell `$procmux$492_CMP0'.
  removing unused `$eq' cell `$procmux$493_CMP0'.
  removing unused `$eq' cell `$procmux$494_CMP0'.
  removing unused `$logic_not' cell `$procmux$495_CMP0'.
  removing unused `$eq' cell `$procmux$496_CMP0'.
  removing unused `$eq' cell `$procmux$497_CMP0'.
  removing unused `$eq' cell `$procmux$498_CMP0'.
  removing unused `$pmux' cell `$procmux$500'.
  removing unused `$mux' cell `$procmux$526'.
  removing unused `$reduce_or' cell `$auto$opt_reduce.cc:126:opt_mux$837'.
  removing unused `$adff' cell `$procdff$819'.

4.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$911' from module `\cpu'.
  Removing unused output signal $0\state[5:0] [0].
  Removing unused output signal $0\state[5:0] [1].
  Removing unused output signal $0\state[5:0] [2].
  Removing unused output signal $0\state[5:0] [3].
  Removing unused output signal $0\state[5:0] [4].
  Removing unused output signal $0\state[5:0] [5].
  Removing unused output signal $procmux$455_CMP.
  Removing unused output signal $procmux$457_CMP.

4.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\state$911' from module `\cpu' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  existing encoding is already a packed binary encoding.

4.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\state$911' from module `\cpu':
-------------------------------------

  Information on FSM $fsm$\state$911 (\state):

  Number of input signals:   26
  Number of output signals:  53
  Number of state bits:       6

  Input signals:
    0: \RDY
    1: \write_back
    2: \cond_true
    3: $auto$opt_reduce.cc:132:opt_mux$846
    4: $auto$opt_reduce.cc:132:opt_mux$844
    5: $auto$opt_reduce.cc:132:opt_mux$840
    6: $or$cpu.v:903$134_Y
    7: $or$cpu.v:903$135_Y
    8: $xor$cpu.v:946$141_Y
    9: $procmux$416_CMP [0]
   10: $procmux$431_CMP [0]
   11: $procmux$504_CMP
   12: $procmux$506_CMP
   13: $procmux$510_CMP
   14: $procmux$511_CMP
   15: $procmux$516_CMP
   16: $procmux$518_CMP
   17: $procmux$519_CMP
   18: $procmux$520_CMP
   19: $procmux$521_CMP
   20: $procmux$523_CMP
   21: $procmux$524_CMP
   22: $auto$opt_reduce.cc:132:opt_mux$848
   23: $auto$opt_reduce.cc:132:opt_mux$842
   24: $auto$opt_reduce.cc:132:opt_mux$858
   25: $auto$opt_reduce.cc:132:opt_mux$850

  Output signals:
    0: $ne$cpu.v:414$18_Y
    1: $ne$cpu.v:414$19_Y
    2: $ne$cpu.v:415$22_Y
    3: $ne$cpu.v:415$24_Y
    4: $ne$cpu.v:415$26_Y
    5: $eq$cpu.v:533$46_Y
    6: $eq$cpu.v:575$52_Y
    7: $eq$cpu.v:615$58_Y
    8: $eq$cpu.v:615$60_Y
    9: $eq$cpu.v:745$79_Y
   10: $eq$cpu.v:747$81_Y
   11: $eq$cpu.v:843$118_Y
   12: $eq$cpu.v:843$119_Y
   13: $eq$cpu.v:1010$152_Y
   14: $eq$cpu.v:1083$171_Y
   15: $eq$cpu.v:1215$218_Y
   16: $procmux$451_CMP
   17: $procmux$452_CMP
   18: $procmux$454_CMP
   19: $procmux$456_CMP
   20: $procmux$458_CMP
   21: $procmux$459_CMP
   22: $procmux$460_CMP
   23: $procmux$461_CMP
   24: $procmux$462_CMP
   25: $procmux$463_CMP
   26: $procmux$464_CMP
   27: $procmux$465_CMP
   28: $procmux$466_CMP
   29: $procmux$468_CMP
   30: $procmux$469_CMP
   31: $procmux$470_CMP
   32: $procmux$471_CMP
   33: $procmux$472_CMP
   34: $procmux$474_CMP
   35: $procmux$475_CMP
   36: $procmux$477_CMP
   37: $procmux$483_CMP
   38: $procmux$484_CMP
   39: $procmux$485_CMP
   40: $procmux$486_CMP
   41: $procmux$487_CMP
   42: $procmux$488_CMP
   43: $procmux$489_CMP
   44: $procmux$490_CMP
   45: $procmux$491_CMP
   46: $procmux$492_CMP
   47: $procmux$493_CMP
   48: $procmux$494_CMP
   49: $procmux$495_CMP
   50: $procmux$496_CMP
   51: $procmux$497_CMP
   52: $procmux$498_CMP

  State encoding:
    0:   6'000000
    1:   6'100000
    2:   6'010000
    3:   6'110000
    4:   6'001000  <RESET STATE>
    5:   6'101000
    6:   6'011000
    7:   6'000100
    8:   6'100100
    9:   6'010100
   10:   6'001100
   11:   6'101100
   12:   6'011100
   13:   6'000010
   14:   6'100010
   15:   6'010010
   16:   6'001010
   17:   6'101010
   18:   6'011010
   19:   6'000110
   20:   6'100110
   21:   6'010110
   22:   6'001110
   23:   6'101110
   24:   6'011110
   25:   6'000001
   26:   6'100001
   27:   6'010001
   28:   6'110001
   29:   6'001001
   30:   6'101001
   31:   6'011001
   32:   6'000101
   33:   6'100101
   34:   6'010101
   35:   6'001101
   36:   6'101101
   37:   6'011101
   38:   6'000011
   39:   6'100011
   40:   6'010011
   41:   6'001011
   42:   6'101011
   43:   6'011011
   44:   6'000111
   45:   6'100111
   46:   6'010111
   47:   6'001111
   48:   6'101111
   49:   6'011111

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 26'-------------------------0   ->     0 53'00010000000000000000000000000000000000000000000011111
      1:     0 26'-------------------------1   ->    25 53'00010000000000000000000000000000000000000000000011111
      2:     1 26'-------------------------0   ->     1 53'00000000000000000010000000000000000000000000000001111
      3:     1 26'-00----------------------1   ->    10 53'00000000000000000010000000000000000000000000000001111
      4:     2 26'-------------------------0   ->     2 53'00000000001000000000000000000000000000000000000011111
      5:     2 26'-------------------------1   ->    27 53'00000000001000000000000000000000000000000000000011111
      6:     3 26'-------------------------0   ->     3 53'01000000000000000000000000000000000000000000000011111
      7:     3 26'-------------------------1   ->    28 53'01000000000000000000000000000000000000000000000011111
      8:     4 26'-------------------------0   ->     4 53'00000000000000000000000000000000000000100000000011111
      9:     4 26'-------------------------1   ->    29 53'00000000000000000000000000000000000000100000000011111
     10:     5 26'-------------------------0   ->     5 53'00000000000000000000000010000000000000000000000011111
     11:     5 26'-------------------------1   ->    30 53'00000000000000000000000010000000000000000000000011111
     12:     6 26'-------------------------0   ->     6 53'00000000000000000000000000000000000000000000000011111
     13:     6 26'-------------------------1   ->    31 53'00000000000000000000000000000000000000000000000011111
     14:     7 26'-------------------------0   ->     7 53'00000001000000000000000000000000000000000000000011111
     15:     7 26'------------------------01   ->    35 53'00000001000000000000000000000000000000000000000011111
     16:     7 26'------------------------11   ->    39 53'00000001000000000000000000000000000000000000000011111
     17:     8 26'-------------------------0   ->     8 53'00000000000000000000000000000000000000000000010011111
     18:     8 26'-00----------------------1   ->    10 53'00000000000000000000000000000000000000000000010011111
     19:     9 26'-------------------------0   ->     9 53'00000000000000100000000000000000000000000000000011111
     20:     9 26'-------------------1-----1   ->    34 53'00000000000000100000000000000000000000000000000011111
     21:     9 26'-------------------0-----1   ->    35 53'00000000000000100000000000000000000000000000000011111
     22:    10 26'---1---------------------1   ->     0 53'00000000000000000000000000000000000000010000000011111
     23:    10 26'--------------1----------1   ->     3 53'00000000000000000000000000000000000000010000000011111
     24:    10 26'----1--------------------1   ->     4 53'00000000000000000000000000000000000000010000000011111
     25:    10 26'---------1---------------1   ->     6 53'00000000000000000000000000000000000000010000000011111
     26:    10 26'---------------------1---1   ->     8 53'00000000000000000000000000000000000000010000000011111
     27:    10 26'-------------------------0   ->    10 53'00000000000000000000000000000000000000010000000011111
     28:    10 26'0--00000000000000----00--1   ->    10 53'00000000000000000000000000000000000000010000000011111
     29:    10 26'----------------------1--1   ->    13 53'00000000000000000000000000000000000000010000000011111
     30:    10 26'----------------1--------1   ->    15 53'00000000000000000000000000000000000000010000000011111
     31:    10 26'--------1----------------1   ->    17 53'00000000000000000000000000000000000000010000000011111
     32:    10 26'-----1-------------------1   ->    18 53'00000000000000000000000000000000000000010000000011111
     33:    10 26'-------1-----------------1   ->    21 53'00000000000000000000000000000000000000010000000011111
     34:    10 26'-----------1-------------1   ->    22 53'00000000000000000000000000000000000000010000000011111
     35:    10 26'----------1--------------1   ->    24 53'00000000000000000000000000000000000000010000000011111
     36:    10 26'---------------1---------1   ->    26 53'00000000000000000000000000000000000000010000000011111
     37:    10 26'-------------1-----------1   ->    32 53'00000000000000000000000000000000000000010000000011111
     38:    10 26'------1------------------1   ->    33 53'00000000000000000000000000000000000000010000000011111
     39:    10 26'1------------------------1   ->    35 53'00000000000000000000000000000000000000010000000011111
     40:    10 26'------------1------------1   ->    48 53'00000000000000000000000000000000000000010000000011111
     41:    11 26'-------------------------0   ->    11 53'00000000000000000000000000001000000000000000000011111
     42:    11 26'-------------------------1   ->    36 53'00000000000000000000000000001000000000000000000011111
     43:    12 26'-------------------------0   ->    12 53'00000000000000000000100000000000000000000000000011111
     44:    12 26'-------------------------1   ->    37 53'00000000000000000000100000000000000000000000000011111
     45:    13 26'-------------------------0   ->    13 53'00000100000000000000000000000000000000000000000011111
     46:    13 26'-------------------------1   ->    38 53'00000100000000000000000000000000000000000000000011111
     47:    14 26'-00----------------------1   ->    10 53'00000000000000001000000000000000000000000000000011101
     48:    14 26'-------------------------0   ->    14 53'00000000000000001000000000000000000000000000000011101
     49:    15 26'-------------------------0   ->    15 53'00000000000010000000000000000000000000000000000011111
     50:    15 26'-------------------------1   ->    40 53'00000000000010000000000000000000000000000000000011111
     51:    16 26'-------------------------0   ->    16 53'00000000000000000000000000000000000010000000000011111
     52:    16 26'-------------------------1   ->    41 53'00000000000000000000000000000000000010000000000011111
     53:    17 26'-------------------------0   ->    17 53'00000000000000000000000000100000000000000000000011111
     54:    17 26'-------------------------1   ->    42 53'00000000000000000000000000100000000000000000000011111
     55:    18 26'-------------------------0   ->    18 53'00000000000000000000000000000000000000000000000111111
     56:    18 26'-------------------------1   ->    43 53'00000000000000000000000000000000000000000000000111111
     57:    19 26'-----------------0-------1   ->    10 53'00000000000000000000000000000001000000000000000011111
     58:    19 26'-------------------------0   ->    19 53'00000000000000000000000000000001000000000000000011111
     59:    19 26'-----------------1-------1   ->    44 53'00000000000000000000000000000001000000000000000011111
     60:    20 26'-------------------------0   ->    20 53'00000000000000000000000100000000000000000000000011111
     61:    20 26'-------------------------1   ->    45 53'00000000000000000000000100000000000000000000000011111
     62:    21 26'-------------------------0   ->    21 53'00000000000000000000000000000000000000000000000011111
     63:    21 26'-------------------------1   ->    46 53'00000000000000000000000000000000000000000000000011111
     64:    22 26'-------------------------0   ->    22 53'00000000100000000000000000000000000000000000000011111
     65:    22 26'-------------------------1   ->    47 53'00000000100000000000000000000000000000000000000011111
     66:    23 26'-------------------------0   ->    23 53'00000000000000000000000000000000000000000001000011111
     67:    23 26'-0-----------------------1   ->    35 53'00000000000000000000000000000000000000000001000011111
     68:    24 26'-------------------------0   ->    24 53'00000000000000000000000000000000000000000100000011011
     69:    24 26'-------------------------1   ->    49 53'00000000000000000000000000000000000000000100000011011
     70:    25 26'-------------------------0   ->    25 53'00001000000000000000000000000000000000000000000011111
     71:    25 26'------------------------01   ->    35 53'00001000000000000000000000000000000000000000000011111
     72:    25 26'------------------------11   ->    39 53'00001000000000000000000000000000000000000000000011111
     73:    26 26'-------------------------1   ->    14 53'00000000000000000000000000000000000000001000000011110
     74:    26 26'-------------------------0   ->    26 53'00000000000000000000000000000000000000001000000011110
     75:    27 26'-------------------------0   ->    27 53'00000000000100000000000000000000000000000000000011111
     76:    27 26'-0-----------------------1   ->    35 53'00000000000100000000000000000000000000000000000011111
     77:    28 26'-------------------------0   ->    28 53'00100000000000000000000000000000000000000000000011111
     78:    28 26'------------------------01   ->    35 53'00100000000000000000000000000000000000000000000011111
     79:    28 26'------------------------11   ->    39 53'00100000000000000000000000000000000000000000000011111
     80:    29 26'-------------------------1   ->    16 53'00000000000000000000000000000000000100000000000011111
     81:    29 26'-------------------------0   ->    29 53'00000000000000000000000000000000000100000000000011111
     82:    30 26'-00----------------------1   ->    10 53'00000000000000000000000001000000000000000000000011111
     83:    30 26'-------------------------0   ->    30 53'00000000000000000000000001000000000000000000000011111
     84:    31 26'-00-----------------0----1   ->    21 53'00000000000000000000000000000000001000000000000011111
     85:    31 26'-------------------------0   ->    31 53'00000000000000000000000000000000001000000000000011111
     86:    32 26'-----------------------0-1   ->    10 53'00000000000000000000000000000010000000000000000011111
     87:    32 26'-----------------------1-1   ->    19 53'00000000000000000000000000000010000000000000000011111
     88:    32 26'-------------------------0   ->    32 53'00000000000000000000000000000010000000000000000011111
     89:    33 26'-------------------------1   ->    20 53'00000000000000000000001000000000000000000000000011111
     90:    33 26'-------------------------0   ->    33 53'00000000000000000000001000000000000000000000000011111
     91:    34 26'-------------------------0   ->    34 53'00000000000000010000000000000000000000000000000011111
     92:    34 26'-0-----------------------1   ->    35 53'00000000000000010000000000000000000000000000000011111
     93:    35 26'-00----------------------1   ->    10 53'00000000000000000000000000000000000000000000001011111
     94:    35 26'-------------------------0   ->    35 53'00000000000000000000000000000000000000000000001011111
     95:    36 26'-0-----------------------1   ->    35 53'00000000000000000000000000000100000000000000000011111
     96:    36 26'-------------------------0   ->    36 53'00000000000000000000000000000100000000000000000011111
     97:    37 26'-0-----------------------1   ->    35 53'00000000000000000000010000000000000000000000000011111
     98:    37 26'-------------------------0   ->    37 53'00000000000000000000010000000000000000000000000011111
     99:    38 26'------------------1------1   ->     7 53'00000010000000000000000000000000000000000000000011111
    100:    38 26'------------------0------1   ->    35 53'00000010000000000000000000000000000000000000000011111
    101:    38 26'-------------------------0   ->    38 53'00000010000000000000000000000000000000000000000011111
    102:    39 26'-------------------------1   ->    23 53'00000000000000000000000000000000000000000000100011111
    103:    39 26'-------------------------0   ->    39 53'00000000000000000000000000000000000000000000100011111
    104:    40 26'-------------------------1   ->     9 53'00000000000001000000000000000000000000000000000011111
    105:    40 26'-------------------------0   ->    40 53'00000000000001000000000000000000000000000000000011111
    106:    41 26'-00-----------------0----1   ->    21 53'00000000000000000000000000000000000001000000000011111
    107:    41 26'-------------------------0   ->    41 53'00000000000000000000000000000000000001000000000011111
    108:    42 26'-------------------------1   ->    11 53'00000000000000000000000000010000000000000000000011111
    109:    42 26'-------------------------0   ->    42 53'00000000000000000000000000010000000000000000000011111
    110:    43 26'-------------------------1   ->    12 53'00000000000000000001000000000000000000000000000011111
    111:    43 26'-------------------------0   ->    43 53'00000000000000000001000000000000000000000000000011111
    112:    44 26'-00----------------------1   ->    10 53'00000000000000000000000000000000100000000000000011111
    113:    44 26'-------------------------0   ->    44 53'00000000000000000000000000000000100000000000000011111
    114:    45 26'-------------------------1   ->     5 53'00000000000000000000000000000000000000000010000011111
    115:    45 26'-------------------------0   ->    45 53'00000000000000000000000000000000000000000010000011111
    116:    46 26'-00----------------------1   ->    10 53'00000000000000000000000000000000010000000000000011111
    117:    46 26'-------------------------0   ->    46 53'00000000000000000000000000000000010000000000000011111
    118:    47 26'-------------------------1   ->     2 53'00000000010000000000000000000000000000000000000011111
    119:    47 26'-------------------------0   ->    47 53'00000000010000000000000000000000000000000000000011111
    120:    48 26'------------------------01   ->    35 53'10000000000000000000000000000000000000000000000011111
    121:    48 26'------------------------11   ->    39 53'10000000000000000000000000000000000000000000000011111
    122:    48 26'-------------------------0   ->    48 53'10000000000000000000000000000000000000000000000011111
    123:    49 26'-------------------------1   ->     1 53'00000000000000000100000000000000000000000000000010111
    124:    49 26'-------------------------0   ->    49 53'00000000000000000100000000000000000000000000000010111

-------------------------------------

4.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\state$911' from module `\cpu'.

4.12. Executing OPT pass (performing simple optimizations).

4.12.1. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1095' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:215:map_fsm$971' in module `cpu' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1086' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1387' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1023' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1358' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1349' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1340' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1032' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1154' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1149' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1148 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1077' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1400' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1399 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1396' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1391' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1390 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1145' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1510' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1509 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1506' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1497' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1331' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1492' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1491 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1488' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1072' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1071 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1068' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1050' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1326' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1325 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1322' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1045' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1044 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1041' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1036' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1035 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1483' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1482 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1479' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1474' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1473 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1461' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1456' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1455 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1452' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1447' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1446 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1443' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1438' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1437 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1434' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1317' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1316 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1313' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1308' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1307 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1304' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1299' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1298 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1295' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1290' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1289 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1286' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1277' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1272' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1271 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1268' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1259' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1429' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1428 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1425' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1254' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1253 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1250' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1104' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1108' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1107 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1241' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1226' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1414' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1221' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1220 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1217' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1208' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1199' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1409' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1408 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1405' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1190' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1185' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1184 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1181' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1113' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1172' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1167' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1166 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1163' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1136' in module `cpu' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1140' (1) in module `\cpu' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$1139 = \RDY'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1059' in module `cpu' with inverter.

4.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1461' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1460 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1461' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1452' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1451 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1452' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1443' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1442 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1443' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1434' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1433 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1434' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1488' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1487 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1488' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1425' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1424 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1425' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1414' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1413 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1414' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1405' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1404 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1405' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1396' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1395 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1396' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1387' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1386 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1387' from module `\cpu'.
  Cell `$auto$fsm_map.cc:105:implement_pattern_cache$1364' is identical to cell `$auto$fsm_map.cc:105:implement_pattern_cache$1420'.
    Redirecting output \Y: $auto$fsm_map.cc:102:implement_pattern_cache$1363 = $auto$fsm_map.cc:102:implement_pattern_cache$1419
    Removing $reduce_or cell `$auto$fsm_map.cc:105:implement_pattern_cache$1364' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1358' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1357 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1358' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1349' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1348 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1349' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1340' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1339 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1340' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1331' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1330 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1331' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1322' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1321 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1322' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1497' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1496 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1497' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1313' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1312 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1313' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1304' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1303 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1304' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1295' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1294 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1295' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1286' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1285 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1286' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1277' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1276 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1277' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1268' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1267 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1268' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1259' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1258 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1259' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1250' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1249 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1250' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1241' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1240 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1241' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1226' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1225 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1226' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1506' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1505 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1506' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1217' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1216 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1217' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1208' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1207 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1208' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1199' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1198 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1199' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1190' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1189 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1190' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1479' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1478 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1479' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1181' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1180 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1181' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1172' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1171 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1172' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1163' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1162 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1163' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1154' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1153 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1154' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1145' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1144 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1145' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1136' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1135 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1136' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1113' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1112 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1113' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1104' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1103 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1104' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1095' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1094 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1095' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1086' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1085 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1086' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1077' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1076 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1077' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1068' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1067 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1068' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1059' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1058 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1059' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1050' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1049 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1050' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1041' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1040 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1041' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1032' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1031 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1032' from module `\cpu'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$1023' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1470'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$1022 = $auto$fsm_map.cc:74:implement_pattern_cache$1469
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$1023' from module `\cpu'.
Removed a total of 50 cells.

4.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..
  removing unused `$reduce_or' cell `$auto$fsm_map.cc:144:implement_pattern_cache$1066'.
  removing unused `$and' cell `$auto$fsm_map.cc:121:implement_pattern_cache$1065'.
  removing unused `$eq' cell `$auto$fsm_map.cc:77:implement_pattern_cache$1063'.
  removing unused `$and' cell `$auto$fsm_map.cc:121:implement_pattern_cache$1061'.

4.12.5. Finished fast OPT passes.

4.13. Executing MEMORY pass.

4.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\AXYS$cpu.v:533$222' in module `\cpu': merged $dff to cell.
Checking cell `$memrd$\AXYS$cpu.v:76$2' in module `\cpu': no (compatible) $dff found.

4.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..
  removing unused `$dff' cell `$procdff$830'.
  removing unused `$dff' cell `$procdff$831'.
  removing unused `$dff' cell `$procdff$832'.

4.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..

4.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\AXYS' in module `\cpu':
  $memwr$\AXYS$cpu.v:533$222 ($memwr)
  $memrd$\AXYS$cpu.v:76$2 ($memrd)

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..

4.15. Executing OPT pass (performing simple optimizations).

4.15.1. Executing OPT_EXPR pass (perform const folding).
Optimized away 1 select inputs of $pmux cell `$procmux$284' in module `ALU'.
Optimized away 1 select inputs of $pmux cell `$procmux$276' in module `ALU'.
Replacing $and cell `$and$cpu.v:436$31' in module `cpu' with cells using grouped bits:
  New cell `$auto$opt_expr.cc:158:group_cell_inputs$1522': A=6'111111, B={ \Z \V \N \I \D \C }
  New cell `$auto$opt_expr.cc:158:group_cell_inputs$1524': A=2'10, B=2'10
Optimized away 1 select inputs of $pmux cell `$procmux$707' in module `cpu'.
Optimized away 1 select inputs of $pmux cell `$procmux$713' in module `cpu'.
Replacing $mux cell `$ternary$cpu.v:545$51' (mux_bool) in module `\cpu' with constant driver `$auto$wreduce.cc:347:run$866 [0] = \index_y'.
Replacing $mux cell `$procmux$757' in module `cpu' with inverter.
Optimized away 1 select inputs of $pmux cell `$procmux$295' in module `cpu'.
Replacing $mux cell `$procmux$339' (mux_bool) in module `\cpu' with constant driver `$procmux$339_Y = $procmux$340_CMP'.
Replacing $mux cell `$procmux$355' (mux_bool) in module `\cpu' with constant driver `$procmux$355_Y = $procmux$356_CTRL'.
Replacing $mux cell `$procmux$361' (mux_bool) in module `\cpu' with constant driver `$procmux$361_Y = $procmux$348_CMP'.
Replacing $mux cell `$procmux$367' (mux_bool) in module `\cpu' with constant driver `$procmux$367_Y = $procmux$368_CTRL'.
Replacing $mux cell `$procmux$373' (mux_bool) in module `\cpu' with constant driver `$procmux$373_Y = $procmux$374_CTRL'.
Replacing $mux cell `$procmux$385' (mux_bool) in module `\cpu' with constant driver `$procmux$385_Y = $procmux$386_CMP'.
Replacing $mux cell `$procmux$391' (mux_bool) in module `\cpu' with constant driver `$procmux$391_Y = $procmux$392_CTRL'.
Replacing $mux cell `$procmux$397' (mux_bool) in module `\cpu' with constant driver `$procmux$397_Y = $procmux$398_CMP'.
Replacing $mux cell `$procmux$403' (mux_bool) in module `\cpu' with constant driver `$procmux$403_Y = $procmux$404_CTRL'.
Replacing $mux cell `$procmux$409' (mux_bool) in module `\cpu' with constant driver `$procmux$409_Y = $procmux$410_CTRL'.
Replacing $mux cell `$procmux$415' (mux_bool) in module `\cpu' with constant driver `$procmux$415_Y = $procmux$416_CTRL'.
Replacing $mux cell `$procmux$437' (mux_bool) in module `\cpu' with constant driver `$procmux$437_Y = $procmux$438_CTRL'.
Optimized away 1 select inputs of $pmux cell `$procmux$661' in module `cpu'.
Optimized away 1 select inputs of $pmux cell `$procmux$668' in module `cpu'.
Optimized away 1 select inputs of $pmux cell `$procmux$673' in module `cpu'.
Replacing $mux cell `$procmux$699' (mux_bool) in module `\cpu' with constant driver `$0$memwr$\AXYS$cpu.v:533$1_EN[7:0]$44 [7] = $and$cpu.v:532$45_Y'.
Replacing $and cell `$auto$opt_expr.cc:158:group_cell_inputs$1524' (2'10, 2'10) in module `\cpu' with constant driver `$auto$opt_expr.cc:145:group_cell_inputs$1523 = 2'10'.
Replacing $mux cell `$ternary$cpu.v:722$75' in module `cpu' with or-gate.
Replacing $mux cell `$procmux$290' in module `cpu' with or-gate.
Replacing $mux cell `$procmux$379' in module `cpu' with and-gate.
Replacing $mux cell `$procmux$445' in module `cpu' with or-gate.
Replacing $mux cell `$procmux$536' in module `cpu' with or-gate.
Replacing $mux cell `$procmux$572' in module `cpu' with or-gate.
Replacing $mux cell `$procmux$593' in module `cpu' with or-gate.
Replacing $mux cell `$procmux$604' in module `cpu' with or-gate.
Replacing $mux cell `$procmux$641' in module `cpu' with or-gate.
Replacing $mux cell `$procmux$684' in module `cpu' with and-gate.

4.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
  Cell `$auto$opt_reduce.cc:126:opt_mux$857' is identical to cell `$auto$fsm_map.cc:105:implement_pattern_cache$1420'.
    Redirecting output \Y: $auto$opt_reduce.cc:132:opt_mux$858 = $auto$fsm_map.cc:102:implement_pattern_cache$1363
    Removing $reduce_or cell `$auto$opt_reduce.cc:126:opt_mux$857' from module `\cpu'.
  Cell `$auto$fsm_map.cc:105:implement_pattern_cache$1378' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$841'.
    Redirecting output \Y: $auto$fsm_map.cc:102:implement_pattern_cache$1377 = $auto$opt_reduce.cc:132:opt_mux$842
    Removing $reduce_or cell `$auto$fsm_map.cc:105:implement_pattern_cache$1378' from module `\cpu'.
  Cell `$auto$fsm_map.cc:105:implement_pattern_cache$1131' is identical to cell `$auto$opt_reduce.cc:126:opt_mux$839'.
    Redirecting output \Y: $auto$fsm_map.cc:102:implement_pattern_cache$1130 = $auto$opt_reduce.cc:132:opt_mux$840
    Removing $reduce_or cell `$auto$fsm_map.cc:105:implement_pattern_cache$1131' from module `\cpu'.
Removed a total of 3 cells.

4.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
  removing unused `$logic_not' cell `$procmux$280_CMP0'.
  removing unused `$logic_not' cell `$procmux$288_CMP0'.
Finding unused cells or wires in module \cpu..
  removing unused `$logic_not' cell `$procmux$303_CMP0'.
  removing unused `$eq' cell `$procmux$711_CMP0'.
  removing unused `$eq' cell `$procmux$717_CMP0'.

4.15.5. Finished fast OPT passes.

4.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \AXYS in module \cpu:
  created 4 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 3 $mux cells.
  write interface: 4 write mux blocks.

4.17. Executing OPT pass (performing simple optimizations).

4.17.1. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$1552' (1) in module `\cpu' with constant driver `$auto$rtlil.cc:1641:Eq$1553 = \regsel [0]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$1544' in module `cpu' with inverter.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$1560' (1) in module `\cpu' with constant driver `$auto$rtlil.cc:1641:Eq$1561 = \regsel [1]'.
Replacing $eq cell `$auto$memory_map.cc:65:addr_decode$1542' in module `cpu' with inverter.

4.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

4.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$259 (pure)
    Root of a mux tree: $procmux$262 (pure)
    Root of a mux tree: $procmux$265 (pure)
    Root of a mux tree: $procmux$268 (pure)
    Root of a mux tree: $procmux$271 (pure)
    Root of a mux tree: $procmux$274 (pure)
    Root of a mux tree: $procmux$276 (pure)
    Root of a mux tree: $procmux$282 (pure)
    Root of a mux tree: $ternary$ALU.v:50$234 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $memory\AXYS$wrmux[2][0][0]$1566 (pure)
    Root of a mux tree: $memory\AXYS$wrmux[1][0][0]$1558 (pure)
    Root of a mux tree: $memory\AXYS$wrmux[0][0][0]$1550 (pure)
    Root of a mux tree: $memory\AXYS$rdmux[0][0][0]$1533
    Root of a mux tree: $auto$fsm_map.cc:291:map_fsm$1514 (pure)
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$295 (pure)
    Root of a mux tree: $procmux$305 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$323 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$351 (pure)
    Root of a mux tree: $procmux$357 (pure)
    Root of a mux tree: $procmux$363 (pure)
    Root of a mux tree: $procmux$369 (pure)
    Root of a mux tree: $procmux$375 (pure)
    Root of a mux tree: $procmux$381 (pure)
    Root of a mux tree: $procmux$387 (pure)
    Root of a mux tree: $procmux$393 (pure)
    Root of a mux tree: $procmux$399 (pure)
    Root of a mux tree: $procmux$405 (pure)
    Root of a mux tree: $procmux$411 (pure)
    Root of a mux tree: $procmux$417 (pure)
    Root of a mux tree: $procmux$425 (pure)
    Root of a mux tree: $procmux$433 (pure)
    Root of a mux tree: $procmux$439 (pure)
    Root of a mux tree: $procmux$442 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$533 (pure)
    Root of a mux tree: $procmux$541 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$568 (pure)
    Root of a mux tree: $procmux$583 (pure)
    Root of a mux tree: $procmux$601 (pure)
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$637 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$661 (pure)
    Root of a mux tree: $procmux$668 (pure)
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$681 (pure)
    Root of a mux tree: $procmux$687 (pure)
    Root of a mux tree: $procmux$694 (pure)
    Root of a mux tree: $procmux$707 (pure)
    Root of a mux tree: $procmux$713 (pure)
    Root of a mux tree: $procmux$720 (pure)
    Root of a mux tree: $procmux$724 (pure)
    Root of a mux tree: $procmux$728 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$738 (pure)
    Root of a mux tree: $procmux$741 (pure)
    Root of a mux tree: $procmux$751 (pure)
    Root of a mux tree: $procmux$762 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $ternary$cpu.v:533$49
    Root of a mux tree: $ternary$cpu.v:722$74 (pure)
    Root of a mux tree: $ternary$cpu.v:851$126 (pure)
    Root of a mux tree: $memory\AXYS$wrmux[3][0][0]$1572 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU.
  Optimizing cells in module \cpu.
    New input vector for $reduce_or cell $procmux$781_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [30] $auto$fsm_map.cc:194:map_fsm$970 [31] $auto$fsm_map.cc:194:map_fsm$970 [36] $auto$fsm_map.cc:194:map_fsm$970 [37] $auto$fsm_map.cc:194:map_fsm$970 [46] }
    New input vector for $reduce_or cell $procmux$764_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [0] $auto$fsm_map.cc:194:map_fsm$970 [13] $auto$fsm_map.cc:194:map_fsm$970 [30] $auto$fsm_map.cc:194:map_fsm$970 [31] $auto$fsm_map.cc:194:map_fsm$970 [32] $auto$fsm_map.cc:194:map_fsm$970 [35] $auto$fsm_map.cc:194:map_fsm$970 [36] $auto$fsm_map.cc:194:map_fsm$970 [41] $auto$fsm_map.cc:194:map_fsm$970 [44] $auto$fsm_map.cc:194:map_fsm$970 [46] }
    New input vector for $reduce_or cell $procmux$749_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [9] $auto$fsm_map.cc:194:map_fsm$970 [25] $auto$fsm_map.cc:194:map_fsm$970 [27] $auto$fsm_map.cc:194:map_fsm$970 [30] $auto$fsm_map.cc:194:map_fsm$970 [31] $auto$fsm_map.cc:194:map_fsm$970 [38] $auto$fsm_map.cc:194:map_fsm$970 [46] }
    New input vector for $reduce_or cell $procmux$748_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [7] $auto$fsm_map.cc:194:map_fsm$970 [34] $auto$fsm_map.cc:194:map_fsm$970 [44] }
    New input vector for $reduce_or cell $procmux$746_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [33] }
    New input vector for $reduce_or cell $procmux$745_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [5] $auto$fsm_map.cc:194:map_fsm$970 [11] $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [20] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [42] $auto$fsm_map.cc:194:map_fsm$970 [43] $auto$fsm_map.cc:194:map_fsm$970 [45] $auto$fsm_map.cc:194:map_fsm$970 [49] }
    New input vector for $reduce_or cell $procmux$744_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [2] $auto$fsm_map.cc:194:map_fsm$970 [28] $auto$fsm_map.cc:194:map_fsm$970 [40] $auto$fsm_map.cc:194:map_fsm$970 [47] }
    New input vector for $reduce_or cell $procmux$742_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [23] $auto$fsm_map.cc:194:map_fsm$970 [39] }
    New input vector for $reduce_or cell $procmux$732_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [18] }
    New input vector for $reduce_or cell $procmux$726_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [23] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [43] }
    New input vector for $reduce_or cell $procmux$725_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [7] $auto$fsm_map.cc:194:map_fsm$970 [25] $auto$fsm_map.cc:194:map_fsm$970 [27] $auto$fsm_map.cc:194:map_fsm$970 [28] $auto$fsm_map.cc:194:map_fsm$970 [34] $auto$fsm_map.cc:194:map_fsm$970 [48] }
    New input vector for $reduce_or cell $procmux$721_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [5] $auto$fsm_map.cc:194:map_fsm$970 [11] $auto$fsm_map.cc:194:map_fsm$970 [12] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [41] $auto$fsm_map.cc:194:map_fsm$970 [49] }
    New input vector for $reduce_or cell $procmux$697_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [3] $auto$fsm_map.cc:194:map_fsm$970 [13] $auto$fsm_map.cc:194:map_fsm$970 [22] $auto$fsm_map.cc:194:map_fsm$970 [40] }
    New input vector for $reduce_or cell $procmux$695_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [5] $auto$fsm_map.cc:194:map_fsm$970 [11] $auto$fsm_map.cc:194:map_fsm$970 [12] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [24] $auto$fsm_map.cc:194:map_fsm$970 [33] $auto$fsm_map.cc:194:map_fsm$970 [41] $auto$fsm_map.cc:194:map_fsm$970 [49] }
    New input vector for $reduce_or cell $procmux$688_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [43] }
    New input vector for $reduce_or cell $procmux$679_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [20] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [42] $auto$fsm_map.cc:194:map_fsm$970 [43] $auto$fsm_map.cc:194:map_fsm$970 [45] $auto$fsm_map.cc:194:map_fsm$970 [47] }
    New input vector for $reduce_or cell $procmux$678_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [3] $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [12] $auto$fsm_map.cc:194:map_fsm$970 [13] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [22] $auto$fsm_map.cc:194:map_fsm$970 [24] $auto$fsm_map.cc:194:map_fsm$970 [26] $auto$fsm_map.cc:194:map_fsm$970 [33] $auto$fsm_map.cc:194:map_fsm$970 [40] }
    New input vector for $reduce_or cell $procmux$677_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [32] $auto$fsm_map.cc:194:map_fsm$970 [39] }
    New input vector for $reduce_or cell $procmux$671_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [12] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [19] $auto$fsm_map.cc:194:map_fsm$970 [20] $auto$fsm_map.cc:194:map_fsm$970 [24] $auto$fsm_map.cc:194:map_fsm$970 [26] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [33] $auto$fsm_map.cc:194:map_fsm$970 [39] $auto$fsm_map.cc:194:map_fsm$970 [42] $auto$fsm_map.cc:194:map_fsm$970 [43] $auto$fsm_map.cc:194:map_fsm$970 [45] $auto$fsm_map.cc:194:map_fsm$970 [47] }
    New input vector for $reduce_or cell $procmux$666_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [9] $auto$fsm_map.cc:194:map_fsm$970 [19] $auto$fsm_map.cc:194:map_fsm$970 [38] }
    New input vector for $reduce_or cell $procmux$662_ANY: { $auto$fsm_map.cc:194:map_fsm$970 [15] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [20] $auto$fsm_map.cc:194:map_fsm$970 [24] $auto$fsm_map.cc:194:map_fsm$970 [33] $auto$fsm_map.cc:194:map_fsm$970 [42] $auto$fsm_map.cc:194:map_fsm$970 [45] $auto$fsm_map.cc:194:map_fsm$970 [47] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$851: { $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [35] $auto$fsm_map.cc:194:map_fsm$970 [39] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$841: { $auto$fsm_map.cc:194:map_fsm$970 [23] $auto$fsm_map.cc:194:map_fsm$970 [27] $auto$fsm_map.cc:194:map_fsm$970 [34] $auto$fsm_map.cc:194:map_fsm$970 [36] $auto$fsm_map.cc:194:map_fsm$970 [37] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$839: { $auto$fsm_map.cc:194:map_fsm$970 [1] $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [30] $auto$fsm_map.cc:194:map_fsm$970 [35] $auto$fsm_map.cc:194:map_fsm$970 [44] $auto$fsm_map.cc:194:map_fsm$970 [46] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1519: { $auto$fsm_map.cc:194:map_fsm$970 [0] $auto$fsm_map.cc:194:map_fsm$970 [2] $auto$fsm_map.cc:194:map_fsm$970 [3] $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [5] $auto$fsm_map.cc:194:map_fsm$970 [6] $auto$fsm_map.cc:194:map_fsm$970 [7] $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [9] $auto$fsm_map.cc:194:map_fsm$970 [10] $auto$fsm_map.cc:194:map_fsm$970 [11] $auto$fsm_map.cc:194:map_fsm$970 [12] $auto$fsm_map.cc:194:map_fsm$970 [13] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [15] $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [19] $auto$fsm_map.cc:194:map_fsm$970 [20] $auto$fsm_map.cc:194:map_fsm$970 [21] $auto$fsm_map.cc:194:map_fsm$970 [22] $auto$fsm_map.cc:194:map_fsm$970 [23] $auto$fsm_map.cc:194:map_fsm$970 [24] $auto$fsm_map.cc:194:map_fsm$970 [25] $auto$fsm_map.cc:194:map_fsm$970 [26] $auto$fsm_map.cc:194:map_fsm$970 [27] $auto$fsm_map.cc:194:map_fsm$970 [28] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [30] $auto$fsm_map.cc:194:map_fsm$970 [31] $auto$fsm_map.cc:194:map_fsm$970 [32] $auto$fsm_map.cc:194:map_fsm$970 [33] $auto$fsm_map.cc:194:map_fsm$970 [34] $auto$fsm_map.cc:194:map_fsm$970 [35] $auto$fsm_map.cc:194:map_fsm$970 [36] $auto$fsm_map.cc:194:map_fsm$970 [37] $auto$fsm_map.cc:194:map_fsm$970 [38] $auto$fsm_map.cc:194:map_fsm$970 [39] $auto$fsm_map.cc:194:map_fsm$970 [40] $auto$fsm_map.cc:194:map_fsm$970 [41] $auto$fsm_map.cc:194:map_fsm$970 [42] $auto$fsm_map.cc:194:map_fsm$970 [43] $auto$fsm_map.cc:194:map_fsm$970 [44] $auto$fsm_map.cc:194:map_fsm$970 [45] $auto$fsm_map.cc:194:map_fsm$970 [46] $auto$fsm_map.cc:194:map_fsm$970 [47] $auto$fsm_map.cc:194:map_fsm$970 [48] $auto$fsm_map.cc:194:map_fsm$970 [49] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1518: { $auto$fsm_map.cc:194:map_fsm$970 [0] $auto$fsm_map.cc:194:map_fsm$970 [1] $auto$fsm_map.cc:194:map_fsm$970 [2] $auto$fsm_map.cc:194:map_fsm$970 [3] $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [5] $auto$fsm_map.cc:194:map_fsm$970 [6] $auto$fsm_map.cc:194:map_fsm$970 [7] $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [9] $auto$fsm_map.cc:194:map_fsm$970 [10] $auto$fsm_map.cc:194:map_fsm$970 [11] $auto$fsm_map.cc:194:map_fsm$970 [12] $auto$fsm_map.cc:194:map_fsm$970 [13] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [15] $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [19] $auto$fsm_map.cc:194:map_fsm$970 [20] $auto$fsm_map.cc:194:map_fsm$970 [21] $auto$fsm_map.cc:194:map_fsm$970 [22] $auto$fsm_map.cc:194:map_fsm$970 [23] $auto$fsm_map.cc:194:map_fsm$970 [24] $auto$fsm_map.cc:194:map_fsm$970 [25] $auto$fsm_map.cc:194:map_fsm$970 [26] $auto$fsm_map.cc:194:map_fsm$970 [27] $auto$fsm_map.cc:194:map_fsm$970 [28] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [30] $auto$fsm_map.cc:194:map_fsm$970 [31] $auto$fsm_map.cc:194:map_fsm$970 [32] $auto$fsm_map.cc:194:map_fsm$970 [33] $auto$fsm_map.cc:194:map_fsm$970 [34] $auto$fsm_map.cc:194:map_fsm$970 [35] $auto$fsm_map.cc:194:map_fsm$970 [36] $auto$fsm_map.cc:194:map_fsm$970 [37] $auto$fsm_map.cc:194:map_fsm$970 [38] $auto$fsm_map.cc:194:map_fsm$970 [39] $auto$fsm_map.cc:194:map_fsm$970 [40] $auto$fsm_map.cc:194:map_fsm$970 [41] $auto$fsm_map.cc:194:map_fsm$970 [42] $auto$fsm_map.cc:194:map_fsm$970 [43] $auto$fsm_map.cc:194:map_fsm$970 [44] $auto$fsm_map.cc:194:map_fsm$970 [45] $auto$fsm_map.cc:194:map_fsm$970 [46] $auto$fsm_map.cc:194:map_fsm$970 [47] $auto$fsm_map.cc:194:map_fsm$970 [48] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1517: { $auto$fsm_map.cc:194:map_fsm$970 [0] $auto$fsm_map.cc:194:map_fsm$970 [1] $auto$fsm_map.cc:194:map_fsm$970 [2] $auto$fsm_map.cc:194:map_fsm$970 [3] $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [5] $auto$fsm_map.cc:194:map_fsm$970 [6] $auto$fsm_map.cc:194:map_fsm$970 [7] $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [9] $auto$fsm_map.cc:194:map_fsm$970 [10] $auto$fsm_map.cc:194:map_fsm$970 [11] $auto$fsm_map.cc:194:map_fsm$970 [12] $auto$fsm_map.cc:194:map_fsm$970 [13] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [15] $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [19] $auto$fsm_map.cc:194:map_fsm$970 [20] $auto$fsm_map.cc:194:map_fsm$970 [21] $auto$fsm_map.cc:194:map_fsm$970 [22] $auto$fsm_map.cc:194:map_fsm$970 [23] $auto$fsm_map.cc:194:map_fsm$970 [25] $auto$fsm_map.cc:194:map_fsm$970 [26] $auto$fsm_map.cc:194:map_fsm$970 [27] $auto$fsm_map.cc:194:map_fsm$970 [28] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [30] $auto$fsm_map.cc:194:map_fsm$970 [31] $auto$fsm_map.cc:194:map_fsm$970 [32] $auto$fsm_map.cc:194:map_fsm$970 [33] $auto$fsm_map.cc:194:map_fsm$970 [34] $auto$fsm_map.cc:194:map_fsm$970 [35] $auto$fsm_map.cc:194:map_fsm$970 [36] $auto$fsm_map.cc:194:map_fsm$970 [37] $auto$fsm_map.cc:194:map_fsm$970 [38] $auto$fsm_map.cc:194:map_fsm$970 [39] $auto$fsm_map.cc:194:map_fsm$970 [40] $auto$fsm_map.cc:194:map_fsm$970 [41] $auto$fsm_map.cc:194:map_fsm$970 [42] $auto$fsm_map.cc:194:map_fsm$970 [43] $auto$fsm_map.cc:194:map_fsm$970 [44] $auto$fsm_map.cc:194:map_fsm$970 [45] $auto$fsm_map.cc:194:map_fsm$970 [46] $auto$fsm_map.cc:194:map_fsm$970 [47] $auto$fsm_map.cc:194:map_fsm$970 [48] $auto$fsm_map.cc:194:map_fsm$970 [49] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1516: { $auto$fsm_map.cc:194:map_fsm$970 [0] $auto$fsm_map.cc:194:map_fsm$970 [1] $auto$fsm_map.cc:194:map_fsm$970 [2] $auto$fsm_map.cc:194:map_fsm$970 [3] $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [5] $auto$fsm_map.cc:194:map_fsm$970 [6] $auto$fsm_map.cc:194:map_fsm$970 [7] $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [9] $auto$fsm_map.cc:194:map_fsm$970 [10] $auto$fsm_map.cc:194:map_fsm$970 [11] $auto$fsm_map.cc:194:map_fsm$970 [12] $auto$fsm_map.cc:194:map_fsm$970 [13] $auto$fsm_map.cc:194:map_fsm$970 [15] $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [19] $auto$fsm_map.cc:194:map_fsm$970 [20] $auto$fsm_map.cc:194:map_fsm$970 [21] $auto$fsm_map.cc:194:map_fsm$970 [22] $auto$fsm_map.cc:194:map_fsm$970 [23] $auto$fsm_map.cc:194:map_fsm$970 [24] $auto$fsm_map.cc:194:map_fsm$970 [25] $auto$fsm_map.cc:194:map_fsm$970 [26] $auto$fsm_map.cc:194:map_fsm$970 [27] $auto$fsm_map.cc:194:map_fsm$970 [28] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [30] $auto$fsm_map.cc:194:map_fsm$970 [31] $auto$fsm_map.cc:194:map_fsm$970 [32] $auto$fsm_map.cc:194:map_fsm$970 [33] $auto$fsm_map.cc:194:map_fsm$970 [34] $auto$fsm_map.cc:194:map_fsm$970 [35] $auto$fsm_map.cc:194:map_fsm$970 [36] $auto$fsm_map.cc:194:map_fsm$970 [37] $auto$fsm_map.cc:194:map_fsm$970 [38] $auto$fsm_map.cc:194:map_fsm$970 [39] $auto$fsm_map.cc:194:map_fsm$970 [40] $auto$fsm_map.cc:194:map_fsm$970 [41] $auto$fsm_map.cc:194:map_fsm$970 [42] $auto$fsm_map.cc:194:map_fsm$970 [43] $auto$fsm_map.cc:194:map_fsm$970 [44] $auto$fsm_map.cc:194:map_fsm$970 [45] $auto$fsm_map.cc:194:map_fsm$970 [46] $auto$fsm_map.cc:194:map_fsm$970 [47] $auto$fsm_map.cc:194:map_fsm$970 [48] $auto$fsm_map.cc:194:map_fsm$970 [49] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1515: { $auto$fsm_map.cc:194:map_fsm$970 [0] $auto$fsm_map.cc:194:map_fsm$970 [1] $auto$fsm_map.cc:194:map_fsm$970 [2] $auto$fsm_map.cc:194:map_fsm$970 [3] $auto$fsm_map.cc:194:map_fsm$970 [4] $auto$fsm_map.cc:194:map_fsm$970 [5] $auto$fsm_map.cc:194:map_fsm$970 [6] $auto$fsm_map.cc:194:map_fsm$970 [7] $auto$fsm_map.cc:194:map_fsm$970 [8] $auto$fsm_map.cc:194:map_fsm$970 [9] $auto$fsm_map.cc:194:map_fsm$970 [10] $auto$fsm_map.cc:194:map_fsm$970 [11] $auto$fsm_map.cc:194:map_fsm$970 [12] $auto$fsm_map.cc:194:map_fsm$970 [13] $auto$fsm_map.cc:194:map_fsm$970 [14] $auto$fsm_map.cc:194:map_fsm$970 [15] $auto$fsm_map.cc:194:map_fsm$970 [16] $auto$fsm_map.cc:194:map_fsm$970 [17] $auto$fsm_map.cc:194:map_fsm$970 [18] $auto$fsm_map.cc:194:map_fsm$970 [19] $auto$fsm_map.cc:194:map_fsm$970 [20] $auto$fsm_map.cc:194:map_fsm$970 [21] $auto$fsm_map.cc:194:map_fsm$970 [22] $auto$fsm_map.cc:194:map_fsm$970 [23] $auto$fsm_map.cc:194:map_fsm$970 [24] $auto$fsm_map.cc:194:map_fsm$970 [25] $auto$fsm_map.cc:194:map_fsm$970 [27] $auto$fsm_map.cc:194:map_fsm$970 [28] $auto$fsm_map.cc:194:map_fsm$970 [29] $auto$fsm_map.cc:194:map_fsm$970 [30] $auto$fsm_map.cc:194:map_fsm$970 [31] $auto$fsm_map.cc:194:map_fsm$970 [32] $auto$fsm_map.cc:194:map_fsm$970 [33] $auto$fsm_map.cc:194:map_fsm$970 [34] $auto$fsm_map.cc:194:map_fsm$970 [35] $auto$fsm_map.cc:194:map_fsm$970 [36] $auto$fsm_map.cc:194:map_fsm$970 [37] $auto$fsm_map.cc:194:map_fsm$970 [38] $auto$fsm_map.cc:194:map_fsm$970 [39] $auto$fsm_map.cc:194:map_fsm$970 [40] $auto$fsm_map.cc:194:map_fsm$970 [41] $auto$fsm_map.cc:194:map_fsm$970 [42] $auto$fsm_map.cc:194:map_fsm$970 [43] $auto$fsm_map.cc:194:map_fsm$970 [44] $auto$fsm_map.cc:194:map_fsm$970 [45] $auto$fsm_map.cc:194:map_fsm$970 [46] $auto$fsm_map.cc:194:map_fsm$970 [47] $auto$fsm_map.cc:194:map_fsm$970 [48] $auto$fsm_map.cc:194:map_fsm$970 [49] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1356: { $auto$fsm_map.cc:118:implement_pattern_cache$1350 $auto$fsm_map.cc:118:implement_pattern_cache$1354 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1143: { $auto$fsm_map.cc:118:implement_pattern_cache$1137 $auto$fsm_map.cc:118:implement_pattern_cache$1141 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1134: { $auto$fsm_map.cc:118:implement_pattern_cache$1114 $auto$fsm_map.cc:118:implement_pattern_cache$1118 $auto$fsm_map.cc:118:implement_pattern_cache$1122 $auto$fsm_map.cc:118:implement_pattern_cache$1126 $auto$fsm_map.cc:118:implement_pattern_cache$1132 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1111: { $auto$fsm_map.cc:118:implement_pattern_cache$1105 $auto$fsm_map.cc:118:implement_pattern_cache$1109 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1102: { $auto$fsm_map.cc:118:implement_pattern_cache$1096 $auto$fsm_map.cc:118:implement_pattern_cache$1100 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1030: { $auto$fsm_map.cc:118:implement_pattern_cache$1024 $auto$fsm_map.cc:118:implement_pattern_cache$1028 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:105:implement_pattern_cache$1420: { $auto$fsm_map.cc:194:map_fsm$970 [7] $auto$fsm_map.cc:194:map_fsm$970 [25] $auto$fsm_map.cc:194:map_fsm$970 [28] $auto$fsm_map.cc:194:map_fsm$970 [48] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:105:implement_pattern_cache$1232: { $auto$fsm_map.cc:194:map_fsm$970 [31] $auto$fsm_map.cc:194:map_fsm$970 [41] }
    Consolidated identical input bits for $pmux cell $procmux$707:
      Old ports: A=4'1010, B=8'00000110, Y=\ADJH
      New ports: A=3'101, B=6'000011, Y=\ADJH [3:1]
      New connections: \ADJH [0] = 1'0
    Consolidated identical input bits for $pmux cell $procmux$713:
      Old ports: A=4'1010, B=8'00000110, Y=\ADJL
      New ports: A=3'101, B=6'000011, Y=\ADJL [3:1]
      New connections: \ADJL [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$cpu.v:315$7:
      Old ports: A=3'110, B=3'010, Y=$auto$wreduce.cc:347:run$864 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:347:run$864 [2]
      New connections: $auto$wreduce.cc:347:run$864 [1:0] = 2'10
    Consolidated identical input bits for $mux cell $ternary$cpu.v:436$32:
      Old ports: A={ \N \V 2'11 \D \I \Z \C }, B={ $and$cpu.v:436$31_Y [7:6] 2'10 $and$cpu.v:436$31_Y [3:0] }, Y=$ternary$cpu.v:436$32_Y
      New ports: A={ \N \V 1'1 \D \I \Z \C }, B={ $and$cpu.v:436$31_Y [7:6] 1'0 $and$cpu.v:436$31_Y [3:0] }, Y={ $ternary$cpu.v:436$32_Y [7:6] $ternary$cpu.v:436$32_Y [4:0] }
      New connections: $ternary$cpu.v:436$32_Y [5] = 1'1
    Consolidated identical input bits for $mux cell $ternary$cpu.v:592$55:
      Old ports: A=3'011, B=3'111, Y=$auto$wreduce.cc:347:run$867 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:347:run$867 [2]
      New connections: $auto$wreduce.cc:347:run$867 [1:0] = 2'11
  Optimizing cells in module \cpu.
    Consolidated identical input bits for $mux cell $ternary$cpu.v:315$8:
      Old ports: A=$auto$wreduce.cc:347:run$864 [2:0], B=3'100, Y=$auto$wreduce.cc:347:run$865 [2:0]
      New ports: A={ $auto$wreduce.cc:347:run$864 [2] 1'1 }, B=2'10, Y=$auto$wreduce.cc:347:run$865 [2:1]
      New connections: $auto$wreduce.cc:347:run$865 [0] = 1'0
  Optimizing cells in module \cpu.
Performed a total of 43 changes.

4.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

4.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..

4.17.8. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$ternary$cpu.v:315$7' in module `cpu' with inverter.
Replacing $mux cell `$ternary$cpu.v:592$55' (mux_bool) in module `\cpu' with constant driver `$auto$wreduce.cc:347:run$867 [2] = \backwards'.

4.17.9. Rerunning OPT passes. (Maybe there is more to do..)

4.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$259 (pure)
    Root of a mux tree: $procmux$262 (pure)
    Root of a mux tree: $procmux$265 (pure)
    Root of a mux tree: $procmux$268 (pure)
    Root of a mux tree: $procmux$271 (pure)
    Root of a mux tree: $procmux$274 (pure)
    Root of a mux tree: $procmux$276 (pure)
    Root of a mux tree: $procmux$282 (pure)
    Root of a mux tree: $ternary$ALU.v:50$234 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $auto$fsm_map.cc:291:map_fsm$1514 (pure)
    Root of a mux tree: $memory\AXYS$rdmux[0][0][0]$1533
    Root of a mux tree: $memory\AXYS$wrmux[0][0][0]$1550 (pure)
    Root of a mux tree: $memory\AXYS$wrmux[1][0][0]$1558 (pure)
    Root of a mux tree: $memory\AXYS$wrmux[2][0][0]$1566 (pure)
    Root of a mux tree: $memory\AXYS$wrmux[3][0][0]$1572 (pure)
    Root of a mux tree: $procmux$293 (pure)
    Root of a mux tree: $procmux$295 (pure)
    Root of a mux tree: $procmux$305 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$323 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$351 (pure)
    Root of a mux tree: $procmux$357 (pure)
    Root of a mux tree: $procmux$363 (pure)
    Root of a mux tree: $procmux$369 (pure)
    Root of a mux tree: $procmux$375 (pure)
    Root of a mux tree: $procmux$381 (pure)
    Root of a mux tree: $procmux$387 (pure)
    Root of a mux tree: $procmux$393 (pure)
    Root of a mux tree: $procmux$399 (pure)
    Root of a mux tree: $procmux$405 (pure)
    Root of a mux tree: $procmux$411 (pure)
    Root of a mux tree: $procmux$417 (pure)
    Root of a mux tree: $procmux$425 (pure)
    Root of a mux tree: $procmux$433 (pure)
    Root of a mux tree: $procmux$439 (pure)
    Root of a mux tree: $procmux$442 (pure)
    Root of a mux tree: $procmux$529 (pure)
    Root of a mux tree: $procmux$533 (pure)
    Root of a mux tree: $procmux$541 (pure)
    Root of a mux tree: $procmux$550 (pure)
    Root of a mux tree: $procmux$568 (pure)
    Root of a mux tree: $procmux$583 (pure)
    Root of a mux tree: $procmux$601 (pure)
    Root of a mux tree: $procmux$622 (pure)
    Root of a mux tree: $procmux$637 (pure)
    Root of a mux tree: $procmux$658 (pure)
    Root of a mux tree: $procmux$661 (pure)
    Root of a mux tree: $procmux$668 (pure)
    Root of a mux tree: $procmux$673 (pure)
    Root of a mux tree: $procmux$681 (pure)
    Root of a mux tree: $procmux$687 (pure)
    Root of a mux tree: $procmux$694 (pure)
    Root of a mux tree: $procmux$707 (pure)
    Root of a mux tree: $procmux$713 (pure)
    Root of a mux tree: $procmux$720 (pure)
    Root of a mux tree: $procmux$724 (pure)
    Root of a mux tree: $procmux$728 (pure)
    Root of a mux tree: $procmux$735 (pure)
    Root of a mux tree: $procmux$738 (pure)
    Root of a mux tree: $procmux$741 (pure)
    Root of a mux tree: $procmux$751 (pure)
    Root of a mux tree: $procmux$762 (pure)
    Root of a mux tree: $procmux$777 (pure)
    Root of a mux tree: $ternary$cpu.v:533$49
    Root of a mux tree: $ternary$cpu.v:722$74 (pure)
    Root of a mux tree: $ternary$cpu.v:851$126 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU.
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

4.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

4.17.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..

4.17.15. Executing OPT_EXPR pass (perform const folding).

4.17.16. Finished OPT passes. (There is nothing left to do.)

4.18. Executing TECHMAP pass (map to technology primitives).

4.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping cpu.$memory\AXYS[0]$1525 ($dff) with simplemap.
Mapping cpu.$auto$opt_expr.cc:158:group_cell_inputs$1522 ($and) with simplemap.
Mapping cpu.$auto$memory_map.cc:70:addr_decode$1554 ($and) with simplemap.
Mapping cpu.$not$cpu.v:298$4 ($not) with simplemap.
Mapping cpu.$auto$opt_reduce.cc:126:opt_mux$847 ($reduce_or) with simplemap.
Mapping cpu.$or$cpu.v:298$6 ($or) with simplemap.
Mapping cpu.$ternary$cpu.v:315$7 ($not) with simplemap.
Mapping cpu.$ternary$cpu.v:315$8 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$994 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1018 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$992 ($eq) with simplemap.
Mapping cpu.$xnor$cpu.v:341$13 ($xnor) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1009 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1097 ($and) with simplemap.
Mapping cpu.$logic_and$cpu.v:414$20 ($logic_and) with simplemap.
Mapping cpu.$logic_and$cpu.v:414$21 ($logic_and) with simplemap.
Mapping cpu.$logic_and$cpu.v:415$23 ($logic_and) with simplemap.
Mapping cpu.$logic_and$cpu.v:415$25 ($logic_and) with simplemap.
Mapping cpu.$logic_and$cpu.v:415$27 ($logic_and) with simplemap.
Mapping cpu.$ternary$cpu.v:434$29 ($mux) with simplemap.
Mapping cpu.$or$cpu.v:436$30 ($or) with simplemap.
Mapping cpu.$ternary$cpu.v:436$32 ($mux) with simplemap.
Mapping cpu.$not$cpu.v:475$35 ($not) with simplemap.
Mapping cpu.$and$cpu.v:475$36 ($and) with simplemap.
Mapping cpu.$and$cpu.v:492$38 ($and) with simplemap.
Mapping cpu.$and$cpu.v:532$45 ($and) with simplemap.
Mapping cpu.$memory\AXYS[1]$1527 ($dff) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1093 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1008 ($eq) with simplemap.
Mapping cpu.$ternary$cpu.v:533$49 ($mux) with simplemap.
Mapping cpu.$auto$memory_map.cc:70:addr_decode$1568 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1092 ($and) with simplemap.
Mapping cpu.$and$cpu.v:575$53 ($and) with simplemap.
Mapping cpu.$logic_or$cpu.v:615$59 ($logic_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1090 ($eq) with simplemap.
Mapping cpu.$logic_or$cpu.v:615$61 ($logic_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1025 ($and) with simplemap.
Mapping cpu.$ternary$cpu.v:661$65 ($mux) with simplemap.
Mapping cpu.$ternary$cpu.v:718$69 ($mux) with simplemap.
Mapping cpu.$ternary$cpu.v:718$71 ($mux) with simplemap.
Mapping cpu.$or$cpu.v:722$72 ($or) with simplemap.
Mapping cpu.$ternary$cpu.v:722$74 ($mux) with simplemap.
Mapping cpu.$ternary$cpu.v:722$75 ($or) with simplemap.
Mapping cpu.$ternary$cpu.v:722$77 ($mux) with simplemap.
Mapping cpu.$logic_and$cpu.v:745$80 ($logic_and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1088 ($and) with simplemap.
Mapping cpu.$not$cpu.v:749$82 ($not) with simplemap.
Mapping cpu.$logic_and$cpu.v:749$84 ($logic_and) with simplemap.
Mapping cpu.$or$cpu.v:750$85 ($or) with simplemap.
Mapping cpu.$or$cpu.v:750$86 ($or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1385 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1384 ($and) with simplemap.
Mapping cpu.$ne$cpu.v:772$91 ($ne) with simplemap.
Mapping cpu.$and$cpu.v:772$92 ($and) with simplemap.
Mapping cpu.$or$cpu.v:772$93 ($or) with simplemap.
Mapping cpu.$or$cpu.v:772$94 ($or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1382 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1380 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$995 ($eq) with simplemap.
Mapping cpu.$auto$opt_reduce.cc:126:opt_mux$841 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$991 ($eq) with simplemap.
Mapping cpu.$logic_and$cpu.v:786$103 ($logic_and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1376 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1374 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1372 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1370 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1353 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$999 ($eq) with simplemap.
Mapping cpu.$logic_or$cpu.v:843$120 ($logic_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$993 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1347 ($reduce_or) with simplemap.
Mapping cpu.$and$cpu.v:850$123 ($and) with simplemap.
Mapping cpu.$auto$opt_reduce.cc:126:opt_mux$843 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$990 ($eq) with simplemap.
Mapping cpu.$ternary$cpu.v:851$125 ($mux) with simplemap.
Mapping cpu.$ternary$cpu.v:851$126 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1019 ($eq) with simplemap.
Mapping cpu.$or$cpu.v:903$134 ($or) with simplemap.
Mapping cpu.$or$cpu.v:903$135 ($or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1084 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1346 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$989 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1083 ($and) with simplemap.
Mapping cpu.$xor$cpu.v:946$141 ($xor) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1081 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1368 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$998 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1366 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1351 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$997 ($eq) with simplemap.
Mapping cpu.$logic_and$cpu.v:1010$153 ($logic_and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1402 ($and) with simplemap.

4.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 3
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=3\S_WIDTH=2'.

4.18.3. Continuing TECHMAP pass.
Mapping cpu.$procmux$707 using $paramod\_90_pmux\WIDTH=3\S_WIDTH=2.

4.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 4
Parameter \B_WIDTH = 4
Parameter \Y_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4'.

4.18.5. Continuing TECHMAP pass.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$902 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1362 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1398 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1079 ($and) with simplemap.
Mapping cpu.$logic_or$cpu.v:1083$172 ($logic_or) with simplemap.
Mapping cpu.$logic_and$cpu.v:1083$173 ($logic_and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$996 ($eq) with simplemap.
Mapping cpu.$auto$opt_reduce.cc:126:opt_mux$849 ($reduce_or) with simplemap.

4.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=3'.

4.18.7. Continuing TECHMAP pass.
Mapping cpu.$procmux$762 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=3.

4.18.8. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 16
Parameter \S_WIDTH = 5
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=16\S_WIDTH=5'.

4.18.9. Continuing TECHMAP pass.
Mapping cpu.$procmux$777 using $paramod\_90_pmux\WIDTH=16\S_WIDTH=5.

4.18.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 16
Parameter \Y_WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16'.

4.18.11. Continuing TECHMAP pass.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$905 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1394 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1360 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1393 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1027 ($eq) with simplemap.
Mapping cpu.$procmux$713 using $paramod\_90_pmux\WIDTH=3\S_WIDTH=2.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$908 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1029 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1356 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1389 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1355 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1001 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1000 ($eq) with simplemap.
Mapping cpu.$eq$cpu.v:1180$200 ($eq) with simplemap.
Mapping cpu.$eq$cpu.v:1181$201 ($eq) with simplemap.
Mapping cpu.$eq$cpu.v:1182$202 ($eq) with simplemap.
Mapping cpu.$eq$cpu.v:1183$203 ($eq) with simplemap.
Mapping cpu.$eq$cpu.v:1184$204 ($eq) with simplemap.
Mapping cpu.$eq$cpu.v:1185$205 ($eq) with simplemap.
Mapping cpu.$eq$cpu.v:1186$206 ($eq) with simplemap.
Mapping cpu.$eq$cpu.v:1187$207 ($eq) with simplemap.
Mapping cpu.$eq$cpu.v:1188$208 ($eq) with simplemap.
Mapping cpu.$not$cpu.v:1198$212 ($not) with simplemap.
Mapping cpu.$not$cpu.v:1200$213 ($not) with simplemap.
Mapping cpu.$not$cpu.v:1202$214 ($not) with simplemap.
Mapping cpu.$not$cpu.v:1204$215 ($not) with simplemap.
Mapping cpu.$logic_and$cpu.v:1215$219 ($logic_and) with simplemap.
Mapping cpu.$not$cpu.v:1217$220 ($not) with simplemap.
Mapping cpu.$and$cpu.v:1217$221 ($and) with simplemap.
Mapping cpu.$memory\AXYS$wren[3][0][0]$1570 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1013 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1012 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1020 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1015 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1006 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1007 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1014 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1010 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1017 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1004 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1011 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1016 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1005 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1403 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1152 ($reduce_or) with simplemap.
Mapping cpu.$memory\AXYS$wrmux[0][0][0]$1550 ($mux) with simplemap.
Mapping cpu.$memory\AXYS$wren[0][0][0]$1548 ($and) with simplemap.
Mapping cpu.$procmux$290 ($or) with simplemap.
Mapping cpu.$procmux$293 ($mux) with simplemap.
Mapping cpu.$procmux$296_CMP0 ($eq) with simplemap.

4.18.12. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 7
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=7'.

4.18.13. Continuing TECHMAP pass.
Mapping cpu.$procmux$295 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=7.
Mapping cpu.$procmux$297_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$298_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$299_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$300_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$301_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$302_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$memory_map.cc:70:addr_decode$1546 ($and) with simplemap.
Mapping cpu.$procmux$305 ($mux) with simplemap.
Mapping cpu.$procmux$311 ($mux) with simplemap.
Mapping cpu.$procmux$314 ($mux) with simplemap.
Mapping cpu.$procmux$317 ($mux) with simplemap.
Mapping cpu.$procmux$320 ($mux) with simplemap.
Mapping cpu.$procmux$323 ($mux) with simplemap.
Mapping cpu.$procmux$326 ($mux) with simplemap.
Mapping cpu.$procmux$329 ($mux) with simplemap.
Mapping cpu.$procmux$332 ($mux) with simplemap.
Mapping cpu.$procmux$335 ($mux) with simplemap.
Mapping cpu.$procmux$340_CMP0 ($eq) with simplemap.
Mapping cpu.$memory\AXYS[3]$1531 ($dff) with simplemap.
Mapping cpu.$procmux$341 ($mux) with simplemap.
Mapping cpu.$procmux$346_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$346_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$346_ANY ($reduce_or) with simplemap.

4.18.14. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 4
Parameter \S_WIDTH = 5
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=4\S_WIDTH=5'.

4.18.15. Continuing TECHMAP pass.
Mapping cpu.$procmux$345 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=5.
Mapping cpu.$procmux$347_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$347_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$347_CMP2 ($eq) with simplemap.
Mapping cpu.$procmux$347_CMP3 ($eq) with simplemap.
Mapping cpu.$procmux$347_CMP4 ($eq) with simplemap.
Mapping cpu.$procmux$347_CMP5 ($eq) with simplemap.
Mapping cpu.$procmux$347_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$348_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$988 ($eq) with simplemap.
Mapping cpu.$procmux$350_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$351 ($mux) with simplemap.
Mapping cpu.$procmux$356_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$356_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$356_ANY ($reduce_or) with simplemap.
Mapping cpu.$memory\AXYS$wrmux[2][0][0]$1566 ($mux) with simplemap.
Mapping cpu.$procmux$357 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1344 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$987 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1519 ($reduce_or) with simplemap.
Mapping cpu.$procmux$363 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1342 ($and) with simplemap.
Mapping cpu.$procmux$368_CMP2 ($eq) with simplemap.
Mapping cpu.$memory\AXYS$rdmux[0][0][0]$1533 ($mux) with simplemap.
Mapping cpu.$procmux$368_ANY ($reduce_or) with simplemap.
Mapping cpu.$memory\AXYS$wren[2][0][0]$1564 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1518 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1517 ($reduce_or) with simplemap.
Mapping cpu.$procmux$369 ($mux) with simplemap.
Mapping cpu.$procmux$374_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$374_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$374_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1516 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1515 ($reduce_or) with simplemap.
Mapping cpu.$procmux$375 ($mux) with simplemap.
Mapping cpu.$procmux$380_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$379 ($and) with simplemap.

4.18.16. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 6
Parameter \S_WIDTH = 49
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=6\S_WIDTH=49'.

4.18.17. Continuing TECHMAP pass.
Mapping cpu.$auto$fsm_map.cc:291:map_fsm$1514 using $paramod\_90_pmux\WIDTH=6\S_WIDTH=49.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1513 ($reduce_or) with simplemap.
Mapping cpu.$procmux$381 ($mux) with simplemap.
Mapping cpu.$procmux$386_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$memory_map.cc:70:addr_decode$1562 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1512 ($and) with simplemap.
Mapping cpu.$procmux$387 ($mux) with simplemap.
Mapping cpu.$procmux$392_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$392_CMP1 ($eq) with simplemap.
Mapping cpu.$memory\AXYS$rdmux[0][1][0]$1536 ($mux) with simplemap.
Mapping cpu.$procmux$392_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$393 ($mux) with simplemap.
Mapping cpu.$procmux$398_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1508 ($and) with simplemap.
Mapping cpu.$procmux$399 ($mux) with simplemap.
Mapping cpu.$procmux$404_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$404_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$405 ($mux) with simplemap.
Mapping cpu.$procmux$410_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$410_CMP1 ($eq) with simplemap.
Mapping cpu.$memory\AXYS$rdmux[0][1][1]$1539 ($mux) with simplemap.
Mapping cpu.$procmux$410_ANY ($reduce_or) with simplemap.
Mapping cpu.$memory\AXYS$wrmux[1][0][0]$1558 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1504 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1503 ($and) with simplemap.
Mapping cpu.$procmux$411 ($mux) with simplemap.
Mapping cpu.$procmux$416_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$416_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$416_CMP2 ($eq) with simplemap.
Mapping cpu.$procmux$416_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1501 ($eq) with simplemap.
Mapping cpu.$procmux$417 ($mux) with simplemap.
Mapping cpu.$procmux$422_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$422_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$422_CMP2 ($eq) with simplemap.
Mapping cpu.$procmux$422_CMP3 ($eq) with simplemap.
Mapping cpu.$procmux$422_ANY ($reduce_or) with simplemap.

4.18.18. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 2
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=2\S_WIDTH=3'.

4.18.19. Continuing TECHMAP pass.
Mapping cpu.$procmux$421 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=3.
Mapping cpu.$procmux$423_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$423_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$423_CMP2 ($eq) with simplemap.
Mapping cpu.$procmux$423_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$424_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1499 ($and) with simplemap.
Mapping cpu.$procmux$425 ($mux) with simplemap.
Mapping cpu.$procmux$430_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$430_CMP2 ($eq) with simplemap.
Mapping cpu.$procmux$430_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$429 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=3.
Mapping cpu.$procmux$431_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$431_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$431_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$432_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1338 ($reduce_or) with simplemap.
Mapping cpu.$procmux$432_CMP2 ($eq) with simplemap.
Mapping cpu.$procmux$432_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$433 ($mux) with simplemap.
Mapping cpu.$procmux$438_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$438_CMP1 ($eq) with simplemap.
Mapping cpu.$procmux$438_CMP2 ($eq) with simplemap.
Mapping cpu.$procmux$438_CMP3 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1337 ($and) with simplemap.
Mapping cpu.$procmux$438_CMP5 ($eq) with simplemap.
Mapping cpu.$procmux$438_CMP7 ($eq) with simplemap.
Mapping cpu.$procmux$438_CMP8 ($eq) with simplemap.
Mapping cpu.$procmux$438_ANY ($reduce_or) with simplemap.
Mapping cpu.$memory\AXYS$wren[1][0][0]$1556 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1495 ($reduce_or) with simplemap.
Mapping cpu.$procmux$439 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1494 ($and) with simplemap.
Mapping cpu.$procmux$442 ($mux) with simplemap.
Mapping cpu.$procmux$445 ($or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1335 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$986 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1030 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1075 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$985 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1074 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1070 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$984 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1333 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1057 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$983 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1056 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$982 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1054 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$981 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$980 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1329 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$979 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1328 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$978 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$977 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1052 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1048 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1047 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1043 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1039 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1038 ($and) with simplemap.
Mapping cpu.$procmux$501_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$502_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$503_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$504_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$976 ($eq) with simplemap.
Mapping cpu.$procmux$506_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$507_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$508_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$509_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$510_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$511_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$512_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$513_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$514_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$515_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$516_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$975 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1324 ($and) with simplemap.
Mapping cpu.$procmux$518_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$519_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$520_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$521_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$522_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$523_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$524_CMP0 ($logic_not) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$974 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1490 ($and) with simplemap.
Mapping cpu.$procmux$529 ($mux) with simplemap.
Mapping cpu.$procmux$533 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1486 ($reduce_or) with simplemap.
Mapping cpu.$procmux$536 ($or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1485 ($and) with simplemap.
Mapping cpu.$procmux$538 ($mux) with simplemap.
Mapping cpu.$procmux$541 ($mux) with simplemap.
Mapping cpu.$memory\AXYS$wrmux[3][0][0]$1572 ($mux) with simplemap.
Mapping cpu.$procmux$545 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1481 ($and) with simplemap.
Mapping cpu.$procmux$547 ($mux) with simplemap.
Mapping cpu.$procmux$550 ($mux) with simplemap.
Mapping cpu.$procmux$553 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1477 ($reduce_or) with simplemap.
Mapping cpu.$procmux$557 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1476 ($and) with simplemap.
Mapping cpu.$procmux$560 ($mux) with simplemap.
Mapping cpu.$procmux$563 ($mux) with simplemap.
Mapping cpu.$procmux$565 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1472 ($and) with simplemap.
Mapping cpu.$procmux$568 ($mux) with simplemap.
Mapping cpu.$procmux$572 ($or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1470 ($not) with simplemap.
Mapping cpu.$procmux$575 ($mux) with simplemap.
Mapping cpu.$procmux$578 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1468 ($reduce_or) with simplemap.
Mapping cpu.$procmux$580 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1467 ($and) with simplemap.
Mapping cpu.$procmux$583 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1465 ($eq) with simplemap.
Mapping cpu.$procmux$587 ($mux) with simplemap.
Mapping cpu.$procmux$589 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1463 ($and) with simplemap.
Mapping cpu.$procmux$593 ($or) with simplemap.
Mapping cpu.$procmux$596 ($mux) with simplemap.
Mapping cpu.$procmux$598 ($mux) with simplemap.
Mapping cpu.$procmux$601 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1459 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1458 ($and) with simplemap.
Mapping cpu.$procmux$604 ($or) with simplemap.
Mapping cpu.$procmux$607 ($mux) with simplemap.
Mapping cpu.$procmux$611 ($mux) with simplemap.
Mapping cpu.$procmux$614 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1454 ($and) with simplemap.
Mapping cpu.$procmux$616 ($mux) with simplemap.
Mapping cpu.$procmux$619 ($mux) with simplemap.
Mapping cpu.$procmux$622 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1450 ($reduce_or) with simplemap.
Mapping cpu.$procmux$626 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1449 ($and) with simplemap.
Mapping cpu.$procmux$629 ($mux) with simplemap.
Mapping cpu.$procmux$631 ($mux) with simplemap.
Mapping cpu.$procmux$634 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1445 ($and) with simplemap.
Mapping cpu.$procmux$637 ($mux) with simplemap.
Mapping cpu.$procmux$641 ($or) with simplemap.
Mapping cpu.$procmux$644 ($mux) with simplemap.
Mapping cpu.$procmux$647 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1441 ($reduce_or) with simplemap.
Mapping cpu.$procmux$650 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1440 ($and) with simplemap.
Mapping cpu.$procmux$652 ($mux) with simplemap.
Mapping cpu.$procmux$655 ($mux) with simplemap.
Mapping cpu.$procmux$658 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$973 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1320 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1319 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1315 ($and) with simplemap.
Mapping cpu.$procmux$662_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1436 ($and) with simplemap.

4.18.20. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=4'.

4.18.21. Continuing TECHMAP pass.
Mapping cpu.$procmux$661 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=4.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$972 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$971 ($logic_not) with simplemap.
Mapping cpu.$procmux$664_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1311 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1310 ($and) with simplemap.
Mapping cpu.$procmux$665_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$666_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1306 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:172:map_fsm$969 ($adff) with simplemap.

4.18.22. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 8
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=8\S_WIDTH=2'.

4.18.23. Continuing TECHMAP pass.
Mapping cpu.$procmux$668 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=2.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1099 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1302 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1293 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1292 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1288 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1301 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1297 ($and) with simplemap.
Mapping cpu.$procmux$671_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1101 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1284 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1102 ($reduce_or) with simplemap.
Mapping cpu.$auto$opt_reduce.cc:126:opt_mux$845 ($reduce_or) with simplemap.

4.18.24. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 8
Parameter \S_WIDTH = 5
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=8\S_WIDTH=5'.

4.18.25. Continuing TECHMAP pass.
Mapping cpu.$procmux$673 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=5.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1283 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1281 ($eq) with simplemap.
Mapping cpu.$procmux$677_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1106 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1279 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1274 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1270 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1275 ($reduce_or) with simplemap.
Mapping cpu.$procmux$678_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1266 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1265 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1263 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1261 ($and) with simplemap.
Mapping cpu.$procmux$679_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1432 ($reduce_or) with simplemap.
Mapping cpu.$procmux$681 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1431 ($and) with simplemap.
Mapping cpu.$procmux$684 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1257 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1256 ($and) with simplemap.
Mapping cpu.$procmux$688_ANY ($reduce_or) with simplemap.

4.18.26. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 4
Parameter \S_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=4\S_WIDTH=4'.

4.18.27. Continuing TECHMAP pass.
Mapping cpu.$procmux$687 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=4.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1252 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1110 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1111 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1151 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1248 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1247 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1115 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1243 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1239 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1238 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1245 ($eq) with simplemap.
Mapping cpu.$procmux$695_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$694 using $paramod\_90_pmux\WIDTH=2\S_WIDTH=3.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1236 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1117 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1234 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:105:implement_pattern_cache$1232 ($reduce_or) with simplemap.
Mapping cpu.$procmux$697_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1427 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1002 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1422 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1423 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:215:map_fsm$1003 ($eq) with simplemap.
Mapping cpu.$procmux$708_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$709_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$710_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$memory_map.cc:65:addr_decode$1542 ($not) with simplemap.
Mapping cpu.$procmux$712_CMP0 ($not) with simplemap.
Mapping cpu.$procmux$714_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:105:implement_pattern_cache$1420 ($reduce_or) with simplemap.
Mapping cpu.$procmux$715_CMP0 ($eq) with simplemap.
Mapping cpu.$procmux$716_CMP0 ($eq) with simplemap.
Mapping cpu.$auto$memory_map.cc:65:addr_decode$1544 ($not) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1230 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1119 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1228 ($and) with simplemap.
Mapping cpu.$procmux$721_ANY ($reduce_or) with simplemap.

4.18.28. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=2'.

4.18.29. Continuing TECHMAP pass.
Mapping cpu.$procmux$720 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1224 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1223 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1121 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1219 ($and) with simplemap.
Mapping cpu.$procmux$725_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1418 ($eq) with simplemap.
Mapping cpu.$procmux$724 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1215 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1214 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1212 ($eq) with simplemap.
Mapping cpu.$procmux$726_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1210 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1123 ($and) with simplemap.
Mapping cpu.$procmux$728 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=5.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1125 ($eq) with simplemap.
Mapping cpu.$procmux$731_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1206 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1205 ($and) with simplemap.
Mapping cpu.$procmux$732_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1127 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1416 ($and) with simplemap.
Mapping cpu.$procmux$735 ($mux) with simplemap.
Mapping cpu.$procmux$738 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1203 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1201 ($and) with simplemap.
Mapping cpu.$procmux$742_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1412 ($reduce_or) with simplemap.

4.18.30. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 16
Parameter \S_WIDTH = 8
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=16\S_WIDTH=8'.

4.18.31. Continuing TECHMAP pass.
Mapping cpu.$procmux$741 using $paramod\_90_pmux\WIDTH=16\S_WIDTH=8.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1129 ($eq) with simplemap.
Mapping cpu.$procmux$743_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1197 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1196 ($and) with simplemap.
Mapping cpu.$procmux$744_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1194 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1192 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1188 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1187 ($and) with simplemap.
Mapping cpu.$procmux$745_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1183 ($and) with simplemap.
Mapping cpu.$procmux$746_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1133 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1134 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1179 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1178 ($and) with simplemap.
Mapping cpu.$procmux$748_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1176 ($eq) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1174 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1170 ($reduce_or) with simplemap.
Mapping cpu.$procmux$749_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1411 ($and) with simplemap.
Mapping cpu.$procmux$751 ($mux) with simplemap.
Mapping cpu.$procmux$757 ($not) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1169 ($and) with simplemap.
Mapping cpu.$auto$opt_reduce.cc:126:opt_mux$839 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1138 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1407 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1165 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1161 ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1160 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:77:implement_pattern_cache$1158 ($eq) with simplemap.
Mapping cpu.$procmux$764_ANY ($reduce_or) with simplemap.
Mapping cpu.$procmux$772 ($mux) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1142 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1156 ($and) with simplemap.
Mapping cpu.$auto$fsm_map.cc:144:implement_pattern_cache$1143 ($reduce_or) with simplemap.
Mapping cpu.$memory\AXYS[2]$1529 ($dff) with simplemap.
Mapping cpu.$auto$opt_reduce.cc:126:opt_mux$855 ($reduce_or) with simplemap.
Mapping cpu.$auto$opt_reduce.cc:126:opt_mux$853 ($reduce_or) with simplemap.
Mapping cpu.$auto$opt_reduce.cc:126:opt_mux$851 ($reduce_or) with simplemap.
Mapping cpu.$procmux$781_ANY ($reduce_or) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1147 ($and) with simplemap.
Mapping cpu.$procdff$789 ($dff) with simplemap.
Mapping cpu.$procdff$790 ($dff) with simplemap.
Mapping cpu.$procdff$791 ($dff) with simplemap.
Mapping cpu.$procdff$792 ($dff) with simplemap.
Mapping cpu.$procdff$793 ($dff) with simplemap.
Mapping cpu.$procdff$794 ($dff) with simplemap.
Mapping cpu.$procdff$795 ($dff) with simplemap.
Mapping cpu.$procdff$796 ($dff) with simplemap.
Mapping cpu.$procdff$797 ($dff) with simplemap.
Mapping cpu.$procdff$798 ($dff) with simplemap.
Mapping cpu.$procdff$799 ($dff) with simplemap.
Mapping cpu.$procdff$800 ($dff) with simplemap.
Mapping cpu.$procdff$802 ($dff) with simplemap.
Mapping cpu.$procdff$803 ($dff) with simplemap.
Mapping cpu.$procdff$804 ($dff) with simplemap.
Mapping cpu.$procdff$805 ($dff) with simplemap.
Mapping cpu.$procdff$806 ($dff) with simplemap.
Mapping cpu.$procdff$807 ($dff) with simplemap.
Mapping cpu.$procdff$808 ($dff) with simplemap.
Mapping cpu.$procdff$809 ($dff) with simplemap.
Mapping cpu.$procdff$810 ($dff) with simplemap.
Mapping cpu.$procdff$811 ($dff) with simplemap.
Mapping cpu.$procdff$812 ($dff) with simplemap.
Mapping cpu.$procdff$813 ($dff) with simplemap.
Mapping cpu.$procdff$814 ($dff) with simplemap.
Mapping cpu.$procdff$815 ($dff) with simplemap.
Mapping cpu.$procdff$816 ($dff) with simplemap.
Mapping cpu.$procdff$817 ($dff) with simplemap.
Mapping cpu.$procdff$818 ($dff) with simplemap.
Mapping cpu.$auto$fsm_map.cc:121:implement_pattern_cache$1034 ($and) with simplemap.
Mapping cpu.$procdff$820 ($dff) with simplemap.
Mapping cpu.$procdff$821 ($dff) with simplemap.
Mapping cpu.$procdff$822 ($dff) with simplemap.
Mapping cpu.$procdff$823 ($dff) with simplemap.
Mapping cpu.$procdff$824 ($dff) with simplemap.
Mapping cpu.$procdff$825 ($dff) with simplemap.
Mapping cpu.$procdff$826 ($dff) with simplemap.
Mapping cpu.$procdff$827 ($dff) with simplemap.
Mapping cpu.$procdff$828 ($dff) with simplemap.
Mapping cpu.$procdff$829 ($dff) with simplemap.
Mapping cpu.$procdff$833 ($dff) with simplemap.
Mapping cpu.$procdff$834 ($dff) with simplemap.
Mapping cpu.$procdff$835 ($dff) with simplemap.
Mapping cpu.$procdff$836 ($dff) with simplemap.
Mapping cpu.$techmap$procmux$707.$reduce_or$<techmap.v>:441$2136 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$707.$reduce_or$<techmap.v>:441$2137 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$707.$reduce_or$<techmap.v>:441$2135 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$707.$and$<techmap.v>:434$2134 ($and) with simplemap.
Mapping cpu.$techmap$procmux$707.$and$<techmap.v>:434$2133 ($and) with simplemap.
Mapping cpu.$techmap$procmux$707.$ternary$<techmap.v>:445$2132 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$707.$reduce_or$<techmap.v>:445$2131 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.$xor$<techmap.v>:262$2141 ($xor) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.$xor$<techmap.v>:263$2142 ($xor) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.$and$<techmap.v>:260$2140 ($and) with simplemap.

4.18.32. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=4'.

4.18.33. Executing PROC pass (convert processes to netlists).

4.18.33.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.33.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.33.3. Executing PROC_INIT pass (extract init attributes).

4.18.33.4. Executing PROC_ARST pass (detect async resets in processes).

4.18.33.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$6165'.
     1/8: $0\p[3:0] [2]
     2/8: $0\g[3:0] [2]
     3/8: $0\p[3:0] [3]
     4/8: $0\g[3:0] [3]
     5/8: $0\p[3:0] [1]
     6/8: $0\g[3:0] [1]
     7/8: $0\g[3:0] [0]
     8/8: $0\p[3:0] [0]

4.18.33.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=4.\p' from process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$6165'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=4.\g' from process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$6165'.

4.18.33.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.33.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$6165'.
Cleaned up 0 empty switches.

4.18.34. Executing OPT pass (performing simple optimizations).

4.18.34.1. Executing OPT_EXPR pass (perform const folding).

4.18.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=4'.
Removed a total of 0 cells.

4.18.34.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.18.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=4..
  removing unused `$and' cell `$and$<techmap.v>:222$6170'.
  removing unused `$and' cell `$and$<techmap.v>:222$6176'.
  removing unused `$and' cell `$and$<techmap.v>:230$6179'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

4.18.34.5. Finished fast OPT passes.

4.18.35. Continuing TECHMAP pass.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$902.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.$ternary$<techmap.v>:258$2139 ($mux) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.$not$<techmap.v>:258$2138 ($not) with simplemap.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$902.B_conv ($pos) with simplemap.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$902.A_conv ($pos) with simplemap.
Mapping cpu.$techmap$procmux$762.$and$<techmap.v>:434$2183 ($and) with simplemap.
Mapping cpu.$techmap$procmux$762.$reduce_or$<techmap.v>:441$2184 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$762.$and$<techmap.v>:434$2182 ($and) with simplemap.
Mapping cpu.$techmap$procmux$762.$and$<techmap.v>:434$2181 ($and) with simplemap.
Mapping cpu.$techmap$procmux$762.$ternary$<techmap.v>:445$2180 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$762.$reduce_or$<techmap.v>:445$2179 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2206 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2207 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2205 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2204 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2203 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2202 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2201 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2200 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2199 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2198 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2197 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2196 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2195 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2194 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2193 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:441$2192 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$777.$and$<techmap.v>:434$2191 ($and) with simplemap.
Mapping cpu.$techmap$procmux$777.$and$<techmap.v>:434$2190 ($and) with simplemap.
Mapping cpu.$techmap$procmux$777.$and$<techmap.v>:434$2189 ($and) with simplemap.
Mapping cpu.$techmap$procmux$777.$and$<techmap.v>:434$2188 ($and) with simplemap.
Mapping cpu.$techmap$procmux$777.$and$<techmap.v>:434$2187 ($and) with simplemap.
Mapping cpu.$techmap$procmux$777.$ternary$<techmap.v>:445$2186 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$777.$reduce_or$<techmap.v>:445$2185 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211 ($xor) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:263$2212 ($xor) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210 ($and) with simplemap.

4.18.36. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=16'.

4.18.37. Executing PROC pass (convert processes to netlists).

4.18.37.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.37.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.37.3. Executing PROC_INIT pass (extract init attributes).

4.18.37.4. Executing PROC_ARST pass (detect async resets in processes).

4.18.37.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$6498'.
     1/32: $0\p[15:0] [14]
     2/32: $0\g[15:0] [14]
     3/32: $0\p[15:0] [12]
     4/32: $0\g[15:0] [12]
     5/32: $0\p[15:0] [10]
     6/32: $0\g[15:0] [10]
     7/32: $0\p[15:0] [8]
     8/32: $0\g[15:0] [8]
     9/32: $0\p[15:0] [6]
    10/32: $0\g[15:0] [6]
    11/32: $0\p[15:0] [4]
    12/32: $0\g[15:0] [4]
    13/32: $0\p[15:0] [2]
    14/32: $0\g[15:0] [2]
    15/32: $0\p[15:0] [13]
    16/32: $0\g[15:0] [13]
    17/32: $0\p[15:0] [9]
    18/32: $0\g[15:0] [9]
    19/32: $0\p[15:0] [5]
    20/32: $0\g[15:0] [5]
    21/32: $0\p[15:0] [11]
    22/32: $0\g[15:0] [11]
    23/32: $0\p[15:0] [15]
    24/32: $0\g[15:0] [15]
    25/32: $0\p[15:0] [7]
    26/32: $0\g[15:0] [7]
    27/32: $0\p[15:0] [3]
    28/32: $0\g[15:0] [3]
    29/32: $0\p[15:0] [1]
    30/32: $0\g[15:0] [1]
    31/32: $0\g[15:0] [0]
    32/32: $0\p[15:0] [0]

4.18.37.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\p' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$6498'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\g' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$6498'.

4.18.37.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.37.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$6498'.
Cleaned up 0 empty switches.

4.18.38. Executing OPT pass (performing simple optimizations).

4.18.38.1. Executing OPT_EXPR pass (perform const folding).

4.18.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=16'.
Removed a total of 0 cells.

4.18.38.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.18.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=16..
  removing unused `$and' cell `$and$<techmap.v>:230$6578'.
  removing unused `$and' cell `$and$<techmap.v>:230$6575'.
  removing unused `$and' cell `$and$<techmap.v>:230$6572'.
  removing unused `$and' cell `$and$<techmap.v>:230$6569'.
  removing unused `$and' cell `$and$<techmap.v>:230$6566'.
  removing unused `$and' cell `$and$<techmap.v>:230$6563'.
  removing unused `$and' cell `$and$<techmap.v>:230$6560'.
  removing unused `$and' cell `$and$<techmap.v>:230$6557'.
  removing unused `$and' cell `$and$<techmap.v>:230$6554'.
  removing unused `$and' cell `$and$<techmap.v>:230$6551'.
  removing unused `$and' cell `$and$<techmap.v>:230$6548'.
  removing unused `$and' cell `$and$<techmap.v>:222$6545'.
  removing unused `$and' cell `$and$<techmap.v>:222$6539'.
  removing unused `$and' cell `$and$<techmap.v>:222$6527'.
  removing unused `$and' cell `$and$<techmap.v>:222$6503'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

4.18.38.5. Finished fast OPT passes.

4.18.39. Continuing TECHMAP pass.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$905.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209 ($mux) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.$not$<techmap.v>:258$2208 ($not) with simplemap.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$905.B_conv ($pos) with simplemap.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$905.A_conv ($pos) with simplemap.
Mapping cpu.$techmap$procmux$713.$reduce_or$<techmap.v>:441$2136 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$713.$reduce_or$<techmap.v>:441$2137 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$713.$reduce_or$<techmap.v>:441$2135 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$713.$and$<techmap.v>:434$2134 ($and) with simplemap.
Mapping cpu.$techmap$procmux$713.$and$<techmap.v>:434$2133 ($and) with simplemap.
Mapping cpu.$techmap$procmux$713.$ternary$<techmap.v>:445$2132 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$713.$reduce_or$<techmap.v>:445$2131 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.$xor$<techmap.v>:262$2141 ($xor) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.$xor$<techmap.v>:263$2142 ($xor) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.$and$<techmap.v>:260$2140 ($and) with simplemap.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$908.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.$ternary$<techmap.v>:258$2139 ($mux) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.$not$<techmap.v>:258$2138 ($not) with simplemap.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$908.B_conv ($pos) with simplemap.
Mapping cpu.$auto$alumacc.cc:470:replace_alu$908.A_conv ($pos) with simplemap.
Mapping cpu.$techmap$procmux$295.$and$<techmap.v>:434$2792 ($and) with simplemap.
Mapping cpu.$techmap$procmux$295.$reduce_or$<techmap.v>:441$2793 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$295.$and$<techmap.v>:434$2791 ($and) with simplemap.
Mapping cpu.$techmap$procmux$295.$and$<techmap.v>:434$2790 ($and) with simplemap.
Mapping cpu.$techmap$procmux$295.$and$<techmap.v>:434$2789 ($and) with simplemap.
Mapping cpu.$techmap$procmux$295.$and$<techmap.v>:434$2788 ($and) with simplemap.
Mapping cpu.$techmap$procmux$295.$and$<techmap.v>:434$2787 ($and) with simplemap.
Mapping cpu.$techmap$procmux$295.$and$<techmap.v>:434$2786 ($and) with simplemap.
Mapping cpu.$techmap$procmux$295.$ternary$<techmap.v>:445$2785 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$295.$reduce_or$<techmap.v>:445$2784 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$345.$reduce_or$<techmap.v>:441$2960 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$345.$reduce_or$<techmap.v>:441$2961 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$345.$reduce_or$<techmap.v>:441$2959 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$345.$reduce_or$<techmap.v>:441$2958 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$345.$and$<techmap.v>:434$2957 ($and) with simplemap.
Mapping cpu.$techmap$procmux$345.$and$<techmap.v>:434$2956 ($and) with simplemap.
Mapping cpu.$techmap$procmux$345.$and$<techmap.v>:434$2955 ($and) with simplemap.
Mapping cpu.$techmap$procmux$345.$and$<techmap.v>:434$2954 ($and) with simplemap.
Mapping cpu.$techmap$procmux$345.$and$<techmap.v>:434$2953 ($and) with simplemap.
Mapping cpu.$techmap$procmux$345.$ternary$<techmap.v>:445$2952 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$345.$reduce_or$<techmap.v>:445$2951 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$reduce_or$<techmap.v>:441$3642 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$reduce_or$<techmap.v>:441$3643 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$reduce_or$<techmap.v>:441$3641 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$reduce_or$<techmap.v>:441$3640 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$reduce_or$<techmap.v>:441$3639 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$reduce_or$<techmap.v>:441$3638 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3637 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3636 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3635 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3634 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3633 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3632 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3631 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3630 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3629 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3628 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3627 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3626 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3625 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3624 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3623 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3622 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3621 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3620 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3619 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3618 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3617 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3616 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3615 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3614 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3613 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3612 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3611 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3610 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3609 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3608 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3607 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3606 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3605 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3604 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3603 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3602 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3601 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3600 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3599 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3598 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3597 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3596 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3595 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3594 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3593 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3592 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3591 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3590 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3589 ($and) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$ternary$<techmap.v>:445$3588 ($mux) with simplemap.
Mapping cpu.$techmap$auto$fsm_map.cc:291:map_fsm$1514.$reduce_or$<techmap.v>:445$3587 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$421.$reduce_or$<techmap.v>:441$3976 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$421.$reduce_or$<techmap.v>:441$3977 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$421.$and$<techmap.v>:434$3975 ($and) with simplemap.
Mapping cpu.$techmap$procmux$421.$and$<techmap.v>:434$3974 ($and) with simplemap.
Mapping cpu.$techmap$procmux$421.$and$<techmap.v>:434$3973 ($and) with simplemap.
Mapping cpu.$techmap$procmux$421.$ternary$<techmap.v>:445$3972 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$421.$reduce_or$<techmap.v>:445$3971 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$429.$reduce_or$<techmap.v>:441$3976 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$429.$reduce_or$<techmap.v>:441$3977 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$429.$and$<techmap.v>:434$3975 ($and) with simplemap.
Mapping cpu.$techmap$procmux$429.$and$<techmap.v>:434$3974 ($and) with simplemap.
Mapping cpu.$techmap$procmux$429.$and$<techmap.v>:434$3973 ($and) with simplemap.
Mapping cpu.$techmap$procmux$429.$ternary$<techmap.v>:445$3972 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$429.$reduce_or$<techmap.v>:445$3971 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$661.$and$<techmap.v>:434$5230 ($and) with simplemap.
Mapping cpu.$techmap$procmux$661.$reduce_or$<techmap.v>:441$5231 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$661.$and$<techmap.v>:434$5229 ($and) with simplemap.
Mapping cpu.$techmap$procmux$661.$and$<techmap.v>:434$5228 ($and) with simplemap.
Mapping cpu.$techmap$procmux$661.$and$<techmap.v>:434$5227 ($and) with simplemap.
Mapping cpu.$techmap$procmux$661.$ternary$<techmap.v>:445$5226 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$661.$reduce_or$<techmap.v>:445$5225 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$668.$reduce_or$<techmap.v>:441$5289 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$668.$reduce_or$<techmap.v>:441$5290 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$668.$reduce_or$<techmap.v>:441$5288 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$668.$reduce_or$<techmap.v>:441$5287 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$668.$reduce_or$<techmap.v>:441$5286 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$668.$reduce_or$<techmap.v>:441$5285 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$668.$reduce_or$<techmap.v>:441$5284 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$668.$reduce_or$<techmap.v>:441$5283 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$668.$and$<techmap.v>:434$5282 ($and) with simplemap.
Mapping cpu.$techmap$procmux$668.$and$<techmap.v>:434$5281 ($and) with simplemap.
Mapping cpu.$techmap$procmux$668.$ternary$<techmap.v>:445$5280 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$668.$reduce_or$<techmap.v>:445$5279 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$673.$reduce_or$<techmap.v>:441$5351 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$673.$reduce_or$<techmap.v>:441$5352 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$673.$reduce_or$<techmap.v>:441$5350 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$673.$reduce_or$<techmap.v>:441$5349 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$673.$reduce_or$<techmap.v>:441$5348 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$673.$reduce_or$<techmap.v>:441$5347 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$673.$reduce_or$<techmap.v>:441$5346 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$673.$reduce_or$<techmap.v>:441$5345 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$673.$and$<techmap.v>:434$5344 ($and) with simplemap.
Mapping cpu.$techmap$procmux$673.$and$<techmap.v>:434$5343 ($and) with simplemap.
Mapping cpu.$techmap$procmux$673.$and$<techmap.v>:434$5342 ($and) with simplemap.
Mapping cpu.$techmap$procmux$673.$and$<techmap.v>:434$5341 ($and) with simplemap.
Mapping cpu.$techmap$procmux$673.$and$<techmap.v>:434$5340 ($and) with simplemap.
Mapping cpu.$techmap$procmux$673.$ternary$<techmap.v>:445$5339 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$673.$reduce_or$<techmap.v>:445$5338 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$687.$reduce_or$<techmap.v>:441$5435 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$687.$reduce_or$<techmap.v>:441$5436 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$687.$reduce_or$<techmap.v>:441$5434 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$687.$reduce_or$<techmap.v>:441$5433 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$687.$and$<techmap.v>:434$5432 ($and) with simplemap.
Mapping cpu.$techmap$procmux$687.$and$<techmap.v>:434$5431 ($and) with simplemap.
Mapping cpu.$techmap$procmux$687.$and$<techmap.v>:434$5430 ($and) with simplemap.
Mapping cpu.$techmap$procmux$687.$and$<techmap.v>:434$5429 ($and) with simplemap.
Mapping cpu.$techmap$procmux$687.$ternary$<techmap.v>:445$5428 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$687.$reduce_or$<techmap.v>:445$5427 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$694.$reduce_or$<techmap.v>:441$3976 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$694.$reduce_or$<techmap.v>:441$3977 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$694.$and$<techmap.v>:434$3975 ($and) with simplemap.
Mapping cpu.$techmap$procmux$694.$and$<techmap.v>:434$3974 ($and) with simplemap.
Mapping cpu.$techmap$procmux$694.$and$<techmap.v>:434$3973 ($and) with simplemap.
Mapping cpu.$techmap$procmux$694.$ternary$<techmap.v>:445$3972 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$694.$reduce_or$<techmap.v>:445$3971 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$720.$and$<techmap.v>:434$5662 ($and) with simplemap.
Mapping cpu.$techmap$procmux$720.$reduce_or$<techmap.v>:441$5663 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$720.$and$<techmap.v>:434$5661 ($and) with simplemap.
Mapping cpu.$techmap$procmux$720.$ternary$<techmap.v>:445$5660 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$720.$reduce_or$<techmap.v>:445$5659 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$724.$and$<techmap.v>:434$5662 ($and) with simplemap.
Mapping cpu.$techmap$procmux$724.$reduce_or$<techmap.v>:441$5663 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$724.$and$<techmap.v>:434$5661 ($and) with simplemap.
Mapping cpu.$techmap$procmux$724.$ternary$<techmap.v>:445$5660 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$724.$reduce_or$<techmap.v>:445$5659 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$728.$reduce_or$<techmap.v>:441$5351 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$728.$reduce_or$<techmap.v>:441$5352 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$728.$reduce_or$<techmap.v>:441$5350 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$728.$reduce_or$<techmap.v>:441$5349 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$728.$reduce_or$<techmap.v>:441$5348 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$728.$reduce_or$<techmap.v>:441$5347 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$728.$reduce_or$<techmap.v>:441$5346 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$728.$reduce_or$<techmap.v>:441$5345 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$728.$and$<techmap.v>:434$5344 ($and) with simplemap.
Mapping cpu.$techmap$procmux$728.$and$<techmap.v>:434$5343 ($and) with simplemap.
Mapping cpu.$techmap$procmux$728.$and$<techmap.v>:434$5342 ($and) with simplemap.
Mapping cpu.$techmap$procmux$728.$and$<techmap.v>:434$5341 ($and) with simplemap.
Mapping cpu.$techmap$procmux$728.$and$<techmap.v>:434$5340 ($and) with simplemap.
Mapping cpu.$techmap$procmux$728.$ternary$<techmap.v>:445$5339 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$728.$reduce_or$<techmap.v>:445$5338 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5832 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5833 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5831 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5830 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5829 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5828 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5827 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5826 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5825 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5824 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5823 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5822 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5821 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5820 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5819 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:441$5818 ($reduce_or) with simplemap.
Mapping cpu.$techmap$procmux$741.$and$<techmap.v>:434$5817 ($and) with simplemap.
Mapping cpu.$techmap$procmux$741.$and$<techmap.v>:434$5816 ($and) with simplemap.
Mapping cpu.$techmap$procmux$741.$and$<techmap.v>:434$5815 ($and) with simplemap.
Mapping cpu.$techmap$procmux$741.$and$<techmap.v>:434$5814 ($and) with simplemap.
Mapping cpu.$techmap$procmux$741.$and$<techmap.v>:434$5813 ($and) with simplemap.
Mapping cpu.$techmap$procmux$741.$and$<techmap.v>:434$5812 ($and) with simplemap.
Mapping cpu.$techmap$procmux$741.$and$<techmap.v>:434$5811 ($and) with simplemap.
Mapping cpu.$techmap$procmux$741.$and$<techmap.v>:434$5810 ($and) with simplemap.
Mapping cpu.$techmap$procmux$741.$ternary$<techmap.v>:445$5809 ($mux) with simplemap.
Mapping cpu.$techmap$procmux$741.$reduce_or$<techmap.v>:445$5808 ($reduce_or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$or$<techmap.v>:229$6178 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$or$<techmap.v>:221$6175 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$or$<techmap.v>:221$6172 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$or$<techmap.v>:221$6169 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$or$<techmap.v>:212$6167 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$and$<techmap.v>:229$6177 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$and$<techmap.v>:222$6173 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$and$<techmap.v>:221$6174 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$and$<techmap.v>:221$6171 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$and$<techmap.v>:221$6168 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$and$<techmap.v>:212$6166 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6577 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6574 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6571 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6568 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6565 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6562 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6559 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6556 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6553 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6550 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:229$6547 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6544 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6541 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6538 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6535 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6532 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6529 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6526 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6523 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6520 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6517 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6514 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6511 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6508 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6505 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6502 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:212$6500 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6576 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6573 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6570 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6567 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6564 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6561 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6558 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6555 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6552 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6549 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6546 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6542 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$or$<techmap.v>:229$6178 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$or$<techmap.v>:221$6175 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$or$<techmap.v>:221$6172 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$or$<techmap.v>:221$6169 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$or$<techmap.v>:212$6167 ($or) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$and$<techmap.v>:229$6177 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$and$<techmap.v>:222$6173 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$and$<techmap.v>:221$6174 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$and$<techmap.v>:221$6171 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$and$<techmap.v>:221$6168 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$and$<techmap.v>:212$6166 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6536 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6533 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6530 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6524 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6521 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6518 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6515 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6512 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6509 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:222$6506 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6543 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6540 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6537 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6534 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6531 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6528 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6525 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6522 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6519 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6516 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6513 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6510 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6507 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6504 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6501 ($and) with simplemap.
Mapping cpu.$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:212$6499 ($and) with simplemap.

4.18.40. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 8
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=8\S_WIDTH=3'.

4.18.41. Continuing TECHMAP pass.
Mapping ALU.$procmux$276 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=3.

4.18.42. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 4
Parameter \B_WIDTH = 5
Parameter \Y_WIDTH = 5
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=5\Y_WIDTH=5'.

4.18.43. Continuing TECHMAP pass.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$896 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=5\Y_WIDTH=5.

4.18.44. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 3
Parameter \B_WIDTH = 3
Parameter \Y_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=3'.

4.18.45. Continuing TECHMAP pass.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$878 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=3.
Mapping ALU.$auto$alumacc.cc:78:get_cf$881 ($not) with simplemap.
Mapping ALU.$auto$alumacc.cc:64:get_eq$883 ($reduce_and) with simplemap.
Mapping ALU.$auto$alumacc.cc:502:replace_alu$885 ($reduce_or) with simplemap.

4.18.46. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 4
Parameter \B_WIDTH = 4
Parameter \Y_WIDTH = 5
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=5'.

4.18.47. Continuing TECHMAP pass.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$899 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=5.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$887 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=3.
Mapping ALU.$auto$alumacc.cc:78:get_cf$890 ($not) with simplemap.
Mapping ALU.$auto$alumacc.cc:64:get_eq$892 ($reduce_and) with simplemap.
Mapping ALU.$auto$alumacc.cc:502:replace_alu$894 ($reduce_or) with simplemap.
Mapping ALU.$eq$ALU.v:50$231 ($eq) with simplemap.
Mapping ALU.$or$ALU.v:50$232 ($or) with simplemap.
Mapping ALU.$ternary$ALU.v:50$234 ($mux) with simplemap.
Mapping ALU.$or$ALU.v:57$236 ($or) with simplemap.
Mapping ALU.$and$ALU.v:58$237 ($and) with simplemap.
Mapping ALU.$xor$ALU.v:59$238 ($xor) with simplemap.
Mapping ALU.$not$ALU.v:72$240 ($not) with simplemap.
Mapping ALU.$and$ALU.v:79$242 ($and) with simplemap.
Mapping ALU.$and$ALU.v:82$244 ($and) with simplemap.
Mapping ALU.$or$ALU.v:85$245 ($or) with simplemap.
Mapping ALU.$or$ALU.v:100$252 ($or) with simplemap.
Mapping ALU.$xor$ALU.v:105$253 ($xor) with simplemap.
Mapping ALU.$xor$ALU.v:105$254 ($xor) with simplemap.
Mapping ALU.$xor$ALU.v:105$255 ($xor) with simplemap.
Mapping ALU.$reduce_or$ALU.v:106$256 ($reduce_or) with simplemap.
Mapping ALU.$logic_not$ALU.v:106$257 ($logic_not) with simplemap.
Mapping ALU.$procmux$259 ($mux) with simplemap.
Mapping ALU.$procmux$262 ($mux) with simplemap.
Mapping ALU.$procmux$265 ($mux) with simplemap.
Mapping ALU.$procmux$268 ($mux) with simplemap.
Mapping ALU.$procmux$271 ($mux) with simplemap.
Mapping ALU.$procmux$274 ($mux) with simplemap.
Mapping ALU.$procmux$278_CMP0 ($eq) with simplemap.
Mapping ALU.$procmux$279_CMP0 ($eq) with simplemap.
Mapping ALU.$procmux$282 ($mux) with simplemap.
Mapping ALU.$procmux$285_CMP0 ($eq) with simplemap.
Mapping ALU.$procmux$284 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=3.
Mapping ALU.$procmux$286_CMP0 ($eq) with simplemap.
Mapping ALU.$procmux$287_CMP0 ($eq) with simplemap.
Mapping ALU.$procdff$783 ($dff) with simplemap.
Mapping ALU.$procdff$784 ($dff) with simplemap.
Mapping ALU.$procdff$785 ($dff) with simplemap.
Mapping ALU.$procdff$786 ($dff) with simplemap.
Mapping ALU.$procdff$787 ($dff) with simplemap.
Mapping ALU.$procdff$788 ($dff) with simplemap.
Mapping ALU.$techmap$procmux$276.$reduce_or$<techmap.v>:441$8223 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$276.$reduce_or$<techmap.v>:441$8222 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$276.$reduce_or$<techmap.v>:441$8221 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$276.$reduce_or$<techmap.v>:441$8220 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$276.$reduce_or$<techmap.v>:441$8219 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$276.$reduce_or$<techmap.v>:441$8218 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$276.$reduce_or$<techmap.v>:441$8217 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$276.$reduce_or$<techmap.v>:441$8216 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$276.$and$<techmap.v>:434$8215 ($and) with simplemap.
Mapping ALU.$techmap$procmux$276.$and$<techmap.v>:434$8214 ($and) with simplemap.
Mapping ALU.$techmap$procmux$276.$and$<techmap.v>:434$8213 ($and) with simplemap.
Mapping ALU.$techmap$procmux$276.$ternary$<techmap.v>:445$8212 ($mux) with simplemap.
Mapping ALU.$techmap$procmux$276.$reduce_or$<techmap.v>:445$8211 ($reduce_or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.$xor$<techmap.v>:263$8228 ($xor) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.$xor$<techmap.v>:262$8227 ($xor) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.$and$<techmap.v>:260$8226 ($and) with simplemap.

4.18.48. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 5
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=5'.

4.18.49. Executing PROC pass (convert processes to netlists).

4.18.49.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.49.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.49.3. Executing PROC_INIT pass (extract init attributes).

4.18.49.4. Executing PROC_ARST pass (detect async resets in processes).

4.18.49.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=5.$proc$<techmap.v>:207$8495'.
     1/10: $0\p[4:0] [4]
     2/10: $0\g[4:0] [4]
     3/10: $0\p[4:0] [2]
     4/10: $0\g[4:0] [2]
     5/10: $0\p[4:0] [3]
     6/10: $0\g[4:0] [3]
     7/10: $0\p[4:0] [1]
     8/10: $0\g[4:0] [1]
     9/10: $0\g[4:0] [0]
    10/10: $0\p[4:0] [0]

4.18.49.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=5.\p' from process `$paramod\_90_lcu\WIDTH=5.$proc$<techmap.v>:207$8495'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=5.\g' from process `$paramod\_90_lcu\WIDTH=5.$proc$<techmap.v>:207$8495'.

4.18.49.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.49.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=5.$proc$<techmap.v>:207$8495'.
Cleaned up 0 empty switches.

4.18.50. Executing OPT pass (performing simple optimizations).

4.18.50.1. Executing OPT_EXPR pass (perform const folding).

4.18.50.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=5'.
Removed a total of 0 cells.

4.18.50.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.18.50.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=5..
  removing unused `$and' cell `$and$<techmap.v>:222$8500'.
  removing unused `$and' cell `$and$<techmap.v>:222$8506'.
  removing unused `$and' cell `$and$<techmap.v>:230$8509'.
  removing unused `$and' cell `$and$<techmap.v>:230$8512'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

4.18.50.5. Finished fast OPT passes.

4.18.51. Continuing TECHMAP pass.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$896.lcu using $paramod\_90_lcu\WIDTH=5.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.$ternary$<techmap.v>:258$8225 ($mux) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.$not$<techmap.v>:258$8224 ($not) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$896.B_conv ($pos) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$896.A_conv ($pos) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.$xor$<techmap.v>:263$8233 ($xor) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.$xor$<techmap.v>:262$8232 ($xor) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.$and$<techmap.v>:260$8231 ($and) with simplemap.

4.18.52. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=3'.

4.18.53. Executing PROC pass (convert processes to netlists).

4.18.53.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.53.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.53.3. Executing PROC_INIT pass (extract init attributes).

4.18.53.4. Executing PROC_ARST pass (detect async resets in processes).

4.18.53.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$8539'.
     1/6: $0\p[2:0] [2]
     2/6: $0\g[2:0] [2]
     3/6: $0\p[2:0] [1]
     4/6: $0\g[2:0] [1]
     5/6: $0\g[2:0] [0]
     6/6: $0\p[2:0] [0]

4.18.53.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=3.\p' from process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$8539'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=3.\g' from process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$8539'.

4.18.53.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.53.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$8539'.
Cleaned up 0 empty switches.

4.18.54. Executing OPT pass (performing simple optimizations).

4.18.54.1. Executing OPT_EXPR pass (perform const folding).

4.18.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=3'.
Removed a total of 0 cells.

4.18.54.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.18.54.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=3..
  removing unused `$and' cell `$and$<techmap.v>:230$8547'.
  removing unused `$and' cell `$and$<techmap.v>:222$8544'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

4.18.54.5. Finished fast OPT passes.

4.18.55. Continuing TECHMAP pass.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$878.lcu using $paramod\_90_lcu\WIDTH=3.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.$ternary$<techmap.v>:258$8230 ($mux) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.$not$<techmap.v>:258$8229 ($not) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$878.B_conv ($pos) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$878.A_conv ($pos) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.$xor$<techmap.v>:263$8245 ($xor) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.$xor$<techmap.v>:262$8244 ($xor) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.$and$<techmap.v>:260$8243 ($and) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$899.lcu using $paramod\_90_lcu\WIDTH=5.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.$ternary$<techmap.v>:258$8242 ($mux) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.$not$<techmap.v>:258$8241 ($not) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$899.B_conv ($pos) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$899.A_conv ($pos) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.$xor$<techmap.v>:263$8233 ($xor) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.$xor$<techmap.v>:262$8232 ($xor) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.$and$<techmap.v>:260$8231 ($and) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$887.lcu using $paramod\_90_lcu\WIDTH=3.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.$ternary$<techmap.v>:258$8230 ($mux) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.$not$<techmap.v>:258$8229 ($not) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$887.B_conv ($pos) with simplemap.
Mapping ALU.$auto$alumacc.cc:470:replace_alu$887.A_conv ($pos) with simplemap.
Mapping ALU.$techmap$procmux$284.$reduce_or$<techmap.v>:441$8223 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$284.$reduce_or$<techmap.v>:441$8222 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$284.$reduce_or$<techmap.v>:441$8221 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$284.$reduce_or$<techmap.v>:441$8220 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$284.$reduce_or$<techmap.v>:441$8219 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$284.$reduce_or$<techmap.v>:441$8218 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$284.$reduce_or$<techmap.v>:441$8217 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$284.$reduce_or$<techmap.v>:441$8216 ($reduce_or) with simplemap.
Mapping ALU.$techmap$procmux$284.$and$<techmap.v>:434$8215 ($and) with simplemap.
Mapping ALU.$techmap$procmux$284.$and$<techmap.v>:434$8214 ($and) with simplemap.
Mapping ALU.$techmap$procmux$284.$and$<techmap.v>:434$8213 ($and) with simplemap.
Mapping ALU.$techmap$procmux$284.$ternary$<techmap.v>:445$8212 ($mux) with simplemap.
Mapping ALU.$techmap$procmux$284.$reduce_or$<techmap.v>:445$8211 ($reduce_or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.lcu.$or$<techmap.v>:229$8546 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.lcu.$or$<techmap.v>:221$8543 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.lcu.$or$<techmap.v>:229$8546 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.lcu.$or$<techmap.v>:212$8541 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.lcu.$and$<techmap.v>:229$8545 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.lcu.$and$<techmap.v>:221$8542 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$887.lcu.$and$<techmap.v>:212$8540 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.lcu.$or$<techmap.v>:221$8543 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$or$<techmap.v>:229$8511 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$or$<techmap.v>:229$8508 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$or$<techmap.v>:221$8505 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$or$<techmap.v>:221$8502 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$or$<techmap.v>:221$8499 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$or$<techmap.v>:212$8497 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$and$<techmap.v>:229$8510 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$and$<techmap.v>:229$8507 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$and$<techmap.v>:222$8503 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$and$<techmap.v>:221$8504 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$and$<techmap.v>:221$8501 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$and$<techmap.v>:221$8498 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$and$<techmap.v>:212$8496 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$or$<techmap.v>:229$8511 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$or$<techmap.v>:229$8508 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$or$<techmap.v>:221$8505 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$or$<techmap.v>:221$8502 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$or$<techmap.v>:221$8499 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$or$<techmap.v>:212$8497 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$and$<techmap.v>:229$8510 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$and$<techmap.v>:229$8507 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$and$<techmap.v>:222$8503 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$and$<techmap.v>:221$8504 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$and$<techmap.v>:221$8501 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$and$<techmap.v>:221$8498 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$and$<techmap.v>:212$8496 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.lcu.$or$<techmap.v>:212$8541 ($or) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.lcu.$and$<techmap.v>:229$8545 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.lcu.$and$<techmap.v>:221$8542 ($and) with simplemap.
Mapping ALU.$techmap$auto$alumacc.cc:470:replace_alu$878.lcu.$and$<techmap.v>:212$8540 ($and) with simplemap.
No more expansions possible.

4.19. Executing OPT pass (performing simple optimizations).

4.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8369' (?0) in module `\ALU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$8367 [0] = \op [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8330' (?0) in module `\ALU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$8328 [0] = \op [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8380' (?0) in module `\ALU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$8377 [1] = \op [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8451' (const_and) in module `\ALU' with constant driver `$techmap$procmux$276.$and$<techmap.v>:434$8213_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$8417' (0?) in module `\ALU' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$8416 = $techmap$procmux$276.$and$<techmap.v>:434$8214_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8341' (?0) in module `\ALU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$8338 [1] = \op [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8573' (??0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$ternary$<techmap.v>:258$8242_Y [3] = $techmap$procmux$276.$ternary$<techmap.v>:445$8212_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8450' (const_and) in module `\ALU' with constant driver `$techmap$procmux$276.$and$<techmap.v>:434$8213_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$8421' (0?) in module `\ALU' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$8420 = $techmap$procmux$276.$and$<techmap.v>:434$8214_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8572' (??0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$ternary$<techmap.v>:258$8242_Y [2] = $techmap$procmux$276.$ternary$<techmap.v>:445$8212_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8449' (const_and) in module `\ALU' with constant driver `$techmap$procmux$276.$and$<techmap.v>:434$8213_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$8425' (0?) in module `\ALU' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$8424 = $techmap$procmux$276.$and$<techmap.v>:434$8214_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8571' (??0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$ternary$<techmap.v>:258$8242_Y [1] = $techmap$procmux$276.$ternary$<techmap.v>:445$8212_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8448' (const_and) in module `\ALU' with constant driver `$techmap$procmux$276.$and$<techmap.v>:434$8213_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$8429' (0?) in module `\ALU' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$8428 = $techmap$procmux$276.$and$<techmap.v>:434$8214_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8570' (??0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$ternary$<techmap.v>:258$8242_Y [0] = $techmap$procmux$276.$ternary$<techmap.v>:445$8212_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$8579' (0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$not$<techmap.v>:258$8241_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8574' (010) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$ternary$<techmap.v>:258$8242_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8564' (00) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$xor$<techmap.v>:262$8244_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8558' (0?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$xor$<techmap.v>:263$8245_Y [4] = $auto$alumacc.cc:484:replace_alu$901 [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8592' (??1) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$887.$ternary$<techmap.v>:258$8230_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$887.$not$<techmap.v>:258$8229_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8589' (1?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$887.$and$<techmap.v>:260$8231_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$887.$not$<techmap.v>:258$8229_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8591' (??1) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$887.$ternary$<techmap.v>:258$8230_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$887.$not$<techmap.v>:258$8229_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8588' (const_and) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$887.$and$<techmap.v>:260$8231_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8585' (0?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$887.$xor$<techmap.v>:262$8232_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$887.$not$<techmap.v>:258$8229_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8590' (??1) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$887.$ternary$<techmap.v>:258$8230_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$887.$not$<techmap.v>:258$8229_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8587' (1?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$887.$and$<techmap.v>:260$8231_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$887.$not$<techmap.v>:258$8229_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8670' (?1) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$887.lcu.$and$<techmap.v>:212$8540_Y = $techmap$auto$alumacc.cc:470:replace_alu$887.$xor$<techmap.v>:262$8232_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8665' (0?) in module `\ALU' with constant driver `$auto$alumacc.cc:484:replace_alu$889 [1] = $techmap$auto$alumacc.cc:470:replace_alu$887.lcu.$and$<techmap.v>:221$8542_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8452' (const_and) in module `\ALU' with constant driver `$techmap$procmux$276.$and$<techmap.v>:434$8213_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$8413' (0?) in module `\ALU' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$8412 = $techmap$procmux$276.$and$<techmap.v>:434$8214_Y [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8513' (??0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$896.$ternary$<techmap.v>:258$8225_Y [0] = \temp_logic [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8453' (const_and) in module `\ALU' with constant driver `$techmap$procmux$276.$and$<techmap.v>:434$8213_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$8409' (0?) in module `\ALU' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$8408 = $techmap$procmux$276.$and$<techmap.v>:434$8214_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8514' (??0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$896.$ternary$<techmap.v>:258$8225_Y [1] = \temp_logic [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8454' (const_and) in module `\ALU' with constant driver `$techmap$procmux$276.$and$<techmap.v>:434$8213_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$8405' (0?) in module `\ALU' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$8404 = $techmap$procmux$276.$and$<techmap.v>:434$8214_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8515' (??0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$896.$ternary$<techmap.v>:258$8225_Y [2] = \temp_logic [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8455' (const_and) in module `\ALU' with constant driver `$techmap$procmux$276.$and$<techmap.v>:434$8213_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$8401' (0?) in module `\ALU' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$8400 = $techmap$procmux$276.$and$<techmap.v>:434$8214_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8516' (??0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$896.$ternary$<techmap.v>:258$8225_Y [3] = \temp_logic [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8548' (??1) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$878.$ternary$<techmap.v>:258$8230_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$878.$not$<techmap.v>:258$8229_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8549' (??1) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$878.$ternary$<techmap.v>:258$8230_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$878.$not$<techmap.v>:258$8229_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8583' (0?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$887.$xor$<techmap.v>:263$8233_Y [3] = $auto$alumacc.cc:484:replace_alu$889 [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8550' (??1) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$878.$ternary$<techmap.v>:258$8230_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$878.$not$<techmap.v>:258$8229_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8532' (1?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$878.$and$<techmap.v>:260$8231_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$878.$not$<techmap.v>:258$8229_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8531' (const_and) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$878.$and$<techmap.v>:260$8231_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8530' (1?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$878.$and$<techmap.v>:260$8231_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$878.$not$<techmap.v>:258$8229_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8569' (const_and) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$and$<techmap.v>:260$8243_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8678' (const_and) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.lcu.$and$<techmap.v>:229$8510_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8672' (00) in module `\ALU' with constant driver `$auto$alumacc.cc:484:replace_alu$901 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8559' (00) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$899.$xor$<techmap.v>:263$8245_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8528' (0?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$878.$xor$<techmap.v>:262$8232_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$878.$not$<techmap.v>:258$8229_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8701' (?1) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$878.lcu.$and$<techmap.v>:212$8540_Y = $techmap$auto$alumacc.cc:470:replace_alu$878.$xor$<techmap.v>:262$8232_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8671' (0?) in module `\ALU' with constant driver `$auto$alumacc.cc:484:replace_alu$880 [1] = $techmap$auto$alumacc.cc:470:replace_alu$878.lcu.$and$<techmap.v>:221$8542_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8526' (0?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$878.$xor$<techmap.v>:263$8233_Y [3] = $auto$alumacc.cc:484:replace_alu$880 [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$8517' (??0) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$896.$ternary$<techmap.v>:258$8225_Y [4] = \temp_logic [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8478' (0?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$896.$xor$<techmap.v>:262$8227_Y [4] = \temp_logic [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8483' (const_and) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$896.$and$<techmap.v>:260$8226_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8685' (0?) in module `\ALU' with constant driver `$auto$alumacc.cc:484:replace_alu$898 [4] = $techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$and$<techmap.v>:229$8510_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8473' (0?) in module `\ALU' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$896.$xor$<techmap.v>:263$8228_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$896.lcu.$and$<techmap.v>:229$8510_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4494' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4488 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4495' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4488 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4490' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4488 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4491' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4488 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2837' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2833 [2] = \cond_code [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2850' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2846 [2] = \cond_code [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2848' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2846 [0] = \cond_code [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2863' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2859 [2] = \cond_code [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2862' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2859 [1] = \cond_code [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2810' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2807 [1] = \cond_code [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2822' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2820 [0] = \cond_code [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2823' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2820 [1] = \cond_code [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2796' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2794 [0] = \cond_code [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4557' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4551 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4558' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4551 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4553' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4551 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4554' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4551 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4556' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4551 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2146' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2143 [1] = \write_back'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1939' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1936 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1940' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1936 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1941' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1936 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2026' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2020 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2163' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2157 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2164' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2157 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2160' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2157 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2161' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2157 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2162' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2157 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2582' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2576 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2583' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2576 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2579' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2576 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1645' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1643 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1649' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1643 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1711' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1706 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1710' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1706 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1713' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1706 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1712' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1706 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1863' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1856 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1858' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1856 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4885' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4879 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4886' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4879 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4881' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4879 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4882' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4879 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4883' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4879 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4464' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4458 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4460' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4458 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4461' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4458 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4664' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4658 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4660' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4658 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4661' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4658 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4662' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4658 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2522' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2516 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2523' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2516 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2520' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2516 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2543' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2536 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2682' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2676 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2679' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2676 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2681' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2676 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2052' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2045 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2047' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2045 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2049' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2045 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3116' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3110 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3112' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3110 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3114' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3110 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4398' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4392 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4394' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4392 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4396' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4392 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4397' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4392 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4444' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4437 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4439' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4437 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4440' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4437 [1] = \state [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7677' (1?) in module `\cpu' with constant driver `$techmap$procmux$694.$and$<techmap.v>:434$3973_Y [0] = $procmux$695_CTRL'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1963' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1957 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1964' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1957 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1959' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1957 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2703' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2696 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2700' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2696 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2701' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2696 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4420' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4414 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4421' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4414 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4416' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4414 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4418' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4414 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4419' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4414 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5057' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5055 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5058' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5055 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5059' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5055 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5060' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5055 [3] = \state [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7678' (const_and) in module `\cpu' with constant driver `$techmap$procmux$694.$and$<techmap.v>:434$3973_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7670' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7669 = $techmap$procmux$694.$and$<techmap.v>:434$3974_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7674' (1?) in module `\cpu' with constant driver `$techmap$procmux$694.$and$<techmap.v>:434$3975_Y [1] = $procmux$697_CTRL'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1765' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1762 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1769' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1762 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2602' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2596 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2599' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2596 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2094' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2087 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2090' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2087 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2091' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2087 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2092' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2087 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2743' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2736 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2739' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2736 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2741' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2736 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4536' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4530 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4532' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4530 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4533' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4530 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4535' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4530 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2642' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2636 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2640' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2636 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2641' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2636 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1670' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1663 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1669' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1663 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2663' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2656 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2661' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2656 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2562' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2556 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2563' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2556 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2561' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2556 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2722' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2716 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2721' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2716 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2502' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2496 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2500' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2496 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2623' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2616 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2620' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2616 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5534' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5528 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5535' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5528 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5531' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5528 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5533' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5528 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2238' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2232 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2235' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2232 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2236' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2232 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5512' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5505 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5508' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5505 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5509' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5505 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2258' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2252 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2259' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2252 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2255' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2252 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2256' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2252 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2115' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2109 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2112' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2109 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2113' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2109 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2114' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2109 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1889' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1883 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1885' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1883 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1888' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1883 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1688' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1683 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1685' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1683 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1690' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1683 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1990' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1984 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1991' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1984 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1986' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1984 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1989' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1984 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3214' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3208 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3215' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3208 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3210' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3208 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3212' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3208 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4375' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4368 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4370' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4368 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4372' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4368 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4373' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4368 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4515' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4508 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4510' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4508 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4511' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4508 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4513' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4508 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4578' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4571 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4573' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4571 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4574' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4571 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4575' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4571 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5197' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5190 [5] = \state [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5192' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5190 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5193' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5190 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5194' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5190 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5195' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5190 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5238' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5232 [4] = \state [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5234' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5232 [0] = \state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5235' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5232 [1] = \state [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5236' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5232 [2] = \state [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5237' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5232 [3] = \state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5563' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5561 [0] = \CO'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5577' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5574 [1] = \adc_bcd'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6135' (const_and) in module `\cpu' with constant driver `$techmap$procmux$707.$and$<techmap.v>:434$2134_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6138' (const_and) in module `\cpu' with constant driver `$techmap$procmux$707.$and$<techmap.v>:434$2133_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6130' (00) in module `\cpu' with constant driver `$techmap$procmux$707.$reduce_or$<techmap.v>:441$2137_Y = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6183' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.$ternary$<techmap.v>:258$2139_Y [3] = \ADD [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6134' (const_and) in module `\cpu' with constant driver `$techmap$procmux$707.$and$<techmap.v>:434$2134_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6137' (1?) in module `\cpu' with constant driver `$techmap$procmux$707.$and$<techmap.v>:434$2133_Y [1] = $procmux$708_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6128' (?0) in module `\cpu' with constant driver `$techmap$procmux$707.$reduce_or$<techmap.v>:441$2136_Y = $procmux$708_CMP'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6182' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.$ternary$<techmap.v>:258$2139_Y [2] = \ADD [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6181' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.$ternary$<techmap.v>:258$2139_Y [1] = \ADD [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6133' (const_and) in module `\cpu' with constant driver `$techmap$procmux$707.$and$<techmap.v>:434$2134_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6136' (1?) in module `\cpu' with constant driver `$techmap$procmux$707.$and$<techmap.v>:434$2133_Y [0] = $procmux$708_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6132' (?0) in module `\cpu' with constant driver `$techmap$procmux$707.$reduce_or$<techmap.v>:441$2135_Y = $procmux$708_CMP'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6180' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.$ternary$<techmap.v>:258$2139_Y [0] = \ADD [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6153' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.$and$<techmap.v>:260$2140_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6144' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.$xor$<techmap.v>:262$2141_Y [0] = \ADD [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8184' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$and$<techmap.v>:212$6166_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8178' (00) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$904 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8183' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.lcu.$and$<techmap.v>:221$6168_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8177' (?0) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$904 [1] = $techmap$auto$alumacc.cc:470:replace_alu$902.$and$<techmap.v>:260$2140_Y [1]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1789' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1788' in module `cpu'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1918' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1915 [1] = $or$cpu.v:903$135_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2080' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2077 [1] = $or$cpu.v:903$134_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6149' (?0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.$xor$<techmap.v>:263$2142_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$902.$xor$<techmap.v>:262$2141_Y [1]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1787' in module `cpu'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1907' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1904 [1] = $auto$fsm_map.cc:102:implement_pattern_cache$1363'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4738' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4732 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4735' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4732 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4736' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4732 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4821' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4819 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4822' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4819 [1] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4823' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4819 [2] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4824' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4819 [3] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6148' (?0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.$xor$<techmap.v>:263$2142_Y [0] = \ADD [4]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1786' in module `cpu'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6644' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.$ternary$<techmap.v>:258$2139_Y [3] = \ADD [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5609' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5607 [0] = \HC'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5623' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5620 [1] = \adc_bcd'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6622' (const_and) in module `\cpu' with constant driver `$techmap$procmux$713.$and$<techmap.v>:434$2133_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6619' (const_and) in module `\cpu' with constant driver `$techmap$procmux$713.$and$<techmap.v>:434$2134_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6614' (00) in module `\cpu' with constant driver `$techmap$procmux$713.$reduce_or$<techmap.v>:441$2137_Y = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6643' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.$ternary$<techmap.v>:258$2139_Y [2] = \ADD [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6621' (1?) in module `\cpu' with constant driver `$techmap$procmux$713.$and$<techmap.v>:434$2133_Y [1] = $procmux$714_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6618' (const_and) in module `\cpu' with constant driver `$techmap$procmux$713.$and$<techmap.v>:434$2134_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6612' (?0) in module `\cpu' with constant driver `$techmap$procmux$713.$reduce_or$<techmap.v>:441$2136_Y = $procmux$714_CMP'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6642' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.$ternary$<techmap.v>:258$2139_Y [1] = \ADD [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6620' (1?) in module `\cpu' with constant driver `$techmap$procmux$713.$and$<techmap.v>:434$2133_Y [0] = $procmux$714_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6617' (const_and) in module `\cpu' with constant driver `$techmap$procmux$713.$and$<techmap.v>:434$2134_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6616' (?0) in module `\cpu' with constant driver `$techmap$procmux$713.$reduce_or$<techmap.v>:441$2135_Y = $procmux$714_CMP'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6641' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.$ternary$<techmap.v>:258$2139_Y [0] = \ADD [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6637' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.$and$<techmap.v>:260$2140_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6628' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.$xor$<techmap.v>:262$2141_Y [0] = \ADD [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8134' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$and$<techmap.v>:212$6166_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8128' (00) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$910 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8133' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.lcu.$and$<techmap.v>:221$6168_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8127' (?0) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$910 [1] = $techmap$auto$alumacc.cc:470:replace_alu$908.$and$<techmap.v>:260$2140_Y [1]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1785' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1784' in module `cpu'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6636' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.$xor$<techmap.v>:263$2142_Y [4] = $auto$alumacc.cc:484:replace_alu$910 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6633' (?0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.$xor$<techmap.v>:263$2142_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$908.$xor$<techmap.v>:262$2141_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4702' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4696 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4698' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4696 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4720' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4714 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4717' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4714 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4805' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4799 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4801' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4799 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4802' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4799 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4998' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4996 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4999' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4996 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5002' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4996 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5004' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4996 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5005' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4996 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6632' (?0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$908.$xor$<techmap.v>:263$2142_Y [0] = \ADD [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1783' in module `cpu'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1631' (1?) in module `\cpu' with constant driver `$and$cpu.v:436$31_Y [1] = \Z'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6391' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [15] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6390' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [14] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6388' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [12] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6387' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [11] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6386' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [10] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6385' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [9] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6384' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [8] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6383' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [7] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6382' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [6] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6381' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [5] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6376' (const_and) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6306' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6305 [0] = $techmap$procmux$777.$and$<techmap.v>:434$2188_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6594' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [15] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6593' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [14] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6591' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [12] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6590' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [11] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6589' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [10] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6588' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [9] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6587' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [8] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6586' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [7] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6585' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [6] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6584' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [5] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6380' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [4] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6583' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [4] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [4]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1782' in module `cpu'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1838' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1835 [1] = $techmap$procmux$694.$ternary$<techmap.v>:445$3972_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7688' (1?) in module `\cpu' with constant driver `$techmap$procmux$720.$and$<techmap.v>:434$5661_Y = $procmux$721_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1630' (1?) in module `\cpu' with constant driver `$and$cpu.v:436$31_Y [6] = \V'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1746' (???) in module `\cpu' with constant driver `$ternary$cpu.v:436$32_Y [6] = \V'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1629' (1?) in module `\cpu' with constant driver `$and$cpu.v:436$31_Y [7] = \N'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1747' (???) in module `\cpu' with constant driver `$ternary$cpu.v:436$32_Y [7] = \N'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1627' (1?) in module `\cpu' with constant driver `$and$cpu.v:436$31_Y [3] = \D'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1744' (???) in module `\cpu' with constant driver `$ternary$cpu.v:436$32_Y [3] = \D'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1742' (???) in module `\cpu' with constant driver `$ternary$cpu.v:436$32_Y [1] = \Z'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1628' (1?) in module `\cpu' with constant driver `$and$cpu.v:436$31_Y [2] = \I'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1743' (???) in module `\cpu' with constant driver `$ternary$cpu.v:436$32_Y [2] = \I'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1626' (1?) in module `\cpu' with constant driver `$and$cpu.v:436$31_Y [0] = \C'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1741' (???) in module `\cpu' with constant driver `$ternary$cpu.v:436$32_Y [0] = \C'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6463' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6462' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6389' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [13] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6592' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [13] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6461' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6460' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6459' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6458' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6457' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6456' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6455' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6454' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6453' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6452' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6379' (1?) in module `\cpu' with constant driver `$techmap$procmux$777.$and$<techmap.v>:434$2187_Y [3] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6582' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [3] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6451' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6581' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [2] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6450' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6580' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [1] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6449' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6193' (1?) in module `\cpu' with constant driver `$techmap$procmux$762.$and$<techmap.v>:434$2182_Y = $procmux$764_CTRL'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6579' (??0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$ternary$<techmap.v>:258$2209_Y [0] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6430' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [15] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8202' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6522_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8153' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6523_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6428' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [13] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8203' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6519_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8154' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6520_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6429' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [14] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8198' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6534_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8149' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6535_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6426' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [11] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8204' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6516_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8155' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6517_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6424' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [9] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8205' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6513_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8156' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6514_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6425' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [10] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8199' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6531_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8150' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6532_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6427' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [12] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8196' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6540_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8147' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6541_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6422' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [7] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8206' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6510_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8157' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6511_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6420' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [5] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8207' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6507_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8158' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6508_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6421' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [6] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8200' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6528_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8151' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6529_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6418' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [3] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8208' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6504_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8159' (00) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$or$<techmap.v>:221$6505_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6416' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [1] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8210' (const_and) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:212$6499_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8161' (?0) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [0] = $techmap$auto$alumacc.cc:470:replace_alu$905.$and$<techmap.v>:260$2210_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8160' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [1] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6501_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6417' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [2] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8152' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [3] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6525_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6419' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [4] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [4]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8148' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [7] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6537_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6423' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [8] = $techmap$procmux$777.$ternary$<techmap.v>:445$2186_Y [8]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8146' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [15] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6543_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6447' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:263$2212_Y [16] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:221$6543_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8145' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [11] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6546_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8142' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [13] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6555_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8135' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [14] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6576_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8136' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [12] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6573_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8143' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [9] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6552_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8137' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [10] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6570_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8138' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [8] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6567_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8144' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [5] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6549_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8139' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [6] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6564_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8140' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [4] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6561_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8141' (0?) in module `\cpu' with constant driver `$auto$alumacc.cc:484:replace_alu$907 [2] = $techmap$auto$alumacc.cc:470:replace_alu$905.lcu.$and$<techmap.v>:229$6558_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6431' (?0) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:263$2212_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$905.$xor$<techmap.v>:262$2211_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4974' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4972 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4975' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4972 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4976' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4972 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4977' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4972 [3] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4978' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4972 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4979' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4972 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4981' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4972 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4783' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4781 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4784' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4781 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4785' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4781 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4844' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4837 [5] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4839' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4837 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4840' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4837 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4841' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4837 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4601' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4599 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4603' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4599 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4902' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4900 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4903' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4900 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4906' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4900 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4909' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4900 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2274' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2272 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2275' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2272 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2276' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2272 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2278' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2272 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2279' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2272 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2280' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2272 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2281' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2272 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2298' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2296 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2299' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2296 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2300' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2296 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2303' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2296 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2304' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2296 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2305' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2296 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2322' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2320 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2323' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2320 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2324' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2320 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2326' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2320 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2328' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2320 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2329' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2320 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2346' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2344 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2347' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2344 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2348' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2344 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2352' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2344 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2353' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2344 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2370' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2368 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2371' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2368 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2372' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2368 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2375' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2368 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2377' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2368 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2394' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2392 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2395' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2392 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2396' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2392 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2401' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2392 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2418' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2416 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2419' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2416 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2420' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2416 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2424' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2416 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2442' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2440 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2443' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2440 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2444' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2440 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2447' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2440 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2466' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2464 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2467' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2464 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2468' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2464 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2887' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2885 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2888' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2885 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2890' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2885 [3] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2892' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2885 [5] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2893' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2885 [6] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2919' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2916 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2920' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2916 [2] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2922' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2916 [4] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2937' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2934 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2938' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2934 [2] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2939' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2934 [3] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2964' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2962 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2965' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2962 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2966' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2962 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2968' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2962 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2969' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2962 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2970' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2962 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2988' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2986 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2990' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2986 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2992' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2986 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2993' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2986 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3012' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3010 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3015' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3010 [3] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3033' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3030 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3047' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3045 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3048' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3045 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3049' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3045 [2] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3050' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3045 [3] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3067' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3065 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3068' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3065 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3071' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3065 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3097' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3095 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3100' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3095 [3] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3132' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3130 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3134' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3130 [2] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3135' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3130 [3] = \IR [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6715' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2954_Y [0] = $procmux$347_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6707' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2956_Y [0] = $procmux$339_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6711' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2955_Y [0] = $procmux$348_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6703' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2957_Y [0] = $procmux$350_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6716' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2954_Y [1] = $procmux$347_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6708' (const_and) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6712' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2955_Y [1] = $procmux$348_CMP'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6691' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6689 [1] = $procmux$348_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6704' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2957_Y [1] = $procmux$350_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6717' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2954_Y [2] = $procmux$347_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6721' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2953_Y [2] = $procmux$346_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6709' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2956_Y [2] = $procmux$339_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6713' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2955_Y [2] = $procmux$348_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6705' (const_and) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2957_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6681' (?0) in module `\cpu' with constant driver `$techmap$procmux$345.$reduce_or$<techmap.v>:441$2960_Y = $auto$simplemap.cc:127:simplemap_reduce$6678'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6718' (const_and) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2954_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6722' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2953_Y [3] = $procmux$346_CTRL'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6683' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6682 [0] = $procmux$346_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6710' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2956_Y [3] = $procmux$339_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6714' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2955_Y [3] = $procmux$348_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6706' (1?) in module `\cpu' with constant driver `$techmap$procmux$345.$and$<techmap.v>:434$2957_Y [3] = $procmux$350_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3151' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3149 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3153' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3149 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3156' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3149 [5] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3171' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3169 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3175' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3169 [4] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3287' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3284 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3288' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3284 [2] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3426' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3424 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3429' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3424 [3] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3441' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3439 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3443' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3439 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3445' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3439 [4] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3571' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3568 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3574' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3568 [4] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3650' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3647 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3667' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3665 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3687' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3685 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3688' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3685 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3689' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3685 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3691' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3685 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3721' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3718 [1] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3735' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3733 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3756' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3754 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3758' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3754 [2] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3759' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3754 [3] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3775' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3772 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3776' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3772 [2] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3777' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3772 [3] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4754' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4750 [2] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4753' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4750 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3815' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3812 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3816' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3812 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3817' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3812 [3] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3832' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3830 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3836' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3830 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3853' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3850 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3854' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3850 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3882' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3880 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3883' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3880 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3885' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3880 [3] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3886' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3880 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3902' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3900 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3903' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3900 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3904' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3900 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3907' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3900 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3908' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3900 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3926' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3924 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3927' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3924 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3928' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3924 [2] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3929' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3924 [3] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3946' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3944 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3947' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3944 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3948' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3944 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3950' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3944 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3951' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3944 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3980' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3978 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3983' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3978 [3] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3984' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3978 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4000' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3998 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4003' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3998 [3] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4004' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3998 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4020' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4018 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4021' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4018 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4022' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4018 [2] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4045' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4043 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4047' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4043 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4051' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4043 [6] = \IR [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7422' (const_and) in module `\cpu' with constant driver `$techmap$procmux$421.$and$<techmap.v>:434$3974_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7424' (1?) in module `\cpu' with constant driver `$techmap$procmux$421.$and$<techmap.v>:434$3973_Y [0] = $procmux$422_CTRL'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7413' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7412 = $procmux$422_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7420' (1?) in module `\cpu' with constant driver `$techmap$procmux$421.$and$<techmap.v>:434$3975_Y [0] = $procmux$424_CMP'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7423' (1?) in module `\cpu' with constant driver `$techmap$procmux$421.$and$<techmap.v>:434$3974_Y [1] = $procmux$423_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7425' (1?) in module `\cpu' with constant driver `$techmap$procmux$421.$and$<techmap.v>:434$3973_Y [1] = $procmux$422_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7421' (const_and) in module `\cpu' with constant driver `$techmap$procmux$421.$and$<techmap.v>:434$3975_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7419' (?0) in module `\cpu' with constant driver `$techmap$procmux$421.$reduce_or$<techmap.v>:441$3977_Y = $auto$simplemap.cc:127:simplemap_reduce$7416'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4072' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4070 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4073' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4070 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4076' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4070 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4092' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4090 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4093' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4090 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4094' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4090 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4095' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4090 [3] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4097' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4090 [5] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4118' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4116 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4119' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4116 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4120' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4116 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4122' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4116 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4123' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4116 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4124' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4116 [6] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4140' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4138 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4142' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4138 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4145' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4138 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4146' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4138 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4166' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4164 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4167' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4164 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4168' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4164 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4170' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4164 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4680' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4678 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4681' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4678 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4682' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4678 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4683' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4678 [3] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4192' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4190 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4195' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4190 [3] = \IR [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7442' (1?) in module `\cpu' with constant driver `$techmap$procmux$429.$and$<techmap.v>:434$3974_Y [0] = $procmux$431_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7444' (1?) in module `\cpu' with constant driver `$techmap$procmux$429.$and$<techmap.v>:434$3973_Y [0] = $procmux$430_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7440' (const_and) in module `\cpu' with constant driver `$techmap$procmux$429.$and$<techmap.v>:434$3975_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7435' (?0) in module `\cpu' with constant driver `$techmap$procmux$429.$reduce_or$<techmap.v>:441$3976_Y = $auto$simplemap.cc:127:simplemap_reduce$7432'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7443' (const_and) in module `\cpu' with constant driver `$techmap$procmux$429.$and$<techmap.v>:434$3974_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7445' (1?) in module `\cpu' with constant driver `$techmap$procmux$429.$and$<techmap.v>:434$3973_Y [1] = $procmux$430_CTRL'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7437' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7436 = $procmux$430_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7441' (1?) in module `\cpu' with constant driver `$techmap$procmux$429.$and$<techmap.v>:434$3975_Y [1] = $procmux$432_CTRL'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4216' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4214 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4218' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4214 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4220' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4214 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4221' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4214 [5] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4237' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4234 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4238' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4234 [2] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4249' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4247 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4250' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4247 [1] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4252' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4247 [3] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4253' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4247 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4269' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4267 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4270' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4267 [1] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4272' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4267 [3] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4288' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4286 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4292' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4286 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4309' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4306 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4323' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4321 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4324' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4321 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4325' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4321 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4327' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4321 [4] = \IR [4]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4356' in module `cpu'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4648' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4645 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4630' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4627 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4631' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4627 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4766' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4763 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4767' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4763 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4768' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4763 [3] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4769' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4763 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4859' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4857 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4860' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4857 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4861' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4857 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4863' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4857 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4865' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4857 [6] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4926' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4924 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4927' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4924 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4928' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4924 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4929' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4924 [3] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4930' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4924 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4933' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4924 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4950' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4948 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4951' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4948 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4954' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4948 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4955' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4948 [5] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4957' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$4948 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5022' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5020 [0] = \IR [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5023' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5020 [1] = \IR [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5024' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5020 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5025' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5020 [3] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5026' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5020 [4] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5028' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5020 [6] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5029' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5020 [7] = \IR [7]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5084' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5131' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5133' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5140' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5142' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5154' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5158' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5159' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5168' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5169' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5170' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5176' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5177' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5179' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5188' in module `cpu'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5637' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5634 [1] = $auto$fsm_map.cc:102:implement_pattern_cache$1130'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5638' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5634 [2] = $auto$fsm_map.cc:102:implement_pattern_cache$1377'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5639' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5634 [3] = $auto$fsm_map.cc:102:implement_pattern_cache$1363'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5489' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5486 [1] = $techmap$procmux$295.$ternary$<techmap.v>:445$2785_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5670' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [1] = $auto$opt_reduce.cc:132:opt_mux$846'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5671' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [2] = $auto$opt_reduce.cc:132:opt_mux$844'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5672' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [3] = $procmux$416_CMP [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5673' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [4] = $procmux$431_CMP [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5674' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [5] = $procmux$504_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5675' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [6] = $procmux$506_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5676' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [7] = $procmux$510_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5677' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [8] = $procmux$511_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5678' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [9] = $procmux$516_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5679' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [10] = $procmux$518_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5680' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [11] = $procmux$519_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5681' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [12] = $procmux$520_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5682' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [13] = $procmux$521_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5683' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [14] = $procmux$523_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5684' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [15] = $procmux$524_CMP'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5685' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [16] = $auto$opt_reduce.cc:132:opt_mux$848'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5686' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5667 [17] = $auto$opt_reduce.cc:132:opt_mux$850'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5759' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5756 [1] = $xor$cpu.v:946$141_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8074' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5811_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7881' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7880 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8042' (1?) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5813_Y [8] = $procmux$745_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8058' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5812_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7882' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7880 [1] = $procmux$745_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8026' (1?) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5814_Y [8] = $procmux$746_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8075' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5811_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7871' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7870 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8043' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5813_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8059' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5812_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7872' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7870 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7876' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7875 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8027' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5814_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7873' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7870 [2] = $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8076' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5811_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7861' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7860 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8044' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5813_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8060' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5812_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7862' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7860 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7866' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7865 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8028' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5814_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7863' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7860 [2] = $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8077' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5811_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7851' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7850 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8045' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5813_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8061' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5812_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7852' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7850 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7856' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7855 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8029' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5814_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7853' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7850 [2] = $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8078' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5811_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7841' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7840 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8046' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5813_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8062' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5812_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7842' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7840 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7846' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7845 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8030' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5814_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7843' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7840 [2] = $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8079' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5811_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7831' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7830 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8047' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5813_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8063' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5812_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7832' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7830 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7836' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7835 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8031' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5814_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7833' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7830 [2] = $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8080' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5811_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7811' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7810 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8048' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5813_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8064' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5812_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7812' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7810 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7816' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7815 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8032' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5814_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7813' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7810 [2] = $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8081' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5811_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7821' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7820 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8049' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5813_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8065' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5812_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7822' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7820 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7826' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7825 [0] = $techmap$procmux$741.$and$<techmap.v>:434$5810_Y [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8033' (const_and) in module `\cpu' with constant driver `$techmap$procmux$741.$and$<techmap.v>:434$5814_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7823' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7820 [2] = $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5837' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5834 [1] = $auto$fsm_map.cc:102:implement_pattern_cache$1377'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5838' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5834 [2] = $auto$fsm_map.cc:102:implement_pattern_cache$1363'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6152' (0?) in module `\cpu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$902.$xor$<techmap.v>:263$2142_Y [4] = $auto$alumacc.cc:484:replace_alu$904 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7344' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3590_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7350' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3589_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6735' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7332' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3592_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7338' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3591_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7320' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3594_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7326' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3593_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6737' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [2] = $auto$fsm_map.cc:238:map_fsm$1021 [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7308' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3596_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7314' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3595_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6738' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7296' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3598_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7302' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3597_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [9]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6739' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [4] = $auto$fsm_map.cc:238:map_fsm$1021 [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7284' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3600_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7290' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3599_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6740' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [5] = $auto$fsm_map.cc:238:map_fsm$1021 [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7272' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3602_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7278' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3601_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6741' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7260' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3604_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7266' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3603_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [15]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6742' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [7] = $auto$fsm_map.cc:238:map_fsm$1021 [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7248' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3606_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [18]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7254' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3605_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6743' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [8] = $auto$fsm_map.cc:238:map_fsm$1021 [18]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7236' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3608_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7242' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3607_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6744' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7224' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3610_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7230' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3609_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [21]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6745' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [10] = $auto$fsm_map.cc:238:map_fsm$1021 [21]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7212' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3612_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [24]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7218' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3611_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6746' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [11] = $auto$fsm_map.cc:238:map_fsm$1021 [24]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7200' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3614_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7206' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3613_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6747' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7188' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3616_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [28]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7194' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3615_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [27]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7176' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3618_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7182' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3617_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6749' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7164' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3620_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7170' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3619_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [31]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6750' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [15] = $auto$fsm_map.cc:238:map_fsm$1021 [31]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7152' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3622_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [34]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7158' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3621_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6751' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [16] = $auto$fsm_map.cc:238:map_fsm$1021 [34]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7140' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3624_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7146' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3623_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6752' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7128' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3626_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7134' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3625_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [37]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6753' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [18] = $auto$fsm_map.cc:238:map_fsm$1021 [37]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7116' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3628_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [40]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7122' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3627_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6754' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [19] = $auto$fsm_map.cc:238:map_fsm$1021 [40]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7104' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3630_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7110' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3629_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6755' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7092' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3632_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7098' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3631_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [43]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6756' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [21] = $auto$fsm_map.cc:238:map_fsm$1021 [43]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7080' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3634_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [46]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7086' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3633_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6757' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [22] = $auto$fsm_map.cc:238:map_fsm$1021 [46]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7068' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3636_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7074' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3635_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6758' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6734 [23] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6760' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6759 [0] = $auto$simplemap.cc:127:simplemap_reduce$6734 [1]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6761' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6759 [1] = $auto$fsm_map.cc:238:map_fsm$1021 [6]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6763' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6759 [3] = $auto$fsm_map.cc:238:map_fsm$1021 [15]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6764' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6759 [4] = $auto$fsm_map.cc:238:map_fsm$1021 [18]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6766' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6759 [6] = $auto$simplemap.cc:127:simplemap_reduce$6734 [13]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6767' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6759 [7] = $auto$fsm_map.cc:238:map_fsm$1021 [31]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6768' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6759 [8] = $auto$fsm_map.cc:238:map_fsm$1021 [34]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6770' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6759 [10] = $auto$fsm_map.cc:238:map_fsm$1021 [43]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6771' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6759 [11] = $auto$fsm_map.cc:238:map_fsm$1021 [46]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7062' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3637_Y [4] = $auto$fsm_map.cc:238:map_fsm$1021 [49]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7345' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3590_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7351' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3589_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6789' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [0] = $auto$fsm_map.cc:238:map_fsm$1021 [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7333' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3592_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7339' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3591_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6790' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [1] = $auto$fsm_map.cc:238:map_fsm$1021 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7321' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3594_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7327' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3593_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [5]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6791' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [2] = $auto$fsm_map.cc:238:map_fsm$1021 [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7309' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3596_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7315' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3595_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6792' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [3] = $auto$fsm_map.cc:238:map_fsm$1021 [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7297' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3598_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7303' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3597_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6793' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7285' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3600_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7291' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3599_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [11]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6794' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [5] = $auto$fsm_map.cc:238:map_fsm$1021 [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7273' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3602_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7279' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3601_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6795' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [6] = $auto$fsm_map.cc:238:map_fsm$1021 [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7261' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3604_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7267' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3603_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6796' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7249' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3606_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7255' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3605_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [17]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6797' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [8] = $auto$fsm_map.cc:238:map_fsm$1021 [17]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7237' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3608_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [20]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7243' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3607_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6798' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [9] = $auto$fsm_map.cc:238:map_fsm$1021 [20]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7225' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3610_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7231' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3609_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6799' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7213' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3612_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7219' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3611_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [23]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6800' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [11] = $auto$fsm_map.cc:238:map_fsm$1021 [23]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7201' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3614_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [26]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7207' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3613_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6801' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [12] = $auto$fsm_map.cc:238:map_fsm$1021 [26]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7189' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3616_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [28]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7195' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3615_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6802' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [13] = $auto$fsm_map.cc:238:map_fsm$1021 [28]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7177' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3618_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7183' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3617_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6803' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [14] = $auto$fsm_map.cc:238:map_fsm$1021 [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7165' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3620_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7171' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3619_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6804' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7153' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3622_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7159' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3621_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [33]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6805' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [16] = $auto$fsm_map.cc:238:map_fsm$1021 [33]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7141' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3624_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [36]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7147' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3623_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6806' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [17] = $auto$fsm_map.cc:238:map_fsm$1021 [36]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7129' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3626_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7135' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3625_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6807' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7117' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3628_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7123' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3627_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [39]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6808' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [19] = $auto$fsm_map.cc:238:map_fsm$1021 [39]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7105' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3630_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [42]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7111' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3629_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6809' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [20] = $auto$fsm_map.cc:238:map_fsm$1021 [42]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7093' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3632_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7099' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3631_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6810' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7081' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3634_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7087' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3633_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [45]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6811' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [22] = $auto$fsm_map.cc:238:map_fsm$1021 [45]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7069' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3636_Y [5] = $auto$fsm_map.cc:238:map_fsm$1021 [48]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7075' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3635_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6812' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6788 [23] = $auto$fsm_map.cc:238:map_fsm$1021 [48]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6816' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6813 [2] = $auto$fsm_map.cc:238:map_fsm$1021 [11]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6817' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6813 [3] = $auto$fsm_map.cc:238:map_fsm$1021 [14]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6819' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6813 [5] = $auto$fsm_map.cc:238:map_fsm$1021 [23]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6821' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6813 [7] = $auto$fsm_map.cc:238:map_fsm$1021 [30]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6823' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6813 [9] = $auto$fsm_map.cc:238:map_fsm$1021 [39]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6824' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6813 [10] = $auto$fsm_map.cc:238:map_fsm$1021 [42]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7063' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3637_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6839' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6837 [1] = $auto$simplemap.cc:127:simplemap_reduce$6833 [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7343' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3590_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7349' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3589_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6843' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7331' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3592_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7337' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3591_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6844' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7319' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3594_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7325' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3593_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7307' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3596_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7313' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3595_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6846' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7295' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3598_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7301' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3597_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6847' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [4] = $auto$fsm_map.cc:238:map_fsm$1021 [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7283' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3600_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7289' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3599_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7271' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3602_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7277' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3601_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6849' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7259' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3604_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7265' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3603_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6850' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [7] = $auto$fsm_map.cc:238:map_fsm$1021 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7247' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3606_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [18]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7253' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3605_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [17]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7235' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3608_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7241' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3607_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6852' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7223' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3610_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [22]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7229' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3609_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6853' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [10] = $auto$fsm_map.cc:238:map_fsm$1021 [22]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7211' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3612_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [24]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7217' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3611_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [23]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7199' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3614_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7205' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3613_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6855' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7187' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3616_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7193' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3615_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6856' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7175' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3618_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7181' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3617_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [29]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7163' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3620_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7169' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3619_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [31]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6858' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [15] = $auto$fsm_map.cc:238:map_fsm$1021 [31]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7151' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3622_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7157' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3621_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6859' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7139' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3624_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [36]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7145' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3623_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [35]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7127' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3626_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7133' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3625_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [37]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6861' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [18] = $auto$fsm_map.cc:238:map_fsm$1021 [37]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7115' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3628_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7121' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3627_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6862' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7103' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3630_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [42]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7109' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3629_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [41]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7091' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3632_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7097' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3631_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [43]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6864' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [21] = $auto$fsm_map.cc:238:map_fsm$1021 [43]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7079' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3634_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7085' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3633_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6865' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6842 [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7067' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3636_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [48]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7073' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3635_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [47]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6868' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6867 [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6869' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6867 [1] = $auto$simplemap.cc:127:simplemap_reduce$6842 [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6871' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6867 [3] = $auto$fsm_map.cc:238:map_fsm$1021 [16]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6872' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6867 [4] = $auto$simplemap.cc:127:simplemap_reduce$6842 [8]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6874' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6867 [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6876' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6867 [8] = $auto$simplemap.cc:127:simplemap_reduce$6842 [17]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6877' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6867 [9] = $auto$fsm_map.cc:238:map_fsm$1021 [37]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6879' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6867 [11] = $auto$simplemap.cc:127:simplemap_reduce$6842 [23]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6881' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6880 [0] = $auto$simplemap.cc:127:simplemap_reduce$6842 [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6884' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6880 [3] = $auto$simplemap.cc:127:simplemap_reduce$6867 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7061' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3637_Y [3] = $auto$fsm_map.cc:238:map_fsm$1021 [49]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7342' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3590_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7348' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3589_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6897' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7330' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3592_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7336' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3591_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6898' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7318' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3594_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7324' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3593_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6899' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7306' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3596_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7312' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3595_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7294' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3598_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7300' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3597_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7282' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3600_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7288' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3599_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7270' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3602_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7276' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3601_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6903' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7258' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3604_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7264' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3603_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6904' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7246' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3606_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7252' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3605_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6905' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7234' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3608_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [20]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7240' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3607_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [19]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7222' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3610_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [22]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7228' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3609_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [21]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7210' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3612_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [24]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7216' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3611_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [23]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7198' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3614_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7204' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3613_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6909' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7186' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3616_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7192' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3615_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6910' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7174' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3618_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7180' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3617_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6911' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7162' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3620_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [32]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7168' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3619_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6912' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [15] = $auto$fsm_map.cc:238:map_fsm$1021 [32]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7150' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3622_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [34]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7156' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3621_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [33]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7138' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3624_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [36]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7144' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3623_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [35]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7126' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3626_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7132' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3625_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [37]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6915' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [18] = $auto$fsm_map.cc:238:map_fsm$1021 [37]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7114' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3628_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7120' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3627_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6916' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7102' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3630_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7108' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3629_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6917' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7090' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3632_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [44]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7096' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3631_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6918' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6896 [21] = $auto$fsm_map.cc:238:map_fsm$1021 [44]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7078' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3634_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [46]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7084' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3633_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [45]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7066' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3636_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [48]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7072' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3635_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [47]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6922' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6921 [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6923' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6921 [1] = $auto$simplemap.cc:127:simplemap_reduce$6896 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6925' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6921 [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6926' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6921 [4] = $auto$simplemap.cc:127:simplemap_reduce$6896 [9]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6928' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6921 [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6929' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6921 [7] = $auto$fsm_map.cc:238:map_fsm$1021 [32]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6931' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6921 [9] = $auto$fsm_map.cc:238:map_fsm$1021 [37]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6932' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6921 [10] = $auto$fsm_map.cc:238:map_fsm$1021 [44]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6935' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6934 [0] = $auto$simplemap.cc:127:simplemap_reduce$6896 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6936' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6934 [1] = $auto$simplemap.cc:127:simplemap_reduce$6921 [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6938' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6934 [3] = $auto$fsm_map.cc:238:map_fsm$1021 [32]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7060' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3637_Y [2] = $auto$fsm_map.cc:238:map_fsm$1021 [49]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7341' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3590_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7347' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3589_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6951' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7329' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3592_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7335' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3591_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6952' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7317' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3594_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7323' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3593_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6953' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7305' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3596_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7311' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3595_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6954' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7293' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3598_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7299' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3597_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6955' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7281' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3600_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7287' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3599_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6956' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7269' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3602_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7275' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3601_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7257' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3604_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7263' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3603_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7245' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3606_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [18]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7251' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3605_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [17]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7233' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3608_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [20]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7239' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3607_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [19]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7221' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3610_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [22]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7227' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3609_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [21]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7209' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3612_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [24]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7215' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3611_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [23]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7197' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3614_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7203' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3613_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6963' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7185' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3616_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7191' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3615_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6964' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7173' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3618_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7179' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3617_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6965' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7161' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3620_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7167' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3619_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6966' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7149' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3622_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7155' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3621_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6967' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7137' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3624_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7143' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3623_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6968' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7125' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3626_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [38]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7131' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3625_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6969' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6950 [18] = $auto$fsm_map.cc:238:map_fsm$1021 [38]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7113' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3628_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [40]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7119' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3627_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [39]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7101' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3630_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [42]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7107' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3629_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [41]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7089' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3632_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [44]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7095' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3631_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [43]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7077' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3634_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [46]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7083' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3633_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [45]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7065' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3636_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [48]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7071' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3635_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [47]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6976' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6975 [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6977' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6975 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6978' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6975 [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6982' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6975 [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6983' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6975 [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6984' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6975 [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6989' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6988 [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6990' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6988 [1] = $auto$simplemap.cc:127:simplemap_reduce$6975 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6992' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6988 [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6993' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6988 [4] = $auto$simplemap.cc:127:simplemap_reduce$6975 [9]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6996' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6995 [0] = $auto$simplemap.cc:127:simplemap_reduce$6975 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6997' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$6995 [1] = $auto$simplemap.cc:127:simplemap_reduce$6988 [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7059' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3637_Y [1] = $auto$fsm_map.cc:238:map_fsm$1021 [49]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7340' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3590_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7346' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3589_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7005' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7328' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3592_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7334' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3591_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7006' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7316' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3594_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7322' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3593_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7007' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7304' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3596_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7310' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3595_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7008' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7292' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3598_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7298' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3597_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7009' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7280' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3600_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7286' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3599_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7010' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7268' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3602_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7274' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3601_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7011' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7256' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3604_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7262' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3603_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7012' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7244' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3606_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7250' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3605_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7013' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7232' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3608_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7238' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3607_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7014' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7220' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3610_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7226' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3609_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7015' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7208' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3612_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7214' (const_and) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3611_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7016' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7004 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7196' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3614_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [26]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7202' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3613_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [25]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7184' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3616_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [28]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7190' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3615_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [27]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7172' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3618_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7178' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3617_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [29]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7160' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3620_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [32]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7166' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3619_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [31]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7148' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3622_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [34]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7154' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3621_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [33]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7136' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3624_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [36]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7142' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3623_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [35]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7124' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3626_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [38]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7130' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3625_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [37]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7112' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3628_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [40]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7118' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3627_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [39]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7100' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3630_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [42]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7106' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3629_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [41]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7088' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3632_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [44]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7094' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3631_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [43]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7076' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3634_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [46]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7082' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3633_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [45]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7064' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3636_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [48]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7070' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3635_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [47]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7030' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7029 [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7031' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7029 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7032' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7029 [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7033' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7029 [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7034' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7029 [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7035' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7029 [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7043' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7042 [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7044' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7042 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7045' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7042 [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7050' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7049 [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7051' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7049 [1] = $auto$simplemap.cc:127:simplemap_reduce$7042 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7054' (0?) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7053 [0] = $auto$simplemap.cc:127:simplemap_reduce$7042 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7058' (1?) in module `\cpu' with constant driver `$techmap$auto$fsm_map.cc:291:map_fsm$1514.$and$<techmap.v>:434$3637_Y [0] = $auto$fsm_map.cc:238:map_fsm$1021 [49]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7460' (1?) in module `\cpu' with constant driver `$techmap$procmux$661.$and$<techmap.v>:434$5227_Y = $procmux$662_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7489' (const_and) in module `\cpu' with constant driver `$techmap$procmux$668.$and$<techmap.v>:434$5282_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7468' (?0) in module `\cpu' with constant driver `$techmap$procmux$668.$reduce_or$<techmap.v>:441$5289_Y = $techmap$procmux$668.$and$<techmap.v>:434$5281_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7490' (const_and) in module `\cpu' with constant driver `$techmap$procmux$668.$and$<techmap.v>:434$5282_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7470' (?0) in module `\cpu' with constant driver `$techmap$procmux$668.$reduce_or$<techmap.v>:441$5290_Y = $techmap$procmux$668.$and$<techmap.v>:434$5281_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7488' (const_and) in module `\cpu' with constant driver `$techmap$procmux$668.$and$<techmap.v>:434$5282_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7472' (?0) in module `\cpu' with constant driver `$techmap$procmux$668.$reduce_or$<techmap.v>:441$5288_Y = $techmap$procmux$668.$and$<techmap.v>:434$5281_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7487' (const_and) in module `\cpu' with constant driver `$techmap$procmux$668.$and$<techmap.v>:434$5282_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7474' (?0) in module `\cpu' with constant driver `$techmap$procmux$668.$reduce_or$<techmap.v>:441$5287_Y = $techmap$procmux$668.$and$<techmap.v>:434$5281_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7486' (const_and) in module `\cpu' with constant driver `$techmap$procmux$668.$and$<techmap.v>:434$5282_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7476' (?0) in module `\cpu' with constant driver `$techmap$procmux$668.$reduce_or$<techmap.v>:441$5286_Y = $techmap$procmux$668.$and$<techmap.v>:434$5281_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7485' (const_and) in module `\cpu' with constant driver `$techmap$procmux$668.$and$<techmap.v>:434$5282_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7478' (?0) in module `\cpu' with constant driver `$techmap$procmux$668.$reduce_or$<techmap.v>:441$5285_Y = $techmap$procmux$668.$and$<techmap.v>:434$5281_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7484' (const_and) in module `\cpu' with constant driver `$techmap$procmux$668.$and$<techmap.v>:434$5282_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7480' (?0) in module `\cpu' with constant driver `$techmap$procmux$668.$reduce_or$<techmap.v>:441$5284_Y = $techmap$procmux$668.$and$<techmap.v>:434$5281_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7483' (const_and) in module `\cpu' with constant driver `$techmap$procmux$668.$and$<techmap.v>:434$5282_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7482' (?0) in module `\cpu' with constant driver `$techmap$procmux$668.$reduce_or$<techmap.v>:441$5283_Y = $techmap$procmux$668.$and$<techmap.v>:434$5281_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7650' (const_and) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5430_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7654' (1?) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5429_Y [2] = $procmux$688_CTRL'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7621' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7620 [0] = $procmux$688_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7651' (const_and) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5430_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7655' (const_and) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5429_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7626' (00) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7625 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7643' (const_and) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5432_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7627' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7625 [1] = $techmap$procmux$687.$and$<techmap.v>:434$5431_Y [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7629' (0?) in module `\cpu' with constant driver `$techmap$procmux$687.$reduce_or$<techmap.v>:441$5436_Y = $techmap$procmux$687.$and$<techmap.v>:434$5431_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7649' (const_and) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5430_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7653' (1?) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5429_Y [1] = $procmux$688_CTRL'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7631' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7630 [0] = $procmux$688_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7641' (1?) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5432_Y [1] = $auto$fsm_map.cc:194:map_fsm$970 [19]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7652' (1?) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5429_Y [0] = $procmux$688_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7640' (1?) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5432_Y [0] = $auto$fsm_map.cc:194:map_fsm$970 [19]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7692' (1?) in module `\cpu' with constant driver `$techmap$procmux$724.$and$<techmap.v>:434$5662_Y = $procmux$726_CTRL'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7792' (1?) in module `\cpu' with constant driver `$techmap$procmux$728.$and$<techmap.v>:434$5340_Y [5] = $auto$fsm_map.cc:194:map_fsm$970 [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7648' (x?) in module `\cpu' with constant driver `$techmap$procmux$687.$and$<techmap.v>:434$5430_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7636' (?0) in module `\cpu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$7635 [0] = $procmux$688_CTRL'.

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8359' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$8379'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$8357 [0] = $auto$simplemap.cc:250:simplemap_eqne$8377 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8359' from module `\ALU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8360' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$8370'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$8357 [1] = $auto$simplemap.cc:250:simplemap_eqne$8367 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8360' from module `\ALU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8255' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$8340'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$8253 [0] = $auto$simplemap.cc:250:simplemap_eqne$8338 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8255' from module `\ALU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8256' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$8331'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$8253 [1] = $auto$simplemap.cc:250:simplemap_eqne$8328 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$8256' from module `\ALU'.
Finding identical cells in module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6353' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7590'.
    Redirecting output \Y: $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [9] = $techmap$procmux$673.$and$<techmap.v>:434$5341_Y [1]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6353' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5948' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5973'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5947 [0] = $auto$simplemap.cc:127:simplemap_reduce$5972 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5948' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5921' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5976'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5919 [1] = $auto$simplemap.cc:127:simplemap_reduce$5972 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5921' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5908' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5906 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5908' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5859' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5857 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5859' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5836' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5834 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5836' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5793' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5791 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5793' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5758' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5756 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5758' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5737' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5735 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5737' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5724' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5722 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5724' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5669' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5667 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5669' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5636' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5634 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5636' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5611' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5624'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5607 [2] = $auto$simplemap.cc:250:simplemap_eqne$5620 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5611' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5604' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5717'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5602 [1] = $auto$simplemap.cc:127:simplemap_reduce$5714 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5604' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5592' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5610'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5589 [1] = $auto$simplemap.cc:250:simplemap_eqne$5607 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5592' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5591' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5622'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5589 [0] = $auto$simplemap.cc:250:simplemap_eqne$5620 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5591' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5593' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5624'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5589 [2] = $auto$simplemap.cc:250:simplemap_eqne$5620 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5593' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5578' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5624'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5574 [2] = $auto$simplemap.cc:250:simplemap_eqne$5620 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5578' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5564' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5610'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5561 [1] = $auto$simplemap.cc:250:simplemap_eqne$5607 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5564' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5565' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5624'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5561 [2] = $auto$simplemap.cc:250:simplemap_eqne$5620 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5565' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5551' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5610'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5548 [1] = $auto$simplemap.cc:250:simplemap_eqne$5607 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5551' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5550' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5576'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5548 [0] = $auto$simplemap.cc:250:simplemap_eqne$5574 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5550' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5552' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5624'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5548 [2] = $auto$simplemap.cc:250:simplemap_eqne$5620 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5552' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5507' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5505 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5507' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5488' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5486 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5488' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5478' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5476 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5478' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5467' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5654'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5462 [4] = $auto$simplemap.cc:127:simplemap_reduce$5651 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5467' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5463' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5652'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5462 [0] = $auto$simplemap.cc:127:simplemap_reduce$5651 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5463' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5454' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5452 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5454' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5420' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5746'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5419 [0] = $auto$simplemap.cc:127:simplemap_reduce$5745 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5420' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5405' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5874'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5402 [2] = $auto$simplemap.cc:127:simplemap_reduce$5871 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5405' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5404' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5873'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5402 [1] = $auto$simplemap.cc:127:simplemap_reduce$5871 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5404' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5393' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5391 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5393' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5376' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5886'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5372 [3] = $auto$simplemap.cc:127:simplemap_reduce$5884 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5376' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5356' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5354 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5356' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7596' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$8017'.
    Redirecting output \Y: $techmap$procmux$673.$and$<techmap.v>:434$5341_Y [7] = $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [15]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7596' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5318' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5378'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5309 [8] = $auto$simplemap.cc:127:simplemap_reduce$5372 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5318' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5317' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5466'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5309 [7] = $auto$simplemap.cc:127:simplemap_reduce$5462 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5317' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5311' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5873'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5309 [1] = $auto$simplemap.cc:127:simplemap_reduce$5871 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5311' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5310' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5309 [0] = $auto$simplemap.cc:127:simplemap_reduce$5402 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5310' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5293' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5291 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5293' from module `\cpu'.
  Cell `$auto$simplemap.cc:177:logic_reduce$5255' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$5252 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$5255' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5244' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5242 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5244' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5243' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5242 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5243' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5217' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5314'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5214 [2] = $auto$simplemap.cc:127:simplemap_reduce$5309 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5217' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5215' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5214 [0] = $auto$simplemap.cc:127:simplemap_reduce$5402 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5215' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5202' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5200 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5202' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5201' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5200 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5201' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5196' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5190 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5196' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5145' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5143 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5145' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5067' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5065 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5067' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5066' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5065 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5066' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5061' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5055 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5061' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6748' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7018'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6734 [13] = $auto$simplemap.cc:127:simplemap_reduce$7004 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6748' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5062' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5055 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5062' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5036' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5048'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5032 [3] = $auto$simplemap.cc:168:logic_reduce$5044 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5036' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5034' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5046'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5032 [1] = $auto$simplemap.cc:168:logic_reduce$5044 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5034' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5033' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5032 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5033' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5012' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5048'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5008 [3] = $auto$simplemap.cc:168:logic_reduce$5044 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5012' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5009' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5008 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5009' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5003' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4996 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5003' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7804' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5748'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7803 [0] = $auto$simplemap.cc:127:simplemap_reduce$5745 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7804' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4987' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4984 [2] = $auto$simplemap.cc:168:logic_reduce$5044 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4987' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4986' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5046'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4984 [1] = $auto$simplemap.cc:168:logic_reduce$5044 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4986' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4985' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4984 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4985' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7589' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6352'.
    Redirecting output \Y: $techmap$procmux$673.$and$<techmap.v>:434$5341_Y [0] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [8]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7589' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4963' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4960 [2] = $auto$simplemap.cc:168:logic_reduce$5044 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4963' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4961' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4960 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4961' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4956' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4948 [6] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4956' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4953' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4948 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4953' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4952' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4948 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4952' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4938' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5046'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4936 [1] = $auto$simplemap.cc:168:logic_reduce$5044 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4938' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4937' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4936 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4937' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4932' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4924 [6] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4932' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4931' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4924 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4931' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4913' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4912 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4913' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4908' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4900 [6] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4908' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4907' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4900 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4907' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4905' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4900 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4905' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4904' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4900 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4904' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4892' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4889 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4892' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4890' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4889 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4890' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4884' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4879 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4884' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4869' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4868 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4869' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4864' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4857 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4864' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4862' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4857 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4862' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4848' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4847 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4848' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4842' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4837 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4842' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4810' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4809 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4810' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4804' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4799 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4804' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4803' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4799 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4803' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4806' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4799 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4806' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4791' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4790 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4791' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4786' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4781 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4786' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4787' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4781 [4] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4787' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4774' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5046'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4772 [1] = $auto$simplemap.cc:168:logic_reduce$5044 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4774' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7028' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6920'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7004 [23] = $auto$simplemap.cc:127:simplemap_reduce$6896 [23]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7028' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7377' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7023'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [18] = $auto$simplemap.cc:127:simplemap_reduce$7004 [18]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7377' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4752' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4750 [0] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4752' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4737' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4732 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4737' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4734' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4732 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4734' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4719' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4714 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4719' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4718' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4714 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4718' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4716' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4714 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4716' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4701' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4696 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4701' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4700' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4696 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4700' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4689' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5046'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4687 [1] = $auto$simplemap.cc:168:logic_reduce$5044 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4689' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4688' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4687 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4688' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6860' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7022'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6842 [17] = $auto$simplemap.cc:127:simplemap_reduce$7004 [17]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6860' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4684' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4678 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4684' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4669' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4668 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4669' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4663' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4658 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4663' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4665' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4658 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4665' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4647' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4645 [0] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4647' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4649' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4645 [2] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4649' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4632' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4627 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4632' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4629' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4627 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4629' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4633' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4627 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4633' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4617' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4614 [1] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4617' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4616' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4614 [0] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4616' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4618' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4614 [2] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4618' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4602' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4599 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4602' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4604' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4599 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4604' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4582' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4581 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4582' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4577' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4571 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4577' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4576' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4571 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4576' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4564' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4561 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4564' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4562' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4561 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4562' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4555' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4551 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4555' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4541' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4540 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4541' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8011' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7590'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [9] = $techmap$procmux$673.$and$<techmap.v>:434$5341_Y [1]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8011' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8008' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6350'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [6] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [6]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8008' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4534' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4530 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4534' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8009' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6351'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [7] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [7]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8009' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8010' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6352'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [8] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [8]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8010' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4537' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4530 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4537' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4519' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4518 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4519' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4514' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4508 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4514' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4512' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4508 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4512' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4501' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4498 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4501' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4499' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4498 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4499' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4493' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4488 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4493' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4492' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4488 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4492' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4480' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4478 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4480' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4469' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4468 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4469' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4463' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4458 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4463' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4462' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4458 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4462' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4465' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4458 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4465' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4448' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5253'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4447 [0] = $auto$simplemap.cc:168:logic_reduce$5252 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4448' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4443' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4437 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4443' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4442' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4437 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4442' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4441' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4437 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4441' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4427' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4424 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4427' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4426' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4424 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4426' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4404' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4402 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4404' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4395' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4392 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4395' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4399' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4392 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4399' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4380' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4378 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4380' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4374' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4368 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4374' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4371' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4368 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4371' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4360' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4358 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4360' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4331' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4330 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4331' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4326' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4321 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4326' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4310' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4306 [2] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4310' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4308' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4306 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4308' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4311' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4306 [3] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4311' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4291' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4286 [3] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4291' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4290' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4286 [2] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4290' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4289' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4286 [1] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4289' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4293' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4286 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4293' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4271' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4267 [2] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4271' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4273' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4267 [4] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4273' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4258' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4829'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4257 [0] = $auto$simplemap.cc:127:simplemap_reduce$4828 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4258' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4251' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4247 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4251' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4254' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4247 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4254' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4236' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4234 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4236' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4219' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4214 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4219' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4217' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4214 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4217' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4194' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4190 [2] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4194' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4193' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4190 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4193' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4196' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4190 [4] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4196' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4177' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4176 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4177' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4172' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4164 [6] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4172' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4171' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4164 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4171' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4169' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4164 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4169' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7594' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6357'.
    Redirecting output \Y: $techmap$procmux$673.$and$<techmap.v>:434$5341_Y [5] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [13]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7594' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4173' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4164 [7] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4173' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4144' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4138 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4144' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4143' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4138 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4143' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4141' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4138 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4141' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4147' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4138 [7] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4147' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4130' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4127 [2] = $auto$simplemap.cc:168:logic_reduce$5044 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4130' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4128' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4127 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4128' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6863' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7025'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6842 [20] = $auto$simplemap.cc:127:simplemap_reduce$7004 [20]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6863' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4121' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4116 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4121' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7591' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6354'.
    Redirecting output \Y: $techmap$procmux$673.$and$<techmap.v>:434$5341_Y [2] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [10]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7591' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4102' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4101 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4102' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4096' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4090 [4] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4096' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4098' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4090 [6] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4098' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4081' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4080 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4081' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6866' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6920'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6842 [23] = $auto$simplemap.cc:127:simplemap_reduce$6896 [23]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6866' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4075' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4070 [3] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4075' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4074' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4070 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4074' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7595' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6358'.
    Redirecting output \Y: $techmap$procmux$673.$and$<techmap.v>:434$5341_Y [6] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [14]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7595' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4077' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4070 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4077' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4050' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4043 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4050' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4049' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4043 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4049' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4048' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4043 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4048' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4046' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4043 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4046' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4052' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4043 [7] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4052' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4029' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4028 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4029' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4024' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4018 [4] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4024' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4023' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4018 [3] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4023' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6972' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7026'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6950 [21] = $auto$simplemap.cc:127:simplemap_reduce$7004 [21]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6972' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4025' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$4018 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4025' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4002' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3998 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4002' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4001' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3998 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4001' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4005' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3998 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4005' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6908' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6854'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6896 [11] = $auto$simplemap.cc:127:simplemap_reduce$6842 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6908' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3982' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3978 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3982' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3981' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3978 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3981' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3985' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3978 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3985' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7373' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6857'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [14] = $auto$simplemap.cc:127:simplemap_reduce$6842 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7373' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3958' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3955 [2] = $auto$simplemap.cc:168:logic_reduce$5044 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3958' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3956' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3955 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3956' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3949' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3944 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3949' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6914' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7022'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6896 [17] = $auto$simplemap.cc:127:simplemap_reduce$7004 [17]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6914' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3952' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3944 [6] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3952' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3936' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3934 [1] = $auto$simplemap.cc:168:logic_reduce$5044 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3936' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3935' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3934 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3935' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3930' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3924 [4] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3930' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3931' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3924 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3931' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3913' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3912 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3913' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3906' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3900 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3906' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3905' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3900 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3905' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3909' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3900 [7] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3909' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3891' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3890 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3891' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3884' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3880 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3884' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3887' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3880 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3887' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3871' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3869 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3871' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3852' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3850 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3852' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3855' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3850 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3855' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3835' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3830 [3] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3835' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3834' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3830 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3834' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3833' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3830 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3833' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3837' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3830 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3837' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3823' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5046'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3821 [1] = $auto$simplemap.cc:168:logic_reduce$5044 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3823' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3814' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3812 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3814' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3818' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3812 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3818' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3774' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3772 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3774' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3778' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3772 [4] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3778' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3765' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3783'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3763 [1] = $auto$simplemap.cc:127:simplemap_reduce$3781 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3765' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3757' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3754 [1] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3757' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3760' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3754 [4] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3760' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3738' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3733 [3] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3738' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3737' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3733 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3737' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3736' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3733 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3736' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3739' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3733 [4] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3739' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3720' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3718 [0] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3720' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3722' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3718 [2] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3722' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3697' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3696 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3697' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3692' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3685 [5] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3692' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7379' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7025'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [20] = $auto$simplemap.cc:127:simplemap_reduce$7004 [20]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7379' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3690' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3685 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3690' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3693' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3685 [6] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3693' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3671' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3665 [4] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3671' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3670' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3665 [3] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3670' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3669' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3665 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3669' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3668' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3665 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3668' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3672' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3665 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3672' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3651' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3647 [2] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3651' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3649' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3647 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3649' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3652' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3647 [3] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3652' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6973' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7027'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6950 [22] = $auto$simplemap.cc:127:simplemap_reduce$7004 [22]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6973' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6974' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6920'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6950 [23] = $auto$simplemap.cc:127:simplemap_reduce$6896 [23]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6974' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6970' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7024'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6950 [19] = $auto$simplemap.cc:127:simplemap_reduce$7004 [19]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6970' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6971' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7025'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6950 [20] = $auto$simplemap.cc:127:simplemap_reduce$7004 [20]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6971' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6962' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6854'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6950 [11] = $auto$simplemap.cc:127:simplemap_reduce$6842 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6962' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6959' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6851'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6950 [8] = $auto$simplemap.cc:127:simplemap_reduce$6842 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6959' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6684' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6729'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6682 [1] = $auto$simplemap.cc:127:simplemap_reduce$6727 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6684' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6677' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6729'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6675 [1] = $auto$simplemap.cc:127:simplemap_reduce$6727 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6677' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7382' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6920'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [23] = $auto$simplemap.cc:127:simplemap_reduce$6896 [23]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7382' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6698' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6729'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6696 [1] = $auto$simplemap.cc:127:simplemap_reduce$6727 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6698' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7378' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7024'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [19] = $auto$simplemap.cc:127:simplemap_reduce$7004 [19]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7378' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7381' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7027'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [22] = $auto$simplemap.cc:127:simplemap_reduce$7004 [22]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7381' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7380' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7026'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [21] = $auto$simplemap.cc:127:simplemap_reduce$7004 [21]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7380' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6728' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6676'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6727 [0] = $auto$simplemap.cc:127:simplemap_reduce$6675 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6728' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6919' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7027'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6896 [22] = $auto$simplemap.cc:127:simplemap_reduce$7004 [22]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6919' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7592' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6355'.
    Redirecting output \Y: $techmap$procmux$673.$and$<techmap.v>:434$5341_Y [3] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [11]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7592' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6913' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7021'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6896 [16] = $auto$simplemap.cc:127:simplemap_reduce$7004 [16]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6913' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6986' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7040'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6975 [10] = $auto$simplemap.cc:127:simplemap_reduce$7029 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6986' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6906' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6960'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6896 [9] = $auto$simplemap.cc:127:simplemap_reduce$6950 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6906' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6907' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6961'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6896 [10] = $auto$simplemap.cc:127:simplemap_reduce$6950 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6907' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3573' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3568 [3] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3573' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3572' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3568 [2] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3572' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3570' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3568 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3570' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3529' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5465'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3513 [15] = $auto$simplemap.cc:127:simplemap_reduce$5462 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3529' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3525' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5922'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3513 [11] = $auto$simplemap.cc:127:simplemap_reduce$5919 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3525' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3523' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5976'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3513 [9] = $auto$simplemap.cc:127:simplemap_reduce$5972 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3523' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3517' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5873'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3513 [3] = $auto$simplemap.cc:127:simplemap_reduce$5871 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3517' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3483' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3537'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [23] = $auto$simplemap.cc:127:simplemap_reduce$3513 [23]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3483' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3482' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3536'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [22] = $auto$simplemap.cc:127:simplemap_reduce$3513 [22]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3482' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3481' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3535'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [21] = $auto$simplemap.cc:127:simplemap_reduce$3513 [21]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3481' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3480' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3534'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [20] = $auto$simplemap.cc:127:simplemap_reduce$3513 [20]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3480' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3479' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3533'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [19] = $auto$simplemap.cc:127:simplemap_reduce$3513 [19]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3479' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3478' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3532'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [18] = $auto$simplemap.cc:127:simplemap_reduce$3513 [18]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3478' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3476' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5316'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [16] = $auto$simplemap.cc:127:simplemap_reduce$5309 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3476' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3475' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5315'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [15] = $auto$simplemap.cc:127:simplemap_reduce$5309 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3475' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3470' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [10] = $auto$simplemap.cc:127:simplemap_reduce$3513 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3470' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3469' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5976'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [9] = $auto$simplemap.cc:127:simplemap_reduce$5972 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3469' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3468' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3522'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [8] = $auto$simplemap.cc:127:simplemap_reduce$3513 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3468' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3467' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3521'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [7] = $auto$simplemap.cc:127:simplemap_reduce$3513 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3467' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3466' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3520'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [6] = $auto$simplemap.cc:127:simplemap_reduce$3513 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3466' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3465' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3519'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [5] = $auto$simplemap.cc:127:simplemap_reduce$3513 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3465' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3464' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3518'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [4] = $auto$simplemap.cc:127:simplemap_reduce$3513 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3464' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3463' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5873'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [3] = $auto$simplemap.cc:127:simplemap_reduce$5871 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3463' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3462' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3516'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [2] = $auto$simplemap.cc:127:simplemap_reduce$3513 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3462' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3461' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3515'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [1] = $auto$simplemap.cc:127:simplemap_reduce$3513 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3461' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3460' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3514'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3459 [0] = $auto$simplemap.cc:127:simplemap_reduce$3513 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3460' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3444' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3439 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3444' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3442' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3439 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3442' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7360' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6736'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [1] = $auto$simplemap.cc:127:simplemap_reduce$6734 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7360' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3428' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3424 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3428' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3427' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3424 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3427' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7362' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6900'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [3] = $auto$simplemap.cc:127:simplemap_reduce$6896 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7362' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7361' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6845'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [2] = $auto$simplemap.cc:127:simplemap_reduce$6842 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7361' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3393' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3537'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [23] = $auto$simplemap.cc:127:simplemap_reduce$3513 [23]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3393' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3392' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3536'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [22] = $auto$simplemap.cc:127:simplemap_reduce$3513 [22]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3392' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3391' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3535'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [21] = $auto$simplemap.cc:127:simplemap_reduce$3513 [21]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3391' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3390' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3534'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [20] = $auto$simplemap.cc:127:simplemap_reduce$3513 [20]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3390' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3389' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3533'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [19] = $auto$simplemap.cc:127:simplemap_reduce$3513 [19]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3389' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3388' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3532'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [18] = $auto$simplemap.cc:127:simplemap_reduce$3513 [18]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3388' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3387' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3531'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [17] = $auto$simplemap.cc:127:simplemap_reduce$3513 [17]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3387' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3386' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3530'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [16] = $auto$simplemap.cc:127:simplemap_reduce$3513 [16]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3386' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3385' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5465'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [15] = $auto$simplemap.cc:127:simplemap_reduce$5462 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3385' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3384' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3528'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [14] = $auto$simplemap.cc:127:simplemap_reduce$3513 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3384' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3383' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3527'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [13] = $auto$simplemap.cc:127:simplemap_reduce$3513 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3383' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3381' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3471'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [11] = $auto$simplemap.cc:127:simplemap_reduce$3459 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3381' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3380' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [10] = $auto$simplemap.cc:127:simplemap_reduce$3513 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3380' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3379' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5976'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [9] = $auto$simplemap.cc:127:simplemap_reduce$5972 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3379' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3378' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3522'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [8] = $auto$simplemap.cc:127:simplemap_reduce$3513 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3378' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3377' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3521'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [7] = $auto$simplemap.cc:127:simplemap_reduce$3513 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3377' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3376' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3520'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [6] = $auto$simplemap.cc:127:simplemap_reduce$3513 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3376' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3375' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3519'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [5] = $auto$simplemap.cc:127:simplemap_reduce$3513 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3375' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3374' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3518'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [4] = $auto$simplemap.cc:127:simplemap_reduce$3513 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3374' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3373' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5873'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [3] = $auto$simplemap.cc:127:simplemap_reduce$5871 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3373' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3372' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3516'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [2] = $auto$simplemap.cc:127:simplemap_reduce$3513 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3372' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3371' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3515'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [1] = $auto$simplemap.cc:127:simplemap_reduce$3513 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3371' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3370' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3514'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3369 [0] = $auto$simplemap.cc:127:simplemap_reduce$3513 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3370' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3339' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3537'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [23] = $auto$simplemap.cc:127:simplemap_reduce$3513 [23]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3339' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3338' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3536'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [22] = $auto$simplemap.cc:127:simplemap_reduce$3513 [22]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3338' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3337' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3535'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [21] = $auto$simplemap.cc:127:simplemap_reduce$3513 [21]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3337' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3336' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3534'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [20] = $auto$simplemap.cc:127:simplemap_reduce$3513 [20]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3336' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3335' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3533'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [19] = $auto$simplemap.cc:127:simplemap_reduce$3513 [19]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3335' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3334' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3532'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [18] = $auto$simplemap.cc:127:simplemap_reduce$3513 [18]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3334' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3333' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3531'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [17] = $auto$simplemap.cc:127:simplemap_reduce$3513 [17]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3333' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3332' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3530'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [16] = $auto$simplemap.cc:127:simplemap_reduce$3513 [16]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3332' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3331' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5465'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [15] = $auto$simplemap.cc:127:simplemap_reduce$5462 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3331' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3330' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3528'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [14] = $auto$simplemap.cc:127:simplemap_reduce$3513 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3330' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3329' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3527'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [13] = $auto$simplemap.cc:127:simplemap_reduce$3513 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3329' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3328' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3526'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [12] = $auto$simplemap.cc:127:simplemap_reduce$3513 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3328' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3326' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5716'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3315 [10] = $auto$simplemap.cc:127:simplemap_reduce$5714 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3326' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3289' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3284 [3] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3289' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7363' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6901'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [4] = $auto$simplemap.cc:127:simplemap_reduce$6896 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7363' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7364' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6848'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [5] = $auto$simplemap.cc:127:simplemap_reduce$6842 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7364' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3286' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3284 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3286' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3290' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3284 [4] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3290' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3247' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5377'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [18] = $auto$simplemap.cc:127:simplemap_reduce$5372 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3247' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3245' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5316'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [16] = $auto$simplemap.cc:127:simplemap_reduce$5309 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3245' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3244' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5315'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [15] = $auto$simplemap.cc:127:simplemap_reduce$5309 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3244' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3243' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3474'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [14] = $auto$simplemap.cc:127:simplemap_reduce$3459 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3243' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3242' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3473'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [13] = $auto$simplemap.cc:127:simplemap_reduce$3459 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3242' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3241' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3472'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [12] = $auto$simplemap.cc:127:simplemap_reduce$3459 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3241' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3240' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3471'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [11] = $auto$simplemap.cc:127:simplemap_reduce$3459 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3240' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3239' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [10] = $auto$simplemap.cc:127:simplemap_reduce$3513 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3239' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3238' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5976'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [9] = $auto$simplemap.cc:127:simplemap_reduce$5972 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3238' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3237' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3522'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [8] = $auto$simplemap.cc:127:simplemap_reduce$3513 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3237' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3236' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3521'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [7] = $auto$simplemap.cc:127:simplemap_reduce$3513 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3236' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3235' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3520'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [6] = $auto$simplemap.cc:127:simplemap_reduce$3513 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3235' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3234' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3519'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [5] = $auto$simplemap.cc:127:simplemap_reduce$3513 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3234' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3233' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3518'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [4] = $auto$simplemap.cc:127:simplemap_reduce$3513 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3233' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3232' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5873'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [3] = $auto$simplemap.cc:127:simplemap_reduce$5871 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3232' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3231' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3516'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [2] = $auto$simplemap.cc:127:simplemap_reduce$3513 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3231' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3230' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3515'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [1] = $auto$simplemap.cc:127:simplemap_reduce$3513 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3230' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3229' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3514'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3228 [0] = $auto$simplemap.cc:127:simplemap_reduce$3513 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3229' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3221' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3218 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3221' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3213' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3208 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3213' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3211' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3208 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3211' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3200' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3198 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3200' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3174' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3169 [3] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3174' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3173' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3169 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3173' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3172' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3169 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3172' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7366' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6958'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [7] = $auto$simplemap.cc:127:simplemap_reduce$6950 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7366' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7365' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6957'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [6] = $auto$simplemap.cc:127:simplemap_reduce$6950 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7365' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3155' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3149 [4] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3155' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3154' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3149 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3154' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7368' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6960'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [9] = $auto$simplemap.cc:127:simplemap_reduce$6950 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7368' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3152' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3149 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3152' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7369' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6961'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [10] = $auto$simplemap.cc:127:simplemap_reduce$6950 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7369' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7367' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6851'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [8] = $auto$simplemap.cc:127:simplemap_reduce$6842 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7367' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3140' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5048'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3138 [1] = $auto$simplemap.cc:168:logic_reduce$5044 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3140' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7393' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7039'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7383 [9] = $auto$simplemap.cc:127:simplemap_reduce$7029 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7393' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3133' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3130 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3133' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7394' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7040'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7383 [10] = $auto$simplemap.cc:127:simplemap_reduce$7029 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7394' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3115' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3110 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3115' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3113' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3110 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3113' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3117' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3110 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3117' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3099' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3095 [2] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3099' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3098' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3095 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3098' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7395' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7041'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7383 [11] = $auto$simplemap.cc:127:simplemap_reduce$7029 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7395' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3077' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3076 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3077' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3072' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3065 [5] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3072' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3070' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3065 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3070' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3069' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3065 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3069' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3073' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3065 [6] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3073' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3057' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4830'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3055 [1] = $auto$simplemap.cc:127:simplemap_reduce$4828 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3057' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3056' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3055 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3056' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3051' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3045 [4] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3051' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7402' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7048'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7396 [5] = $auto$simplemap.cc:127:simplemap_reduce$7042 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7402' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3052' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3045 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3052' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3034' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3030 [2] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3034' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3032' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3030 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3032' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3035' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3030 [3] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3035' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3016' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3010 [4] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3016' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3014' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3010 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3014' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3013' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3010 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3013' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3017' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$3010 [5] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3017' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3001' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2998 [2] = $auto$simplemap.cc:168:logic_reduce$5044 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3001' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2994' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2986 [6] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2994' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2991' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2986 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2991' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7593' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6356'.
    Redirecting output \Y: $techmap$procmux$673.$and$<techmap.v>:434$5341_Y [4] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [12]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7593' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2989' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4699'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2986 [1] = $auto$simplemap.cc:250:simplemap_eqne$4696 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2989' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6902' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6848'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6896 [5] = $auto$simplemap.cc:127:simplemap_reduce$6842 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6902' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2995' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2986 [7] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2995' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2977' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2974 [2] = $auto$simplemap.cc:168:logic_reduce$5044 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2977' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2975' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2974 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2975' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7429' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7428 = $auto$simplemap.cc:127:simplemap_reduce$7416
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7429' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2967' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2962 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2967' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2971' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2962 [7] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2971' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7374' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7020'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [15] = $auto$simplemap.cc:127:simplemap_reduce$7004 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7374' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7375' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7021'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [16] = $auto$simplemap.cc:127:simplemap_reduce$7004 [16]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7375' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7371' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7017'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [12] = $auto$simplemap.cc:127:simplemap_reduce$7004 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7371' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7372' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7018'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [13] = $auto$simplemap.cc:127:simplemap_reduce$7004 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7372' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7370' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6854'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [11] = $auto$simplemap.cc:127:simplemap_reduce$6842 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7370' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7376' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7022'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7358 [17] = $auto$simplemap.cc:127:simplemap_reduce$7004 [17]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7376' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2944' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5048'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2942 [1] = $auto$simplemap.cc:168:logic_reduce$5044 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2944' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2936' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2934 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2936' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2921' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2916 [3] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2921' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2918' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4765'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2916 [0] = $auto$simplemap.cc:250:simplemap_eqne$4763 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2918' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7449' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7433'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7448 = $auto$simplemap.cc:127:simplemap_reduce$7432
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7449' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2897' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2896 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2897' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2891' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2885 [4] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2891' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2889' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5000'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2885 [2] = $auto$simplemap.cc:250:simplemap_eqne$4996 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2889' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2836' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2849'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2833 [1] = $auto$simplemap.cc:250:simplemap_eqne$2846 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2836' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2835' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2861'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2833 [0] = $auto$simplemap.cc:250:simplemap_eqne$2859 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2835' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2809' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2861'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2807 [0] = $auto$simplemap.cc:250:simplemap_eqne$2859 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2809' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2811' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2824'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2807 [2] = $auto$simplemap.cc:250:simplemap_eqne$2820 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2811' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2797' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2849'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2794 [1] = $auto$simplemap.cc:250:simplemap_eqne$2846 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2797' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2798' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2824'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2794 [2] = $auto$simplemap.cc:250:simplemap_eqne$2820 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2798' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2774' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2849'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2771 [1] = $auto$simplemap.cc:250:simplemap_eqne$2846 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2774' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2773' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2861'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2771 [0] = $auto$simplemap.cc:250:simplemap_eqne$2859 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2773' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2775' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2824'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2771 [2] = $auto$simplemap.cc:250:simplemap_eqne$2820 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2775' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2742' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2736 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2742' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8012' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6354'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [10] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [10]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8012' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2740' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2736 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2740' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8013' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6355'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [11] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [11]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8013' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2738' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2736 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2738' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8014' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6356'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [12] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [12]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8014' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2720' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2716 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2720' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2719' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2716 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2719' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2718' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2716 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2718' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2723' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2716 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2723' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2708' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2706 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2708' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2702' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2696 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2702' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2699' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2696 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2699' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2698' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2696 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2698' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2680' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2676 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2680' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2678' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2676 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2678' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2683' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2676 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2683' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2662' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2656 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2662' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2660' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2656 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2660' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2659' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2656 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2659' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2658' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2656 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2658' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8002' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6344'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [0] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [0]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8002' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2648' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2646 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2648' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8007' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6349'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [5] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [5]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8007' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8005' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6347'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [3] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8005' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8006' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6348'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [4] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [4]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8006' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2639' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2636 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2639' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2638' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2636 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2638' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2643' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2636 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2643' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2622' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2616 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2622' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2621' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2616 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2621' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2619' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2616 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2619' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2618' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2616 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2618' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2601' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2596 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2601' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2600' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2596 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2600' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2598' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2596 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2598' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2603' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2596 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2603' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2589' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2586 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2589' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2581' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2576 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2581' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2580' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2576 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2580' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2578' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2576 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2578' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2569' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2566 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2569' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2560' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2556 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2560' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2559' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2556 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2559' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2558' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2556 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2558' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2542' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2536 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2542' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2541' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2536 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2541' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2540' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2536 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2540' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2539' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2536 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2539' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2538' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2536 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2538' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2529' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2526 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2529' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2521' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2516 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2521' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2519' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2516 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2519' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2518' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2516 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2518' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2501' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2496 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2501' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2499' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2496 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2499' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2498' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2496 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2498' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2503' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2496 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2503' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2477' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2476 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2477' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2472' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2464 [6] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2472' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2471' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2464 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2471' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2470' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2464 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2470' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2469' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2464 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2469' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2473' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2464 [7] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2473' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2453' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2452 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2453' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2448' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2440 [6] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2448' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2446' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2440 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2446' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2445' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2440 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2445' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2449' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2440 [7] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2449' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2429' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2428 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2429' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2423' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2416 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2423' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2422' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2416 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2422' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2421' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2416 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2421' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2425' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4825'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2416 [7] = $auto$simplemap.cc:250:simplemap_eqne$4819 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2425' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2405' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2404 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2405' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2400' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2392 [6] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2400' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2399' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2392 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2399' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2398' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2392 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2398' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2397' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2392 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2397' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2381' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2380 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2381' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2376' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4980'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2368 [6] = $auto$simplemap.cc:250:simplemap_eqne$4972 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2376' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2374' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2368 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2374' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2373' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2368 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2373' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2360' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5048'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2356 [3] = $auto$simplemap.cc:168:logic_reduce$5044 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2360' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2357' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2356 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2357' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2351' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2344 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2351' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2350' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2344 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2350' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2349' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2344 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2349' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2336' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5048'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2332 [3] = $auto$simplemap.cc:168:logic_reduce$5044 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2336' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2333' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2332 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2333' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2327' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2320 [5] = $auto$simplemap.cc:250:simplemap_eqne$5020 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2327' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2325' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2320 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2325' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2312' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5048'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2308 [3] = $auto$simplemap.cc:168:logic_reduce$5044 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2312' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2309' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2308 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2309' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2302' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4843'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2296 [4] = $auto$simplemap.cc:250:simplemap_eqne$4837 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2302' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2301' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2296 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2301' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2288' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5048'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2284 [3] = $auto$simplemap.cc:168:logic_reduce$5044 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2288' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2287' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2284 [2] = $auto$simplemap.cc:168:logic_reduce$5044 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2287' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2285' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5045'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2284 [0] = $auto$simplemap.cc:168:logic_reduce$5044 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2285' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2277' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5001'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2272 [3] = $auto$simplemap.cc:250:simplemap_eqne$4996 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2277' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2265' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2262 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2265' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2257' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2252 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2257' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2254' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2252 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2254' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2237' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2232 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2237' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2234' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2232 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2234' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2239' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2232 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2239' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2219' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2217 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2219' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6359' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$8017'.
    Redirecting output \Y: $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [15] = $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [15]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6359' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2170' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2167 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2170' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2169' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2167 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2169' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2159' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2157 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2159' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2145' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2143 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2145' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2121' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2119 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2121' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2111' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2109 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2111' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2116' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2109 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2116' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2099' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2097 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2099' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2093' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2087 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2093' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8015' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6357'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [13] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [13]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8015' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8016' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6358'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [14] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [14]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8016' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2089' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2087 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2089' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2079' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2077 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2079' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2069' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2067 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2069' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2051' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2045 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2051' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2050' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2045 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2050' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2048' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2045 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2048' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2025' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2020 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2025' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2024' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2020 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2024' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2023' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2020 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2023' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2022' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2020 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2022' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2027' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2020 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2027' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1997' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1994 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1997' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1988' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1984 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1988' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1987' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1984 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1987' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1970' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1967 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1970' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1962' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1957 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1962' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1961' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1957 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1961' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1960' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1957 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1960' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1948' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1946 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1948' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1942' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1936 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1942' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1938' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1936 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1938' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1943' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1936 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1943' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1928' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1926 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1928' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1917' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1915 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1917' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1906' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1904 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1906' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7019' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6857'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7004 [14] = $auto$simplemap.cc:127:simplemap_reduce$6842 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7019' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1887' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1883 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1887' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1886' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1883 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1886' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1890' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1883 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1890' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1877' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3520'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1876 [0] = $auto$simplemap.cc:127:simplemap_reduce$3513 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1877' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1862' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1856 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1862' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1861' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1856 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1861' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1860' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1856 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1860' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1859' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1856 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1859' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1847' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1845 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1847' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1796' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5964'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1794 [0] = $auto$simplemap.cc:250:simplemap_eqne$5962 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1796' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1768' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1762 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1768' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1767' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1762 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1767' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1766' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1762 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1766' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1764' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1762 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1764' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1719' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1716 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1719' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1718' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5254'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1716 [1] = $auto$simplemap.cc:168:logic_reduce$5252 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1718' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1709' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1706 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1709' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1708' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1706 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1708' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1689' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1683 [4] = $auto$simplemap.cc:250:simplemap_eqne$5505 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1689' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1687' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1683 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1687' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1686' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1683 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1686' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1676' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1673 [2] = $auto$simplemap.cc:127:simplemap_reduce$5538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1676' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8003' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6345'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [1] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [1]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8003' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1668' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1663 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1668' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1667' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1663 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1667' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1666' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1663 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1666' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1665' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5530'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1663 [0] = $auto$simplemap.cc:250:simplemap_eqne$5528 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1665' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$8004' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6346'.
    Redirecting output \Y: $techmap$procmux$741.$and$<techmap.v>:434$5815_Y [2] = $techmap$procmux$777.$and$<techmap.v>:434$2189_Y [2]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$8004' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1648' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5510'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1643 [3] = $auto$simplemap.cc:250:simplemap_eqne$5505 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1648' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1647' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5532'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1643 [2] = $auto$simplemap.cc:250:simplemap_eqne$5528 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1647' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1646' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4417'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1643 [1] = $auto$simplemap.cc:250:simplemap_eqne$4414 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1646' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1650' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5239'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1643 [5] = $auto$simplemap.cc:250:simplemap_eqne$5232 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1650' from module `\cpu'.
  Cell `$auto$simplemap.cc:235:simplemap_logbin$1956' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5374'.
    Redirecting output \Y: $logic_or$cpu.v:843$120_Y = $auto$simplemap.cc:127:simplemap_reduce$5372 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:235:simplemap_logbin$1956' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5767' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5746'.
    Redirecting output \Y: $procmux$731_CTRL = $auto$simplemap.cc:127:simplemap_reduce$5745 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5767' from module `\cpu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2066' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1705'.
    Redirecting output \Y: $xor$cpu.v:946$141_Y = $auto$simplemap.cc:65:simplemap_bitop$1703
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2066' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5070' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5205'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5069 = $auto$simplemap.cc:127:simplemap_reduce$5204
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5070' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5038' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5050'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5037 [0] = $auto$simplemap.cc:168:logic_reduce$5049 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5038' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5011' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5035'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5008 [2] = $auto$simplemap.cc:127:simplemap_reduce$5032 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5011' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4990' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5050'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4989 [0] = $auto$simplemap.cc:168:logic_reduce$5049 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4990' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4964' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4988'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4960 [3] = $auto$simplemap.cc:127:simplemap_reduce$4984 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4964' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4962' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5010'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4960 [1] = $auto$simplemap.cc:127:simplemap_reduce$5008 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4962' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4942' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5050'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4941 [0] = $auto$simplemap.cc:168:logic_reduce$5049 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4942' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4940' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4988'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4936 [3] = $auto$simplemap.cc:127:simplemap_reduce$4984 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4940' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4939' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5035'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4936 [2] = $auto$simplemap.cc:127:simplemap_reduce$5032 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4939' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4916' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4988'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4912 [3] = $auto$simplemap.cc:127:simplemap_reduce$4984 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4916' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4915' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5035'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4912 [2] = $auto$simplemap.cc:127:simplemap_reduce$5032 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4915' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4914' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5010'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4912 [1] = $auto$simplemap.cc:127:simplemap_reduce$5008 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4914' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4871' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5035'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4868 [2] = $auto$simplemap.cc:127:simplemap_reduce$5032 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4871' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4849' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4847 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4849' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4811' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5010'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4809 [1] = $auto$simplemap.cc:127:simplemap_reduce$5008 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4811' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4792' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4790 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4792' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4743' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4741 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4743' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4742' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4741 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4742' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4725' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5010'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4723 [1] = $auto$simplemap.cc:127:simplemap_reduce$5008 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4725' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4724' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4723 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4724' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4707' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5010'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4705 [1] = $auto$simplemap.cc:127:simplemap_reduce$5008 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4707' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4691' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5050'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4690 = $auto$simplemap.cc:168:logic_reduce$5049 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4691' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4670' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4668 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4670' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4653' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4758'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4652 = $auto$simplemap.cc:127:simplemap_reduce$4757
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4653' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4638' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4636 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4638' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4637' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4636 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4637' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4622' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5010'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4621 = $auto$simplemap.cc:127:simplemap_reduce$5008 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4622' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4609' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4607 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4609' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4608' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4607 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4608' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4584' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4581 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4584' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4583' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4581 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4583' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4543' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4540 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4543' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4542' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4540 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4542' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4521' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4518 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4521' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4520' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4518 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4520' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4471' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4468 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4471' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4470' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4468 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4470' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4450' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4447 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4450' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4449' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4447 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4449' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4405' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4402 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4405' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4403' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4402 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4403' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4381' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4378 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4381' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4379' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4378 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4379' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4332' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4330 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4332' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4315' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4314 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4315' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4260' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4257 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4260' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4242' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4241 = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4242' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4226' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4224 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4226' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4225' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4224 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4225' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4201' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4278'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4199 [1] = $auto$simplemap.cc:127:simplemap_reduce$4276 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4201' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4200' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4199 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4200' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4179' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5035'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4176 [2] = $auto$simplemap.cc:127:simplemap_reduce$5032 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4179' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4178' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4176 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4178' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7041' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6987'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7029 [11] = $auto$simplemap.cc:127:simplemap_reduce$6975 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7041' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4154' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4150 [3] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4154' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4152' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4150 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4152' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4151' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4150 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4151' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4129' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4127 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4129' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4104' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4278'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4101 [2] = $auto$simplemap.cc:127:simplemap_reduce$4276 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4104' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4083' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4080 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4083' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7048' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6994'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7042 [5] = $auto$simplemap.cc:127:simplemap_reduce$6988 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7048' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4059' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4055 [3] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4059' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4058' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4298'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4055 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4058' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4057' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4055 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4057' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4056' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4055 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4056' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4031' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4028 [2] = $auto$simplemap.cc:127:simplemap_reduce$4176 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4031' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4030' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5035'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4028 [1] = $auto$simplemap.cc:127:simplemap_reduce$5032 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4030' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4011' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4008 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4011' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4010' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4259'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4008 [1] = $auto$simplemap.cc:127:simplemap_reduce$4257 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4010' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4009' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4008 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4009' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3991' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3988 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3991' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3989' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3988 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3989' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3957' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3955 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3957' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3937' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3934 [2] = $auto$simplemap.cc:127:simplemap_reduce$4176 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3937' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6930' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7038'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6921 [8] = $auto$simplemap.cc:127:simplemap_reduce$7029 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6930' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3916' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3912 [3] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3916' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3915' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4153'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3912 [2] = $auto$simplemap.cc:127:simplemap_reduce$4150 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3915' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3914' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3912 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3914' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7388' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6980'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7383 [4] = $auto$simplemap.cc:127:simplemap_reduce$6975 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7388' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3893' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3890 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3893' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3892' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3990'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3890 [1] = $auto$simplemap.cc:127:simplemap_reduce$3988 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3892' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3860' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3858 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3860' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3859' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3858 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3859' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3843' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3840 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3843' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3841' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3840 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3841' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7390' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7036'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7383 [6] = $auto$simplemap.cc:127:simplemap_reduce$7029 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7390' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3822' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3821 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3822' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3782' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3781 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3782' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6924' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7386'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6921 [2] = $auto$simplemap.cc:127:simplemap_reduce$7383 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6924' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3764' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4297'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3763 [0] = $auto$simplemap.cc:127:simplemap_reduce$4296 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3764' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7389' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6981'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7383 [5] = $auto$simplemap.cc:127:simplemap_reduce$6975 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7389' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6933' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6987'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6921 [11] = $auto$simplemap.cc:127:simplemap_reduce$6975 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6933' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3743' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3742 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3743' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3726' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4278'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3725 = $auto$simplemap.cc:127:simplemap_reduce$4276 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3726' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3698' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3696 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3698' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6927' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6981'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6921 [5] = $auto$simplemap.cc:127:simplemap_reduce$6975 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6927' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3678' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3675 [2] = $auto$simplemap.cc:127:simplemap_reduce$4176 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3678' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3677' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4082'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3675 [1] = $auto$simplemap.cc:127:simplemap_reduce$4080 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3677' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3676' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3675 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3676' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3656' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3655 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3656' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7387' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6979'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7383 [3] = $auto$simplemap.cc:127:simplemap_reduce$6975 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7387' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3579' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3657'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3577 [1] = $auto$simplemap.cc:127:simplemap_reduce$3655 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3579' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3578' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3577 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3578' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3496' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3550'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3484 [11] = $auto$simplemap.cc:127:simplemap_reduce$3538 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3496' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3495' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3549'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3484 [10] = $auto$simplemap.cc:127:simplemap_reduce$3538 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3495' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3494' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3548'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3484 [9] = $auto$simplemap.cc:127:simplemap_reduce$3538 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3494' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3489' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3543'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3484 [4] = $auto$simplemap.cc:127:simplemap_reduce$3538 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3489' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3488' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3542'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3484 [3] = $auto$simplemap.cc:127:simplemap_reduce$3538 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3488' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3487' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3484 [2] = $auto$simplemap.cc:127:simplemap_reduce$3538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3487' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3486' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3540'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3484 [1] = $auto$simplemap.cc:127:simplemap_reduce$3538 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3486' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3485' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3539'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3484 [0] = $auto$simplemap.cc:127:simplemap_reduce$3538 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3485' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3450' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3448 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3450' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3449' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3448 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3449' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3433' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3432 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3433' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3406' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3550'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [11] = $auto$simplemap.cc:127:simplemap_reduce$3538 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3406' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3405' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3549'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [10] = $auto$simplemap.cc:127:simplemap_reduce$3538 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3405' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3404' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3548'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [9] = $auto$simplemap.cc:127:simplemap_reduce$3538 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3404' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3403' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3547'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [8] = $auto$simplemap.cc:127:simplemap_reduce$3538 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3403' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3402' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3546'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [7] = $auto$simplemap.cc:127:simplemap_reduce$3538 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3402' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3400' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3490'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [5] = $auto$simplemap.cc:127:simplemap_reduce$3484 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3400' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3399' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3543'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [4] = $auto$simplemap.cc:127:simplemap_reduce$3538 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3399' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3398' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3542'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [3] = $auto$simplemap.cc:127:simplemap_reduce$3538 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3398' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3397' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [2] = $auto$simplemap.cc:127:simplemap_reduce$3538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3397' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3396' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3540'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [1] = $auto$simplemap.cc:127:simplemap_reduce$3538 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3396' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3395' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3539'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3394 [0] = $auto$simplemap.cc:127:simplemap_reduce$3538 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3395' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3352' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3550'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3340 [11] = $auto$simplemap.cc:127:simplemap_reduce$3538 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3352' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3351' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3549'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3340 [10] = $auto$simplemap.cc:127:simplemap_reduce$3538 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3351' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3350' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3548'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3340 [9] = $auto$simplemap.cc:127:simplemap_reduce$3538 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3350' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3349' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3547'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3340 [8] = $auto$simplemap.cc:127:simplemap_reduce$3538 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3349' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3348' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3546'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3340 [7] = $auto$simplemap.cc:127:simplemap_reduce$3538 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3348' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3347' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3545'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3340 [6] = $auto$simplemap.cc:127:simplemap_reduce$3538 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3347' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3294' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3293 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3294' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3261' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3492'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3253 [7] = $auto$simplemap.cc:127:simplemap_reduce$3484 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3261' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3260' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3491'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3253 [6] = $auto$simplemap.cc:127:simplemap_reduce$3484 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3260' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3259' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3490'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3253 [5] = $auto$simplemap.cc:127:simplemap_reduce$3484 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3259' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3258' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3543'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3253 [4] = $auto$simplemap.cc:127:simplemap_reduce$3538 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3258' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3257' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3542'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3253 [3] = $auto$simplemap.cc:127:simplemap_reduce$3538 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3257' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3256' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3253 [2] = $auto$simplemap.cc:127:simplemap_reduce$3538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3256' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3255' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3540'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3253 [1] = $auto$simplemap.cc:127:simplemap_reduce$3538 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3255' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3254' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3539'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3253 [0] = $auto$simplemap.cc:127:simplemap_reduce$3538 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3254' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3220' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3218 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3220' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3219' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3218 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3219' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3180' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4082'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3178 [1] = $auto$simplemap.cc:127:simplemap_reduce$4080 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3180' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3179' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3178 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3179' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3161' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3159 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3161' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3160' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3159 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3160' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3139' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3138 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3139' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7392' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7038'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7383 [8] = $auto$simplemap.cc:127:simplemap_reduce$7029 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7392' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3123' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3120 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3123' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3122' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3120 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3122' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3121' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3120 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3121' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3105' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4988'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3103 [1] = $auto$simplemap.cc:127:simplemap_reduce$4984 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3105' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3104' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3103 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3104' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3079' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3699'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3076 [2] = $auto$simplemap.cc:127:simplemap_reduce$3696 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3079' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3078' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5010'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3076 [1] = $auto$simplemap.cc:127:simplemap_reduce$5008 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3078' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7399' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6991'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7396 [2] = $auto$simplemap.cc:127:simplemap_reduce$6988 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7399' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3058' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3055 [2] = $auto$simplemap.cc:127:simplemap_reduce$4176 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3058' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7401' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7047'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7396 [4] = $auto$simplemap.cc:127:simplemap_reduce$7042 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7401' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3040' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3038 [1] = $auto$simplemap.cc:127:simplemap_reduce$4176 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3040' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3039' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3038 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3039' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7406' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7052'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7403 [2] = $auto$simplemap.cc:127:simplemap_reduce$7049 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7406' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3023' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3020 [2] = $auto$simplemap.cc:127:simplemap_reduce$4176 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3023' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3022' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3990'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3020 [1] = $auto$simplemap.cc:127:simplemap_reduce$3988 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3022' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3021' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3020 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3021' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7409' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7055'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7407 [1] = $auto$simplemap.cc:127:simplemap_reduce$7053 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7409' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3002' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2998 [3] = $auto$simplemap.cc:127:simplemap_reduce$4176 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3002' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3000' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2998 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3000' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2999' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4706'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2998 [0] = $auto$simplemap.cc:127:simplemap_reduce$4705 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2999' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6679' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6731'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6678 = $auto$simplemap.cc:127:simplemap_reduce$6730
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6679' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2978' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2974 [3] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2978' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2976' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2974 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2976' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2943' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2942 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2943' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2927' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3295'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2925 [1] = $auto$simplemap.cc:127:simplemap_reduce$3293 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2927' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2926' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4773'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2925 [0] = $auto$simplemap.cc:127:simplemap_reduce$4772 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2926' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2899' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4278'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2896 [2] = $auto$simplemap.cc:127:simplemap_reduce$4276 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2899' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2815' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2867'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2814 = $auto$simplemap.cc:127:simplemap_reduce$2866
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2815' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2802' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2854'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2801 = $auto$simplemap.cc:127:simplemap_reduce$2853
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2802' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2779' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2841'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2778 = $auto$simplemap.cc:127:simplemap_reduce$2840
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2779' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2749' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2746 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2749' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2748' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2746 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2748' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2729' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2726 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2729' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2728' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2726 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2728' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2709' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2706 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2709' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2707' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2706 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2707' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2689' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2686 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2689' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2688' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2686 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2688' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2687' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2686 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2687' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2669' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2666 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2669' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2668' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2666 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2668' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2667' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2666 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2667' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2649' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2646 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2649' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2647' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2646 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2647' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2629' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2626 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2629' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2628' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2626 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2628' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2627' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2626 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2627' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5540' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5538 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5540' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5539' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5538 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5539' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2609' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2606 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2609' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2608' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2606 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2608' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2607' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2606 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2607' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2588' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2586 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2588' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2587' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2586 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2587' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5518' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5515 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5518' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5517' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5515 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5517' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5516' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5515 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5516' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2568' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2566 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2568' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2567' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2566 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2567' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2549' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2546 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2549' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2548' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2546 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2548' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2547' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2546 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2547' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7037' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7391'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7029 [7] = $auto$simplemap.cc:127:simplemap_reduce$7383 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7037' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2528' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2526 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2528' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2527' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2526 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2527' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2509' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2506 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2509' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2508' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2506 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2508' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2507' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2506 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2507' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2480' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2476 [3] = $auto$simplemap.cc:127:simplemap_reduce$4176 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2480' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2479' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4298'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2476 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2479' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2478' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2476 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2478' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2456' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2452 [3] = $auto$simplemap.cc:127:simplemap_reduce$4176 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2456' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2455' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4153'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2452 [2] = $auto$simplemap.cc:127:simplemap_reduce$4150 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2455' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2454' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2452 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2454' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2432' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2428 [3] = $auto$simplemap.cc:127:simplemap_reduce$4296 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2432' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2431' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4298'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2428 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2431' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2430' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2428 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2430' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2408' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4988'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2404 [3] = $auto$simplemap.cc:127:simplemap_reduce$4984 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2408' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2407' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4298'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2404 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2407' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2406' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2404 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2406' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2384' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4988'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2380 [3] = $auto$simplemap.cc:127:simplemap_reduce$4984 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2384' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2383' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4153'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2380 [2] = $auto$simplemap.cc:127:simplemap_reduce$4150 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2383' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2382' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2380 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2382' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2359' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4298'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2356 [2] = $auto$simplemap.cc:127:simplemap_reduce$4296 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2359' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2358' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2356 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2358' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2335' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5035'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2332 [2] = $auto$simplemap.cc:127:simplemap_reduce$5032 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2335' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2334' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2332 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2334' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2311' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4153'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2308 [2] = $auto$simplemap.cc:127:simplemap_reduce$4150 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2311' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2310' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2308 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2310' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2291' is identical to cell `$auto$simplemap.cc:177:logic_reduce$5051'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2289 [1] = $auto$simplemap.cc:168:logic_reduce$5049 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2291' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2286' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4870'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2284 [1] = $auto$simplemap.cc:127:simplemap_reduce$4868 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2286' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2264' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2262 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2264' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2263' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2262 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2263' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2245' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2242 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2245' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2244' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2242 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2244' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2243' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2242 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2243' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2168' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2167 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2168' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2122' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2119 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2122' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2120' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2119 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2120' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2100' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2097 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2100' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2098' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2097 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2098' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2058' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2055 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2058' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2057' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4891'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2055 [1] = $auto$simplemap.cc:127:simplemap_reduce$4889 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2057' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2056' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2055 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2056' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2033' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2030 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2033' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2032' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2030 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2032' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2031' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2030 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2031' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1996' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1994 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1996' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1995' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1994 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1995' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5320' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5407'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5319 [0] = $auto$simplemap.cc:127:simplemap_reduce$5406 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5320' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1969' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1967 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1969' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1968' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1967 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1968' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1949' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5068'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1946 [2] = $auto$simplemap.cc:127:simplemap_reduce$5065 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1949' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1947' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1946 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1947' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1896' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1893 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1896' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1895' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1893 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1895' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1894' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1893 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1894' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1869' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1866 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1869' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1868' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1866 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1868' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1867' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1866 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1867' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1775' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1772 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1775' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1774' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1772 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1774' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1773' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2747'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1772 [0] = $auto$simplemap.cc:127:simplemap_reduce$2746 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1773' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1717' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1716 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1717' from module `\cpu'.
  Cell `$auto$simplemap.cc:177:logic_reduce$5257' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5205'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$5256 = $auto$simplemap.cc:127:simplemap_reduce$5204
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$5257' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1696' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5203'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1693 [2] = $auto$simplemap.cc:127:simplemap_reduce$5200 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1696' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1695' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1693 [1] = $auto$simplemap.cc:127:simplemap_reduce$4561 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1695' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1694' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1693 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1694' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5247' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5205'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5246 = $auto$simplemap.cc:127:simplemap_reduce$5204
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5247' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1675' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1673 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1675' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1674' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2727'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1673 [0] = $auto$simplemap.cc:127:simplemap_reduce$2726 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1674' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5245' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5242 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5245' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1656' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4671'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1653 [2] = $auto$simplemap.cc:127:simplemap_reduce$4668 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1656' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1655' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1653 [1] = $auto$simplemap.cc:127:simplemap_reduce$4498 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1655' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1654' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4425'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1653 [0] = $auto$simplemap.cc:127:simplemap_reduce$4424 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1654' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4545' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4566'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4544 = $auto$simplemap.cc:127:simplemap_reduce$4565
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4545' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4523' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4566'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4522 = $auto$simplemap.cc:127:simplemap_reduce$4565
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4523' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4473' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4503'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4472 = $auto$simplemap.cc:127:simplemap_reduce$4502
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4473' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4452' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4503'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4451 = $auto$simplemap.cc:127:simplemap_reduce$4502
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4452' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4407' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4429'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4406 = $auto$simplemap.cc:127:simplemap_reduce$4428
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4407' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4383' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4429'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4382 = $auto$simplemap.cc:127:simplemap_reduce$4428
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4383' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4229' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4611'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4228 = $auto$simplemap.cc:256:simplemap_eqne$4605
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4229' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4182' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4181 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4182' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4156' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4611'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4155 [0] = $auto$simplemap.cc:256:simplemap_eqne$4605
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4156' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4132' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4131 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4132' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4061' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4611'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4060 [0] = $auto$simplemap.cc:256:simplemap_eqne$4605
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4061' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3960' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3959 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3960' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3919' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4157'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3917 [1] = $auto$simplemap.cc:127:simplemap_reduce$4155 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3919' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3918' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3917 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3918' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3862' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4640'.
    Redirecting output \Y: $auto$simplemap.cc:256:simplemap_eqne$3856 = $auto$simplemap.cc:127:simplemap_reduce$4639
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3862' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5015' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5039'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5013 [1] = $auto$simplemap.cc:127:simplemap_reduce$5037 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5015' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3728' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4107'.
    Redirecting output \Y: $auto$simplemap.cc:256:simplemap_eqne$3723 = $auto$simplemap.cc:127:simplemap_reduce$4105 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3728' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3701' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3700 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3701' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3581' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3659'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3580 = $auto$simplemap.cc:256:simplemap_eqne$3653
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3581' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3503' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3557'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3497 [5] = $auto$simplemap.cc:127:simplemap_reduce$3551 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3503' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3499' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3553'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3497 [1] = $auto$simplemap.cc:127:simplemap_reduce$3551 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3499' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3498' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3552'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3497 [0] = $auto$simplemap.cc:127:simplemap_reduce$3551 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3498' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3452' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4611'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3451 = $auto$simplemap.cc:256:simplemap_eqne$4605
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3452' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3413' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3557'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3407 [5] = $auto$simplemap.cc:127:simplemap_reduce$3551 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3413' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3412' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3556'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3407 [4] = $auto$simplemap.cc:127:simplemap_reduce$3551 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3412' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3410' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3407 [2] = $auto$simplemap.cc:127:simplemap_reduce$3497 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3410' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3409' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3553'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3407 [1] = $auto$simplemap.cc:127:simplemap_reduce$3551 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3409' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3408' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3552'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3407 [0] = $auto$simplemap.cc:127:simplemap_reduce$3551 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3408' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4967' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4991'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4965 [1] = $auto$simplemap.cc:127:simplemap_reduce$4989 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4967' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4966' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5014'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4965 [0] = $auto$simplemap.cc:127:simplemap_reduce$5013 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4966' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3359' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3557'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3353 [5] = $auto$simplemap.cc:127:simplemap_reduce$3551 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3359' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3358' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3556'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3353 [4] = $auto$simplemap.cc:127:simplemap_reduce$3551 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3358' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3357' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3555'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3353 [3] = $auto$simplemap.cc:127:simplemap_reduce$3551 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3357' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3270' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3501'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3266 [3] = $auto$simplemap.cc:127:simplemap_reduce$3497 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3270' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3269' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3500'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3266 [2] = $auto$simplemap.cc:127:simplemap_reduce$3497 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3269' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3268' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3553'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3266 [1] = $auto$simplemap.cc:127:simplemap_reduce$3551 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3268' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3267' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3552'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3266 [0] = $auto$simplemap.cc:127:simplemap_reduce$3551 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3267' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3182' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3680'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3181 = $auto$simplemap.cc:127:simplemap_reduce$3679
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3182' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3164' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4611'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3163 = $auto$simplemap.cc:256:simplemap_eqne$4605
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3164' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3125' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3223'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3124 = $auto$simplemap.cc:127:simplemap_reduce$3222
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3125' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4919' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4943'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4917 [1] = $auto$simplemap.cc:127:simplemap_reduce$4941 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4919' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4918' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5014'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4917 [0] = $auto$simplemap.cc:127:simplemap_reduce$5013 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4918' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3082' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3702'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3080 [1] = $auto$simplemap.cc:127:simplemap_reduce$3700 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3082' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3081' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5014'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3080 [0] = $auto$simplemap.cc:127:simplemap_reduce$5013 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3081' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$7400' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$7046'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$7396 [3] = $auto$simplemap.cc:127:simplemap_reduce$7042 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$7400' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3025' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3993'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3024 = $auto$simplemap.cc:127:simplemap_reduce$3992
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3025' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3004' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4611'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3003 [0] = $auto$simplemap.cc:256:simplemap_eqne$4605
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3004' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4894' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4586'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4893 = $auto$simplemap.cc:127:simplemap_reduce$4585
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4894' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2980' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2979 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2980' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2929' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3297'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2928 = $auto$simplemap.cc:127:simplemap_reduce$3296
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2929' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4873' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4872 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4873' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2691' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2751'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2690 = $auto$simplemap.cc:127:simplemap_reduce$2750
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2691' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2671' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2731'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2670 = $auto$simplemap.cc:127:simplemap_reduce$2730
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2671' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2651' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2711'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2650 = $auto$simplemap.cc:127:simplemap_reduce$2710
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2651' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4852' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4851 = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4852' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5543' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2751'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5542 = $auto$simplemap.cc:127:simplemap_reduce$2750
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5543' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2591' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2611'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2590 = $auto$simplemap.cc:127:simplemap_reduce$2610
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2591' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2571' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2731'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2570 = $auto$simplemap.cc:127:simplemap_reduce$2730
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2571' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4814' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5014'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4813 = $auto$simplemap.cc:127:simplemap_reduce$5013 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4814' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2531' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2631'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2530 = $auto$simplemap.cc:127:simplemap_reduce$2630
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2531' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2511' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2631'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2510 = $auto$simplemap.cc:127:simplemap_reduce$2630
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2511' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2482' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2481 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2482' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2458' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2457 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2458' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4794' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4793 = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4794' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2435' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4062'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2433 [1] = $auto$simplemap.cc:127:simplemap_reduce$4060 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2435' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2434' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2433 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2434' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2410' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2409 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2410' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2386' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2385 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2386' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4776' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3825'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4775 = $auto$simplemap.cc:127:simplemap_reduce$3824
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4776' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2362' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2361 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2362' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2339' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5039'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2337 [1] = $auto$simplemap.cc:127:simplemap_reduce$5037 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2339' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2338' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2337 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2338' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2314' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2313 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2314' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2290' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4334'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2289 [0] = $auto$simplemap.cc:127:simplemap_reduce$4333
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2290' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2267' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5520'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2266 = $auto$simplemap.cc:127:simplemap_reduce$5519
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2267' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2247' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5520'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2246 = $auto$simplemap.cc:127:simplemap_reduce$5519
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2247' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4745' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4640'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4744 = $auto$simplemap.cc:127:simplemap_reduce$4639
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4745' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2124' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2172'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2123 = $auto$simplemap.cc:127:simplemap_reduce$2171
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2124' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2102' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2172'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2101 = $auto$simplemap.cc:127:simplemap_reduce$2171
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2102' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2060' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3223'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2059 = $auto$simplemap.cc:127:simplemap_reduce$3222
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2060' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2035' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2551'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2034 = $auto$simplemap.cc:127:simplemap_reduce$2550
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2035' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1951' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2172'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1950 = $auto$simplemap.cc:127:simplemap_reduce$2171
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1951' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1898' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1999'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1897 = $auto$simplemap.cc:127:simplemap_reduce$1998
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1898' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1871' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1972'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1870 = $auto$simplemap.cc:127:simplemap_reduce$1971
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1871' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1777' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2611'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1776 = $auto$simplemap.cc:127:simplemap_reduce$2610
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1777' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1721' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2711'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1720 = $auto$simplemap.cc:127:simplemap_reduce$2710
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1721' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1698' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1999'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1697 = $auto$simplemap.cc:127:simplemap_reduce$1998
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1698' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1678' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2551'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1677 = $auto$simplemap.cc:127:simplemap_reduce$2550
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1678' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1658' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1972'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1657 = $auto$simplemap.cc:127:simplemap_reduce$1971
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1658' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4673' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4586'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4672 = $auto$simplemap.cc:127:simplemap_reduce$4585
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4673' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3505' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3559'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3504 [0] = $auto$simplemap.cc:127:simplemap_reduce$3558 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3505' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3417' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3561'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3414 [2] = $auto$simplemap.cc:127:simplemap_reduce$3558 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3417' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3415' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3559'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3414 [0] = $auto$simplemap.cc:127:simplemap_reduce$3558 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3415' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3363' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3561'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3360 [2] = $auto$simplemap.cc:127:simplemap_reduce$3558 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3363' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3275' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3506'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3273 [1] = $auto$simplemap.cc:127:simplemap_reduce$3504 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3275' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3274' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3559'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3273 [0] = $auto$simplemap.cc:127:simplemap_reduce$3558 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3274' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3420' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3564'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3418 [1] = $auto$simplemap.cc:127:simplemap_reduce$3562 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3420' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3366' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3564'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3364 [1] = $auto$simplemap.cc:127:simplemap_reduce$3562 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3366' from module `\cpu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3278' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3509'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3277 [0] = $auto$simplemap.cc:127:simplemap_reduce$3508 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3278' from module `\cpu'.
Removed a total of 1028 cells.

4.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8582'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8581'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8580'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$8578'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$8577'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8525'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8524'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8523'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$8576'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$8575'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$8522'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$8521'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$8520'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$8519'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$8518'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8691'.
Finding unused cells or wires in module \cpu..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6648'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6647'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6646'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6645'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$6640'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6610'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6609'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6607'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6606'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6605'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6604'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6603'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6602'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6601'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6600'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6597'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6596'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6595'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6608'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6599'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6598'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6187'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6186'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6185'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$6184'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$6156'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8125'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8126'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8130'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8131'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8132'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8173'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8175'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$8176'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8180'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8181'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8182'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8185'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8188'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$8195'.

4.19.5. Finished fast OPT passes.

4.20. Executing ABC pass (technology mapping using ABC).

4.20.1. Extracting gate netlist of module `\ALU' to `<abc-temp-dir>/input.blif'..
Extracted 244 gates and 283 wires to a netlist network with 37 inputs and 15 outputs.

4.20.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       18
ABC RESULTS:              AOI3 cells:       10
ABC RESULTS:              AOI4 cells:       12
ABC RESULTS:               MUX cells:       33
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               NOR cells:       14
ABC RESULTS:               NOT cells:       37
ABC RESULTS:              OAI3 cells:       18
ABC RESULTS:              OAI4 cells:        4
ABC RESULTS:                OR cells:        5
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:               XOR cells:       18
ABC RESULTS:        internal signals:      231
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       15
Removing temp directory.

4.20.2. Extracting gate netlist of module `\cpu' to `<abc-temp-dir>/input.blif'..
Extracted 2071 gates and 2229 wires to a netlist network with 156 inputs and 178 outputs.

4.20.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      347
ABC RESULTS:              AOI3 cells:      100
ABC RESULTS:              AOI4 cells:       45
ABC RESULTS:               MUX cells:      286
ABC RESULTS:              NAND cells:       83
ABC RESULTS:               NOR cells:      121
ABC RESULTS:               NOT cells:      193
ABC RESULTS:              OAI3 cells:      112
ABC RESULTS:              OAI4 cells:       44
ABC RESULTS:                OR cells:      205
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       26
ABC RESULTS:        internal signals:     1895
ABC RESULTS:           input signals:      156
ABC RESULTS:          output signals:      178
Removing temp directory.

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8735' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8752' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8773' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8790' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8808' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8833' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8853' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8870' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8875' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8876' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8877' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8887' in module `ALU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9676' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9813' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9742' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9642' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$10088' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9834' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9792' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$10115' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$10132' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$10130' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9910' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9955' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9957' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9867' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$10145' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9050' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9803' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9976' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9659' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9044' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9047' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9970' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9971' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$10019' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$10111' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$10110' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9625' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9315' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9321' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9327' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9318' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9324' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9709' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9898' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9692' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9824' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9181' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9157' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9180' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9152' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9931' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9289' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9296' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9360' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9366' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9379' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9312' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9309' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9726' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9941' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9920' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9877' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9888' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9271' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9330' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9185' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9206' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9202' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9200' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9233' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9224' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9187' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9111' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9781' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9845' in module `cpu'.
Optimizing away select inverter for $_MUX_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9855' in module `cpu'.

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

4.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
  removing unused `$_NOT_' cell `$abc$8702$auto$blifparse.cc:286:parse_blif$8711'.
  removing unused non-port wire \CO9.
  removing unused non-port wire \HC9.
  removing unused non-port wire \adder_CI.
  removing unused non-port wire \temp.
  removing unused non-port wire \temp_BI.
  removing unused non-port wire \temp_HC.
  removing unused non-port wire \temp_h.
  removing unused non-port wire \temp_l.
  removing unused non-port wire \temp_logic.
  removed 9 unused temporary wires.
Finding unused cells or wires in module \cpu..
  removing unused non-port wire \ADJH.
  removing unused non-port wire \ADJL.
  removing unused non-port wire \IR.
  removing unused non-port wire \PC_inc.
  removing unused non-port wire \PC_temp.
  removing unused non-port wire \cond_true.
  removing unused non-port wire \regfile.
  removing unused non-port wire \regsel.
  removing unused non-port wire \write_register.
  removed 9 unused temporary wires.

4.21.5. Finished fast OPT passes.

4.22. Executing HIERARCHY pass (managing design hierarchy).

4.22.1. Analyzing design hierarchy..
Top module:  \cpu
Used module:     \ALU

4.22.2. Analyzing design hierarchy..
Top module:  \cpu
Used module:     \ALU
Removed 0 unused modules.

4.23. Printing statistics.

=== ALU ===

   Number of wires:                194
   Number of wire bits:            225
   Number of public wires:          16
   Number of public wire bits:      40
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                200
     $_AND_                         18
     $_AOI3_                        10
     $_AOI4_                        12
     $_DFF_P_                       13
     $_MUX_                         33
     $_NAND_                         9
     $_NOR_                         14
     $_NOT_                         36
     $_OAI3_                        18
     $_OAI4_                         4
     $_OR_                           5
     $_XNOR_                        10
     $_XOR_                         18

=== cpu ===

   Number of wires:               1537
   Number of wire bits:           1744
   Number of public wires:          72
   Number of public wire bits:     236
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1695
     $_AND_                        347
     $_AOI3_                       100
     $_AOI4_                        45
     $_DFF_PP0_                      5
     $_DFF_PP1_                      1
     $_DFF_P_                      125
     $_MUX_                        286
     $_NAND_                        83
     $_NOR_                        121
     $_NOT_                        193
     $_OAI3_                       112
     $_OAI4_                        44
     $_OR_                         205
     $_XNOR_                         1
     $_XOR_                         26
     ALU                             1

=== design hierarchy ===

   cpu                               1
     ALU                             1

   Number of wires:               1731
   Number of wire bits:           1969
   Number of public wires:          88
   Number of public wire bits:     276
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1894
     $_AND_                        365
     $_AOI3_                       110
     $_AOI4_                        57
     $_DFF_PP0_                      5
     $_DFF_PP1_                      1
     $_DFF_P_                      138
     $_MUX_                        319
     $_NAND_                        92
     $_NOR_                        135
     $_NOT_                        229
     $_OAI3_                       130
     $_OAI4_                        48
     $_OR_                         210
     $_XNOR_                        11
     $_XOR_                         44

4.24. Executing CHECK pass (checking for obvious problems).
checking module ALU..
checking module cpu..
found and reported 0 problems.

5. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=704.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\ALU':
  mapped 13 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\cpu':
  mapped 5 $_DFF_PP0_ cells to \DFFSR cells.
  mapped 1 $_DFF_PP1_ cells to \DFFSR cells.
  mapped 125 $_DFF_P_ cells to \DFFPOSX1 cells.

6. Executing OPT pass (performing simple optimizations).

6.1. Executing OPT_EXPR pass (perform const folding).

6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
  Cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9290' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$10465'.
    Redirecting output \Y: $abc$8891$n733 = $auto$rtlil.cc:1731:NotGate$10466
    Removing $_NOT_ cell `$abc$8891$auto$blifparse.cc:286:parse_blif$9290' from module `\cpu'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10455' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$10465'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$10456 = $auto$rtlil.cc:1731:NotGate$10466
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10455' from module `\cpu'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10457' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$10465'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$10458 = $auto$rtlil.cc:1731:NotGate$10466
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10457' from module `\cpu'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10459' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$10465'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$10460 = $auto$rtlil.cc:1731:NotGate$10466
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10459' from module `\cpu'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10461' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$10465'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$10462 = $auto$rtlil.cc:1731:NotGate$10466
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10461' from module `\cpu'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10463' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$10465'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$10464 = $auto$rtlil.cc:1731:NotGate$10466
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10463' from module `\cpu'.
Removed a total of 6 cells.

6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU.
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU'.
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

6.6. Executing OPT_RMDFF pass (remove dff with constant values).

6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU..
Finding unused cells or wires in module \cpu..

6.8. Executing OPT_EXPR pass (perform const folding).

6.9. Finished OPT passes. (There is nothing left to do.)

7. Executing ABC pass (technology mapping using ABC).

7.1. Extracting gate netlist of module `\ALU' to `<abc-temp-dir>/input.blif'..
Extracted 187 gates and 224 wires to a netlist network with 37 inputs and 15 outputs.

7.1.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu035/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        8
ABC RESULTS:           AOI21X1 cells:        7
ABC RESULTS:           AOI22X1 cells:       14
ABC RESULTS:             INVX1 cells:       33
ABC RESULTS:            MUX2X1 cells:        3
ABC RESULTS:           NAND2X1 cells:       53
ABC RESULTS:           NAND3X1 cells:       10
ABC RESULTS:            NOR2X1 cells:       16
ABC RESULTS:           OAI21X1 cells:       71
ABC RESULTS:           OAI22X1 cells:        2
ABC RESULTS:             OR2X2 cells:        3
ABC RESULTS:           XNOR2X1 cells:        3
ABC RESULTS:            XOR2X1 cells:        2
ABC RESULTS:        internal signals:      172
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       15
Removing temp directory.

7.2. Extracting gate netlist of module `\cpu' to `<abc-temp-dir>/input.blif'..
Extracted 1563 gates and 1719 wires to a netlist network with 156 inputs and 179 outputs.

7.2.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu035/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.2.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       42
ABC RESULTS:           AOI21X1 cells:      127
ABC RESULTS:           AOI22X1 cells:       49
ABC RESULTS:             INVX1 cells:      207
ABC RESULTS:            MUX2X1 cells:       17
ABC RESULTS:           NAND2X1 cells:      213
ABC RESULTS:           NAND3X1 cells:      159
ABC RESULTS:            NOR2X1 cells:      250
ABC RESULTS:            NOR3X1 cells:       33
ABC RESULTS:           OAI21X1 cells:      440
ABC RESULTS:           OAI22X1 cells:       58
ABC RESULTS:             OR2X2 cells:       31
ABC RESULTS:           XNOR2X1 cells:        8
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:     1384
ABC RESULTS:           input signals:      156
ABC RESULTS:          output signals:      179
Removing temp directory.

8. Executing FLATTEN pass (flatten design).
Mapping cpu.ALU using ALU.
No more expansions possible.
Deleting now unused module ALU.
Removed 0 unused cells and 1960 unused wires.

9. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port cpu.AB using BUFX2.
Don't map input port cpu.DI: Missing option -inpad.
Mapping port cpu.DO using BUFX2.
Don't map input port cpu.IRQ: Missing option -inpad.
Don't map input port cpu.NMI: Missing option -inpad.
Don't map input port cpu.RDY: Missing option -inpad.
Mapping port cpu.WE using BUFX2.
Don't map input port cpu.clk: Missing option -inpad.
Don't map input port cpu.reset: Missing option -inpad.

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

10.6. Executing OPT_RMDFF pass (remove dff with constant values).

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

10.8. Executing OPT_EXPR pass (perform const folding).

10.9. Finished OPT passes. (There is nothing left to do.)

11. Executing SPLITNETS pass (splitting up multi-bit signals).

12. Executing BLIF backend.

End of script. Logfile hash: 2da17e7246
CPU: user 3.18s system 0.02s, MEM: 51.31 MB total, 21.55 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 21% 22x opt_merge (0 sec), 18% 23x opt_expr (0 sec), ...
Cleaning up output syntax
Cleaning Up blif file syntax
Running blifFanout (iterative)

Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 71 (load 1684.23) from node _924_,
driven by INVX1 with strength 102.797 (fF driven at latency 200)
Top fanout load-to-strength ratio is 16.3841 (latency = 3276.82 ps)
Top input node fanout is 144 (load 5671.86) from node clk.
Warning 1: load of 1694.23 is 2.0295 times greater than strongest gate INVX8
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 946.221 is 8.70604 times greater than strongest gate NOR2X1
196 gates exceed specified minimum load.
99 buffers were added.
65 gates were changed.

Gate counts by drive strength:

	"" gates	In: 6    	Out: 6    	+0
	"1" gates	In: 1914    	Out: 1849    	-65
	"2" gates	In: 109    	Out: 153    	+44

gates resized: 164
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 16 (load 594.878) from node _516_,
driven by NAND2X1 with strength 102.232 (fF driven at latency 200)
Top fanout load-to-strength ratio is 4.68463 (latency = 936.926 ps)
Top input node fanout is 12 (load 160.976) from node clk.
Warning 1: load of 604.878 is 1.463 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 15: load of 194.309 is 1.78781 times greater than strongest gate NOR2X1
Warning 18: load of 246.479 is 1.9811 times greater than strongest gate AOI21X1
Warning 20: load of 276.24 is 2.482 times greater than strongest gate MUX2X1
Warning 30: load of 336.283 is 3.30171 times greater than strongest gate OAI21X1
Warning 64: load of 484.764 is 4.7833 times greater than strongest gate NAND3X1
202 gates exceed specified minimum load.
0 buffers were added.
96 gates were changed.

Gate counts by drive strength:

	"" gates	In: 6    	Out: 6    	+0
	"1" gates	In: 1849    	Out: 1849    	+0
	"2" gates	In: 252    	Out: 158    	-94
	"4" gates	In: 17    	Out: 109    	+92
	"8" gates	In: 4    	Out: 6    	+2

gates resized: 96
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 16 (load 737.305) from node _516_,
driven by NAND2X1 with strength 102.232 (fF driven at latency 200)
Top fanout load-to-strength ratio is 5.22614 (latency = 1045.23 ps)
Top input node fanout is 12 (load 244.841) from node clk.
Warning 1: load of 517.977 is 1.25281 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 747.305 is 1.80748 times greater than strongest gate BUFX4
Warning 48: load of 246.479 is 1.9811 times greater than strongest gate AOI21X1
Warning 50: load of 276.24 is 2.482 times greater than strongest gate MUX2X1
Warning 61: load of 336.283 is 3.30171 times greater than strongest gate OAI21X1
Warning 98: load of 539.643 is 5.32482 times greater than strongest gate NAND3X1
238 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"" gates	In: 6    	Out: 6    	+0
	"1" gates	In: 1849    	Out: 1849    	+0
	"2" gates	In: 158    	Out: 158    	+0
	"4" gates	In: 109    	Out: 109    	+0
	"8" gates	In: 6    	Out: 6    	+0

gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu
Files:
   Verilog: /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu/cpu.rtl.v
   Verilog: /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu/cpu.rtlnopwr.v
   Spice:   /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu/cpu.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
Synthesis script ended on Sun Aug 12 21:07:20 EET 2018
Running blif2cel.tcl
Loaded LEF file (/usr/share/qflow/tech/osu035/osu035_stdcells.lef) for reading...
Loaded BLIF file (/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu/cpu.blif) for reading ...
Loaded CEL file (/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu/cpu.cel) for writing...
1st pass of blif file /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu/cpu.blif. . .
Reading macros from LEF file. . .
Parsing macro AND2X2:  Ports are:
parse_pin
macroname: AND2X2, pinname: A
Port type: INPUT 
A -240 -261 1
parse_pin
macroname: AND2X2, pinname: B
Port type: INPUT 
B -80 -100 1
parse_pin
macroname: AND2X2, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: AND2X2, pinname: Y
Port type: OUTPUT 
Y 179 -680 1
parse_pin
macroname: AND2X2, pinname: vdd
Port type: INOUT 
vdd 80 590 1
Parsing macro AOI21X1:  Ports are:
parse_pin
macroname: AOI21X1, pinname: A
Port type: INPUT 
A -160 -70 1
parse_pin
macroname: AOI21X1, pinname: B
Port type: INPUT 
B -80 -261 1
parse_pin
macroname: AOI21X1, pinname: C
Port type: INPUT 
C 240 -501 1
parse_pin
macroname: AOI21X1, pinname: gnd
Port type: INOUT 
gnd 240 -870 1
parse_pin
macroname: AOI21X1, pinname: Y
Port type: OUTPUT 
Y 80 -680 1
parse_pin
macroname: AOI21X1, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro AOI22X1:  Ports are:
parse_pin
macroname: AOI22X1, pinname: A
Port type: INPUT 
A -240 -70 1
parse_pin
macroname: AOI22X1, pinname: B
Port type: INPUT 
B -160 -261 1
parse_pin
macroname: AOI22X1, pinname: C
Port type: INPUT 
C 320 -61 1
parse_pin
macroname: AOI22X1, pinname: D
Port type: INPUT 
D 140 -180 1
parse_pin
macroname: AOI22X1, pinname: gnd
Port type: INOUT 
gnd 320 -770 1
parse_pin
macroname: AOI22X1, pinname: Y
Port type: OUTPUT 
Y 10 -431 1
parse_pin
macroname: AOI22X1, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro BUFX2:  Ports are:
parse_pin
macroname: BUFX2, pinname: A
Port type: INPUT 
A -160 -140 1
parse_pin
macroname: BUFX2, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: BUFX2, pinname: Y
Port type: OUTPUT 
Y 170 0 1
parse_pin
macroname: BUFX2, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro BUFX4:  Ports are:
parse_pin
macroname: BUFX4, pinname: A
Port type: INPUT 
A -230 -100 1
parse_pin
macroname: BUFX4, pinname: gnd
Port type: INOUT 
gnd 240 -770 1
parse_pin
macroname: BUFX4, pinname: Y
Port type: OUTPUT 
Y 89 -300 1
parse_pin
macroname: BUFX4, pinname: vdd
Port type: INOUT 
vdd 240 570 1
Parsing macro NOR3X1:  Ports are:
parse_pin
macroname: NOR3X1, pinname: A
Port type: INPUT 
A -350 -501 1
parse_pin
macroname: NOR3X1, pinname: B
Port type: INPUT 
B -200 -300 1
parse_pin
macroname: NOR3X1, pinname: C
Port type: INPUT 
C -40 -100 1
parse_pin
macroname: NOR3X1, pinname: gnd
Port type: INOUT 
gnd -80 -890 1
parse_pin
macroname: NOR3X1, pinname: Y
Port type: OUTPUT 
Y -211 -670 1
parse_pin
macroname: NOR3X1, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro DFFPOSX1:  Ports are:
parse_pin
macroname: DFFPOSX1, pinname: Q
Port type: OUTPUT 
Q 580 -420 1
parse_pin
macroname: DFFPOSX1, pinname: CLK
Port type: INPUT 
CLK -500 -280 1
parse_pin
macroname: DFFPOSX1, pinname: D
Port type: INPUT 
D -450 -111 1
parse_pin
macroname: DFFPOSX1, pinname: gnd
Port type: INOUT 
gnd -170 -870 1
parse_pin
macroname: DFFPOSX1, pinname: vdd
Port type: INOUT 
vdd -160 770 1
Parsing macro INVX1:  Ports are:
parse_pin
macroname: INVX1, pinname: A
Port type: INPUT 
A -80 -540 1
parse_pin
macroname: INVX1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: INVX1, pinname: Y
Port type: OUTPUT 
Y 80 0 1
parse_pin
macroname: INVX1, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro INVX2:  Ports are:
parse_pin
macroname: INVX2, pinname: A
Port type: INPUT 
A -80 -340 1
parse_pin
macroname: INVX2, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: INVX2, pinname: Y
Port type: OUTPUT 
Y 80 0 1
parse_pin
macroname: INVX2, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro INVX4:  Ports are:
parse_pin
macroname: INVX4, pinname: A
Port type: INPUT 
A -160 -340 1
parse_pin
macroname: INVX4, pinname: gnd
Port type: INOUT 
gnd 160 -770 1
parse_pin
macroname: INVX4, pinname: Y
Port type: OUTPUT 
Y 0 0 1
parse_pin
macroname: INVX4, pinname: vdd
Port type: INOUT 
vdd 160 570 1
Parsing macro INVX8:  Ports are:
parse_pin
macroname: INVX8, pinname: A
Port type: INPUT 
A -320 -340 1
parse_pin
macroname: INVX8, pinname: gnd
Port type: INOUT 
gnd 0 -770 1
parse_pin
macroname: INVX8, pinname: Y
Port type: OUTPUT 
Y -160 410 1
parse_pin
macroname: INVX8, pinname: vdd
Port type: INOUT 
vdd 0 570 1
Parsing macro NAND2X1:  Ports are:
parse_pin
macroname: NAND2X1, pinname: A
Port type: INPUT 
A -160 -340 1
parse_pin
macroname: NAND2X1, pinname: B
Port type: INPUT 
B 160 140 1
parse_pin
macroname: NAND2X1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: NAND2X1, pinname: Y
Port type: OUTPUT 
Y 100 -680 1
parse_pin
macroname: NAND2X1, pinname: vdd
Port type: INOUT 
vdd 160 770 1
Parsing macro NAND3X1:  Ports are:
parse_pin
macroname: NAND3X1, pinname: A
Port type: INPUT 
A -240 60 1
parse_pin
macroname: NAND3X1, pinname: B
Port type: INPUT 
B -40 -100 1
parse_pin
macroname: NAND3X1, pinname: C
Port type: INPUT 
C 80 260 1
parse_pin
macroname: NAND3X1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: NAND3X1, pinname: Y
Port type: OUTPUT 
Y -80 680 1
parse_pin
macroname: NAND3X1, pinname: vdd
Port type: INOUT 
vdd 80 790 1
Parsing macro NOR2X1:  Ports are:
parse_pin
macroname: NOR2X1, pinname: A
Port type: INPUT 
A -160 -540 1
parse_pin
macroname: NOR2X1, pinname: B
Port type: INPUT 
B 160 -61 1
parse_pin
macroname: NOR2X1, pinname: gnd
Port type: INOUT 
gnd 160 -870 1
parse_pin
macroname: NOR2X1, pinname: Y
Port type: OUTPUT 
Y 0 -300 1
parse_pin
macroname: NOR2X1, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro OAI21X1:  Ports are:
parse_pin
macroname: OAI21X1, pinname: A
Port type: INPUT 
A -160 -330 1
parse_pin
macroname: OAI21X1, pinname: B
Port type: INPUT 
B -80 -140 1
parse_pin
macroname: OAI21X1, pinname: C
Port type: INPUT 
C 160 300 1
parse_pin
macroname: OAI21X1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: OAI21X1, pinname: Y
Port type: OUTPUT 
Y 50 -100 1
parse_pin
macroname: OAI21X1, pinname: vdd
Port type: INOUT 
vdd 179 770 1
Parsing macro OAI22X1:  Ports are:
parse_pin
macroname: OAI22X1, pinname: A
Port type: INPUT 
A -240 -330 1
parse_pin
macroname: OAI22X1, pinname: B
Port type: INPUT 
B -160 -140 1
parse_pin
macroname: OAI22X1, pinname: C
Port type: INPUT 
C 320 -261 1
parse_pin
macroname: OAI22X1, pinname: D
Port type: INPUT 
D 160 -140 1
parse_pin
macroname: OAI22X1, pinname: gnd
Port type: INOUT 
gnd 0 -1000 1
parse_pin
macroname: OAI22X1, pinname: Y
Port type: OUTPUT 
Y 0 -300 1
parse_pin
macroname: OAI22X1, pinname: vdd
Port type: INOUT 
vdd 320 570 1
Parsing macro OR2X2:  Ports are:
parse_pin
macroname: OR2X2, pinname: A
Port type: INPUT 
A -240 -540 1
parse_pin
macroname: OR2X2, pinname: B
Port type: INPUT 
B -40 -221 1
parse_pin
macroname: OR2X2, pinname: gnd
Port type: INOUT 
gnd 80 -790 1
parse_pin
macroname: OR2X2, pinname: Y
Port type: OUTPUT 
Y 240 -100 1
parse_pin
macroname: OR2X2, pinname: vdd
Port type: INOUT 
vdd 0 999 1
Parsing macro XOR2X1:  Ports are:
parse_pin
macroname: XOR2X1, pinname: A
Port type: INPUT 
A -410 -290 1
parse_pin
macroname: XOR2X1, pinname: B
Port type: INPUT 
B 439 -300 1
parse_pin
macroname: XOR2X1, pinname: gnd
Port type: INOUT 
gnd -310 -711 1
parse_pin
macroname: XOR2X1, pinname: Y
Port type: OUTPUT 
Y 0 -700 1
parse_pin
macroname: XOR2X1, pinname: vdd
Port type: INOUT 
vdd -300 640 1
Parsing macro MUX2X1:  Ports are:
parse_pin
macroname: MUX2X1, pinname: A
Port type: INPUT 
A 240 -61 1
parse_pin
macroname: MUX2X1, pinname: B
Port type: INPUT 
B -240 -140 1
parse_pin
macroname: MUX2X1, pinname: S
Port type: INPUT 
S -400 -140 1
parse_pin
macroname: MUX2X1, pinname: gnd
Port type: INOUT 
gnd 280 -730 1
parse_pin
macroname: MUX2X1, pinname: Y
Port type: OUTPUT 
Y 19 500 1
parse_pin
macroname: MUX2X1, pinname: vdd
Port type: INOUT 
vdd 280 570 1
Parsing macro XNOR2X1:  Ports are:
parse_pin
macroname: XNOR2X1, pinname: A
Port type: INPUT 
A -210 -360 1
parse_pin
macroname: XNOR2X1, pinname: B
Port type: INPUT 
B 439 -300 1
parse_pin
macroname: XNOR2X1, pinname: gnd
Port type: INOUT 
gnd -310 -711 1
parse_pin
macroname: XNOR2X1, pinname: Y
Port type: OUTPUT 
Y 50 -500 1
parse_pin
macroname: XNOR2X1, pinname: vdd
Port type: INOUT 
vdd -300 640 1
Parsing macro DFFSR:  Ports are:
parse_pin
macroname: DFFSR, pinname: Q
Port type: OUTPUT 
Q 1520 449 1
parse_pin
macroname: DFFSR, pinname: CLK
Port type: INPUT 
CLK -41 -501 1
parse_pin
macroname: DFFSR, pinname: R
Port type: INPUT 
R -1040 -90 1
parse_pin
macroname: DFFSR, pinname: S
Port type: INPUT 
S -1020 59 1
parse_pin
macroname: DFFSR, pinname: D
Port type: INPUT 
D -400 -340 1
parse_pin
macroname: DFFSR, pinname: gnd
Port type: INOUT 
gnd -400 -870 1
parse_pin
macroname: DFFSR, pinname: vdd
Port type: INOUT 
vdd -1360 770 1
2nd pass of blif file. . .
3rd pass of blif file. . .
Done!
No cpu.cel2 file found for project. . . continuing without pin placement hints
Running GrayWolf placement

twflow version:2.1 date:Mon May 25 21:15:08 EDT 1992
Authors: Bill Swartz, Carl Sechen
         Yale University

syntax version:v1.1 date:Mon May 25 21:11:10 EDT 1992
TimberWolf System Syntax Checker
Authors: Carl Sechen, Kai-Win Lee, Bill Swartz,
         Dahe Chen, and Jimmy Lam
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
Read  800 objects so far...
Read  850 objects so far...
Read  900 objects so far...
Read  950 objects so far...
Read 1000 objects so far...
Read 1050 objects so far...
Read 1100 objects so far...
Read 1150 objects so far...
Read 1200 objects so far...
Read 1250 objects so far...
Read 1300 objects so far...
Read 1350 objects so far...
Read 1400 objects so far...
Read 1450 objects so far...
Read 1500 objects so far...
Read 1550 objects so far...
Read 1600 objects so far...
Read 1650 objects so far...
Read 1700 objects so far...
Read 1750 objects so far...
Read 1800 objects so far...
Read 1850 objects so far...
Read 1900 objects so far...
Read 1950 objects so far...
Read 2000 objects so far...
Read 2050 objects so far...
Read 2100 objects so far...
Read 2150 objects so far...
No syntax errors were found

syntax terminated normally with no errors and 0 warning[s]


----------------------------
Total stdcells     :2128
Total cell width   :1.45e+06
Total cell height  :4.26e+06
Total cell area    :2.90e+09
Total core area    :2.90e+09
Average cell height:2.00e+03


nocut - replacement for Mincut version:v1.0 date:Mon May 25 21:09:40 EDT 1992
TimberWolf System Floorplan Setup Program
Authors: Carl Sechen, Bill Swartz,
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
Read  800 objects so far...
Read  850 objects so far...
Read  900 objects so far...
Read  950 objects so far...
Read 1000 objects so far...
Read 1050 objects so far...
Read 1100 objects so far...
Read 1150 objects so far...
Read 1200 objects so far...
Read 1250 objects so far...
Read 1300 objects so far...
Read 1350 objects so far...
Read 1400 objects so far...
Read 1450 objects so far...
Read 1500 objects so far...
Read 1550 objects so far...
Read 1600 objects so far...
Read 1650 objects so far...
Read 1700 objects so far...
Read 1750 objects so far...
Read 1800 objects so far...
Read 1850 objects so far...
Read 1900 objects so far...
Read 1950 objects so far...
Read 2000 objects so far...
Read 2050 objects so far...
Read 2100 objects so far...
Read 2150 objects so far...
Splitting cpu.cel into cpu.scel and cpu.mcel...
	done!


nocut - replacement for Mincut terminated normally with no errors and 0 warning[s]


TimberWolfMC version:v2.2 date:Mon May 25 21:18:34 EDT 1992
Authors: Carl Sechen, Bill Swartz, Kai-Win Lee
         Dahe Chen, and Jimmy Lam
         Yale University

config version:v1.0 date:Mon May 25 20:57:18 EDT 1992
Row configuration program
    Yale University


config switches:
	Graphics mode on
	config will inherit window



config terminated normally with no errors and 0 warning[s]


TimberWolfMC terminated normally with no errors and 0 warning[s]



TimberWolfSC switches:
	Graphics mode on
	TimberWolfSC will inherit window

TimberWolfSC version:v6.0 date:Mon May 25 21:19:07 EDT 1992
Row-Based Placement and Global Routing Program
Authors: Carl Sechen, Kai-Win Lee, and Bill Swartz,
         Yale University
  0 
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 
 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30 
 31  32  33  34  35  36  37  38  39  40  41  42  43  44  45 
 46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 
 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75 
 76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 
 91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 
106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 
121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 
136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 
151 152 153 154 155 156 157 158 
 block left edge is at -399
 the longest block length is 67360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4

  longest Row is:8   Its length is:66080
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  447
 tracks = 417 at attempts =  1000
 tracks = 404 at attempts =  2000
 tracks = 393 at attempts =  3000
 tracks = 390 at attempts =  4000
 tracks = 387 at attempts =  5000
 tracks = 383 at attempts =  6000
 tracks = 383 at attempts =  7000
 tracks = 383 at attempts =  8000
 tracks = 382 at attempts =  9000
 tracks = 382 at attempts = 10000
 tracks = 381 at attempts = 11000
 tracks = 381 at attempts = 12000
 tracks = 381 at attempts = 13000
 tracks = 381 at attempts = 14000
 tracks = 381 at attempts = 15000
 tracks = 381 at attempts = 16000
 tracks = 381 at attempts = 17000
 tracks = 381 at attempts = 18000
 tracks = 381 at attempts = 19000
 tracks = 381 at attempts = 20000
 tracks = 381 at attempts = 21000
 tracks = 381 at attempts = 22000
 tracks = 381 at attempts = 23000
 tracks = 381 at attempts = 24000
 tracks = 381 at attempts = 25000
 tracks = 381 at attempts = 26000
 tracks = 381 at attempts = 27000
 tracks = 381 at attempts = 28000
 tracks = 381 at attempts = 29000
 tracks = 381 at attempts = 30000
 tracks = 379 at attempts = 31000
 tracks = 379 at attempts = 32000
 tracks = 379 at attempts = 33000
 tracks = 379 at attempts = 34000
 tracks = 379 at attempts = 35000
 tracks = 379 at attempts = 36000
 tracks = 379 at attempts = 37000
 tracks = 379 at attempts = 38000
 tracks = 379 at attempts = 39000
 tracks = 379 at attempts = 40000
 tracks = 379 at attempts = 41000
 tracks = 379 at attempts = 42000
 tracks = 379 at attempts = 43000
 tracks = 379 at attempts = 44000
 tracks = 379 at attempts = 45000
 tracks = 379 at attempts = 46000
 tracks = 379 at attempts = 47000
 tracks = 379 at attempts = 48000
 tracks = 379 at attempts = 49000
 tracks = 379 at attempts = 50000
 tracks = 379 at attempts = 51000
 tracks = 379 at attempts = 52000
 tracks = 379 at attempts = 53000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 67360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4

  longest Row is:8   Its length is:64800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  430
 tracks = 406 at attempts =  1000
 tracks = 398 at attempts =  2000
 tracks = 394 at attempts =  3000
 tracks = 391 at attempts =  4000
 tracks = 388 at attempts =  5000
 tracks = 386 at attempts =  6000
 tracks = 383 at attempts =  7000
 tracks = 383 at attempts =  8000
 tracks = 380 at attempts =  9000
 tracks = 379 at attempts = 10000
 tracks = 378 at attempts = 11000
 tracks = 378 at attempts = 12000
 tracks = 378 at attempts = 13000
 tracks = 378 at attempts = 14000
 tracks = 378 at attempts = 15000
 tracks = 378 at attempts = 16000
 tracks = 378 at attempts = 17000
 tracks = 378 at attempts = 18000
 tracks = 378 at attempts = 19000
 tracks = 378 at attempts = 20000
 tracks = 377 at attempts = 21000
 tracks = 377 at attempts = 22000
 tracks = 377 at attempts = 23000
 tracks = 377 at attempts = 24000
 tracks = 377 at attempts = 25000
 tracks = 377 at attempts = 26000
 tracks = 377 at attempts = 27000
 tracks = 377 at attempts = 28000
 tracks = 377 at attempts = 29000
 tracks = 377 at attempts = 30000
 tracks = 377 at attempts = 31000
 tracks = 377 at attempts = 32000
 tracks = 377 at attempts = 33000
 tracks = 377 at attempts = 34000
 tracks = 377 at attempts = 35000
 tracks = 377 at attempts = 36000
 tracks = 377 at attempts = 37000
 tracks = 377 at attempts = 38000
 tracks = 377 at attempts = 39000
 tracks = 377 at attempts = 40000
 tracks = 377 at attempts = 41000
 tracks = 377 at attempts = 42000
 tracks = 377 at attempts = 43000
 tracks = 377 at attempts = 44000
 tracks = 377 at attempts = 45000
 tracks = 377 at attempts = 46000
 tracks = 377 at attempts = 47000
 tracks = 377 at attempts = 48000
 tracks = 377 at attempts = 49000
 tracks = 377 at attempts = 50000
 tracks = 377 at attempts = 51000
 tracks = 377 at attempts = 52000
 tracks = 377 at attempts = 53000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 67360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3

  longest Row is:8   Its length is:64960
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  426
 tracks = 402 at attempts =  1000
 tracks = 395 at attempts =  2000
 tracks = 387 at attempts =  3000
 tracks = 383 at attempts =  4000
 tracks = 380 at attempts =  5000
 tracks = 379 at attempts =  6000
 tracks = 377 at attempts =  7000
 tracks = 376 at attempts =  8000
 tracks = 376 at attempts =  9000
 tracks = 376 at attempts = 10000
 tracks = 376 at attempts = 11000
 tracks = 376 at attempts = 12000
 tracks = 375 at attempts = 13000
 tracks = 375 at attempts = 14000
 tracks = 374 at attempts = 15000
 tracks = 374 at attempts = 16000
 tracks = 374 at attempts = 17000
 tracks = 374 at attempts = 18000
 tracks = 373 at attempts = 19000
 tracks = 373 at attempts = 20000
 tracks = 373 at attempts = 21000
 tracks = 373 at attempts = 22000
 tracks = 373 at attempts = 23000
 tracks = 373 at attempts = 24000
 tracks = 373 at attempts = 25000
 tracks = 372 at attempts = 26000
 tracks = 372 at attempts = 27000
 tracks = 372 at attempts = 28000
 tracks = 372 at attempts = 29000
 tracks = 372 at attempts = 30000
 tracks = 372 at attempts = 31000
 tracks = 372 at attempts = 32000
 tracks = 372 at attempts = 33000
 tracks = 372 at attempts = 34000
 tracks = 372 at attempts = 35000
 tracks = 372 at attempts = 36000
 tracks = 372 at attempts = 37000
 tracks = 372 at attempts = 38000
 tracks = 372 at attempts = 39000
 tracks = 372 at attempts = 40000
 tracks = 372 at attempts = 41000
 tracks = 372 at attempts = 42000
 tracks = 372 at attempts = 43000
 tracks = 372 at attempts = 44000
 tracks = 372 at attempts = 45000
 tracks = 372 at attempts = 46000
 tracks = 372 at attempts = 47000
 tracks = 372 at attempts = 48000
 tracks = 372 at attempts = 49000
 tracks = 372 at attempts = 50000
 tracks = 372 at attempts = 51000
 tracks = 372 at attempts = 52000
 tracks = 372 at attempts = 53000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 67360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:63200
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  466
 tracks = 463 at attempts =  1000
 tracks = 463 at attempts =  2000
 tracks = 463 at attempts =  3000
 tracks = 463 at attempts =  4000
 tracks = 463 at attempts =  5000
 tracks = 463 at attempts =  6000
 tracks = 463 at attempts =  7000
 tracks = 463 at attempts =  8000
 tracks = 463 at attempts =  9000
 tracks = 463 at attempts = 10000
 tracks = 463 at attempts = 11000
 tracks = 463 at attempts = 12000
 tracks = 463 at attempts = 13000
 tracks = 463 at attempts = 14000
 tracks = 463 at attempts = 15000
 tracks = 463 at attempts = 16000
 tracks = 463 at attempts = 17000
 tracks = 463 at attempts = 18000
 tracks = 463 at attempts = 19000
 tracks = 463 at attempts = 20000
 tracks = 463 at attempts = 21000
 tracks = 463 at attempts = 22000
 tracks = 463 at attempts = 23000
 tracks = 463 at attempts = 24000
 tracks = 463 at attempts = 25000
 tracks = 463 at attempts = 26000
 tracks = 463 at attempts = 27000
 tracks = 463 at attempts = 28000
 tracks = 463 at attempts = 29000
 tracks = 463 at attempts = 30000
 tracks = 463 at attempts = 31000
 tracks = 463 at attempts = 32000
 tracks = 463 at attempts = 33000
 tracks = 463 at attempts = 34000
 tracks = 463 at attempts = 35000
 tracks = 463 at attempts = 36000
 tracks = 463 at attempts = 37000
 tracks = 463 at attempts = 38000
 tracks = 463 at attempts = 39000
 tracks = 463 at attempts = 40000
 tracks = 463 at attempts = 41000
 tracks = 463 at attempts = 42000
 tracks = 463 at attempts = 43000
 tracks = 463 at attempts = 44000
 tracks = 463 at attempts = 45000
 tracks = 463 at attempts = 46000
 tracks = 463 at attempts = 47000
 tracks = 463 at attempts = 48000
 tracks = 463 at attempts = 49000
 tracks = 463 at attempts = 50000
 tracks = 463 at attempts = 51000
 tracks = 463 at attempts = 52000
 tracks = 463 at attempts = 53000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 67360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3

  longest Row is:8   Its length is:64800
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  432
 tracks = 407 at attempts =  1000
 tracks = 397 at attempts =  2000
 tracks = 390 at attempts =  3000
 tracks = 388 at attempts =  4000
 tracks = 387 at attempts =  5000
 tracks = 385 at attempts =  6000
 tracks = 385 at attempts =  7000
 tracks = 383 at attempts =  8000
 tracks = 383 at attempts =  9000
 tracks = 381 at attempts = 10000
 tracks = 380 at attempts = 11000
 tracks = 380 at attempts = 12000
 tracks = 379 at attempts = 13000
 tracks = 379 at attempts = 14000
 tracks = 378 at attempts = 15000
 tracks = 378 at attempts = 16000
 tracks = 378 at attempts = 17000
 tracks = 378 at attempts = 18000
 tracks = 378 at attempts = 19000
 tracks = 378 at attempts = 20000
 tracks = 378 at attempts = 21000
 tracks = 378 at attempts = 22000
 tracks = 378 at attempts = 23000
 tracks = 378 at attempts = 24000
 tracks = 378 at attempts = 25000
 tracks = 378 at attempts = 26000
 tracks = 378 at attempts = 27000
 tracks = 378 at attempts = 28000
 tracks = 378 at attempts = 29000
 tracks = 378 at attempts = 30000
 tracks = 378 at attempts = 31000
 tracks = 378 at attempts = 32000
 tracks = 378 at attempts = 33000
 tracks = 378 at attempts = 34000
 tracks = 378 at attempts = 35000
 tracks = 378 at attempts = 36000
 tracks = 378 at attempts = 37000
 tracks = 378 at attempts = 38000
 tracks = 378 at attempts = 39000
 tracks = 378 at attempts = 40000
 tracks = 378 at attempts = 41000
 tracks = 378 at attempts = 42000
 tracks = 378 at attempts = 43000
 tracks = 378 at attempts = 44000
 tracks = 378 at attempts = 45000
 tracks = 378 at attempts = 46000
 tracks = 378 at attempts = 47000
 tracks = 378 at attempts = 48000
 tracks = 378 at attempts = 49000
 tracks = 378 at attempts = 50000
 tracks = 378 at attempts = 51000
 tracks = 378 at attempts = 52000
 tracks = 378 at attempts = 53000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 67360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4
 ITERATION  5

  longest Row is:8   Its length is:65440
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  423
 tracks = 402 at attempts =  1000
 tracks = 394 at attempts =  2000
 tracks = 388 at attempts =  3000
 tracks = 388 at attempts =  4000
 tracks = 387 at attempts =  5000
 tracks = 385 at attempts =  6000
 tracks = 385 at attempts =  7000
 tracks = 384 at attempts =  8000
 tracks = 384 at attempts =  9000
 tracks = 384 at attempts = 10000
 tracks = 384 at attempts = 11000
 tracks = 384 at attempts = 12000
 tracks = 383 at attempts = 13000
 tracks = 383 at attempts = 14000
 tracks = 383 at attempts = 15000
 tracks = 382 at attempts = 16000
 tracks = 382 at attempts = 17000
 tracks = 382 at attempts = 18000
 tracks = 382 at attempts = 19000
 tracks = 382 at attempts = 20000
 tracks = 382 at attempts = 21000
 tracks = 382 at attempts = 22000
 tracks = 382 at attempts = 23000
 tracks = 382 at attempts = 24000
 tracks = 382 at attempts = 25000
 tracks = 382 at attempts = 26000
 tracks = 382 at attempts = 27000
 tracks = 382 at attempts = 28000
 tracks = 382 at attempts = 29000
 tracks = 382 at attempts = 30000
 tracks = 382 at attempts = 31000
 tracks = 382 at attempts = 32000
 tracks = 382 at attempts = 33000
 tracks = 382 at attempts = 34000
 tracks = 382 at attempts = 35000
 tracks = 382 at attempts = 36000
 tracks = 382 at attempts = 37000
 tracks = 382 at attempts = 38000
 tracks = 382 at attempts = 39000
 tracks = 382 at attempts = 40000
 tracks = 382 at attempts = 41000
 tracks = 382 at attempts = 42000
 tracks = 382 at attempts = 43000
 tracks = 382 at attempts = 44000
 tracks = 382 at attempts = 45000
 tracks = 382 at attempts = 46000
 tracks = 382 at attempts = 47000
 tracks = 382 at attempts = 48000
 tracks = 382 at attempts = 49000
 tracks = 382 at attempts = 50000
 tracks = 382 at attempts = 51000
 tracks = 381 at attempts = 52000
 tracks = 381 at attempts = 53000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 67360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4

  longest Row is:8   Its length is:64960
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  422
 tracks = 397 at attempts =  1000
 tracks = 388 at attempts =  2000
 tracks = 379 at attempts =  3000
 tracks = 376 at attempts =  4000
 tracks = 376 at attempts =  5000
 tracks = 373 at attempts =  6000
 tracks = 371 at attempts =  7000
 tracks = 371 at attempts =  8000
 tracks = 370 at attempts =  9000
 tracks = 370 at attempts = 10000
 tracks = 370 at attempts = 11000
 tracks = 370 at attempts = 12000
 tracks = 370 at attempts = 13000
 tracks = 370 at attempts = 14000
 tracks = 370 at attempts = 15000
 tracks = 370 at attempts = 16000
 tracks = 370 at attempts = 17000
 tracks = 370 at attempts = 18000
 tracks = 370 at attempts = 19000
 tracks = 370 at attempts = 20000
 tracks = 370 at attempts = 21000
 tracks = 370 at attempts = 22000
 tracks = 370 at attempts = 23000
 tracks = 370 at attempts = 24000
 tracks = 370 at attempts = 25000
 tracks = 370 at attempts = 26000
 tracks = 370 at attempts = 27000
 tracks = 370 at attempts = 28000
 tracks = 370 at attempts = 29000
 tracks = 370 at attempts = 30000
 tracks = 370 at attempts = 31000
 tracks = 370 at attempts = 32000
 tracks = 370 at attempts = 33000
 tracks = 370 at attempts = 34000
 tracks = 370 at attempts = 35000
 tracks = 370 at attempts = 36000
 tracks = 370 at attempts = 37000
 tracks = 370 at attempts = 38000
 tracks = 370 at attempts = 39000
 tracks = 370 at attempts = 40000
 tracks = 370 at attempts = 41000
 tracks = 370 at attempts = 42000
 tracks = 370 at attempts = 43000
 tracks = 370 at attempts = 44000
 tracks = 370 at attempts = 45000
 tracks = 370 at attempts = 46000
 tracks = 370 at attempts = 47000
 tracks = 370 at attempts = 48000
 tracks = 370 at attempts = 49000
 tracks = 370 at attempts = 50000
 tracks = 370 at attempts = 51000
 tracks = 370 at attempts = 52000
 tracks = 370 at attempts = 53000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 67360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:63200
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  465
 tracks = 464 at attempts =  1000
 tracks = 464 at attempts =  2000
 tracks = 464 at attempts =  3000
 tracks = 463 at attempts =  4000
 tracks = 463 at attempts =  5000
 tracks = 463 at attempts =  6000
 tracks = 463 at attempts =  7000
 tracks = 463 at attempts =  8000
 tracks = 463 at attempts =  9000
 tracks = 463 at attempts = 10000
 tracks = 463 at attempts = 11000
 tracks = 463 at attempts = 12000
 tracks = 463 at attempts = 13000
 tracks = 463 at attempts = 14000
 tracks = 463 at attempts = 15000
 tracks = 463 at attempts = 16000
 tracks = 463 at attempts = 17000
 tracks = 463 at attempts = 18000
 tracks = 463 at attempts = 19000
 tracks = 463 at attempts = 20000
 tracks = 463 at attempts = 21000
 tracks = 463 at attempts = 22000
 tracks = 463 at attempts = 23000
 tracks = 463 at attempts = 24000
 tracks = 463 at attempts = 25000
 tracks = 463 at attempts = 26000
 tracks = 463 at attempts = 27000
 tracks = 463 at attempts = 28000
 tracks = 463 at attempts = 29000
 tracks = 463 at attempts = 30000
 tracks = 463 at attempts = 31000
 tracks = 463 at attempts = 32000
 tracks = 463 at attempts = 33000
 tracks = 463 at attempts = 34000
 tracks = 463 at attempts = 35000
 tracks = 463 at attempts = 36000
 tracks = 463 at attempts = 37000
 tracks = 463 at attempts = 38000
 tracks = 463 at attempts = 39000
 tracks = 463 at attempts = 40000
 tracks = 463 at attempts = 41000
 tracks = 463 at attempts = 42000
 tracks = 463 at attempts = 43000
 tracks = 463 at attempts = 44000
 tracks = 463 at attempts = 45000
 tracks = 463 at attempts = 46000
 tracks = 463 at attempts = 47000
 tracks = 463 at attempts = 48000
 tracks = 463 at attempts = 49000
 tracks = 463 at attempts = 50000
 tracks = 463 at attempts = 51000
 tracks = 463 at attempts = 52000
 tracks = 463 at attempts = 53000
 removing redundant feed-through pins
 the connectivity of all the nets is verified


***********************************************
*ACTUAL* FINAL NUMBER OF ROUTING TRACKS: 370
***********************************************


TimberWolfSC terminated normally with no errors and 0 warning[s]


twflow terminated normally with no errors and 0 warning[s]

Running getfillcell.tcl
Using cell FILL for fill
Running place2def.tcl
Limits: xbot = -399 ybot = -530.0 xtop = 63150.0 ytop = 46130.0
Core values: 80.0 100 63280.0 46100
Offsets: 80.0 100
4 routing layers
234 horizontal tracks from -400.0 to 46400.0 step 200 (M1, M3, ...)
398 vertical tracks from 0.0 to 63680.0 step 160.0 (M2, M4, ...)
Done with place2def.tcl
Running addspacers.tcl  cpu /usr/share/qflow/tech/osu035/osu035_stdcells.lef FILL
Running addspacers.tcl
Reading FILL macros from LEF file.
Reading DEF file cpu.def. . .
Number of rows is 23
Longest row has width 632.8 um
Analysis of DEF file:
Number of components = 2128
New number of components = 2161
Number of rows = 23
Done with addspacers.tcl
Running blifanno.tcl
Reading DEF file cpu.def. . .
Done with blifanno.tcl

Generating RTL verilog and SPICE netlist file in directory
   /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu
Files:
   Verilog: /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu/cpu.rtl.v
   Verilog: /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu/cpu.rtlnopwr.v
   Spice:   /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/cpu/cpu.spc

Running blif2Verilog.
Running blif2BSpice.
Placement script ended on Sun Aug 12 21:08:04 EET 2018
