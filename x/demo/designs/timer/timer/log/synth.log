Qflow synthesis logfile created on Tue Aug 14 15:19:19 EET 2018
Running yosys for verilog parsing and synthesis

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2018  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7+632 (git sha1 2353d28f, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `timer.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v' to AST representation.
Generating RTLIL representation for module `\timer'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \timer

3.1.2. Analyzing design hierarchy..
Top module:  \timer
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:341$98'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:287$95'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:255$86'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:237$84'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:156$58'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:303$30'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:275$28'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:266$24'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:227$14'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:141$8'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:125$2'.
Found async reset \RST_I in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:119$1'.

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:341$98'.
     1/1: $0\TOPULSE_O[0:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:287$95'.
     1/1: $0\reg_08_data[15:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:255$86'.
     1/1: $0\reg_stop[0:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:237$84'.
     1/1: $0\reg_run[0:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:156$58'.
     1/2: $0\internal_counter[15:0]
     2/2: $0\status[1:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:303$30'.
     1/3: $0\s_ack_pre[0:0]
     2/3: $0\s_ack_2dly[0:0]
     3/3: $0\s_ack_dly[0:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:275$28'.
     1/1: $0\reg_04_data[1:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:266$24'.
     1/1: $0\reg_start[0:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:227$14'.
     1/1: $0\reg_to[0:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:141$8'.
     1/2: $0\reg_rd[0:0]
     2/2: $0\reg_wr[0:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:125$2'.
     1/4: $0\dw0c_cs[0:0]
     2/4: $0\dw08_cs[0:0]
     3/4: $0\dw04_cs[0:0]
     4/4: $0\dw00_cs[0:0]
Creating decoders for process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:119$1'.
     1/1: $0\latch_s_data[31:0]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\timer.\TOPULSE_O' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:341$98'.
  created $adff cell `$procdff$196' with positive edge clock and positive level reset.
Creating register for signal `\timer.\reg_08_data' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:287$95'.
  created $adff cell `$procdff$197' with positive edge clock and positive level reset.
Creating register for signal `\timer.\reg_stop' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:255$86'.
  created $adff cell `$procdff$198' with positive edge clock and positive level reset.
Creating register for signal `\timer.\reg_run' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:237$84'.
  created $adff cell `$procdff$199' with positive edge clock and positive level reset.
Creating register for signal `\timer.\status' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:156$58'.
  created $adff cell `$procdff$200' with positive edge clock and positive level reset.
Creating register for signal `\timer.\internal_counter' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:156$58'.
  created $adff cell `$procdff$201' with positive edge clock and positive level reset.
Creating register for signal `\timer.\s_ack_dly' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:303$30'.
  created $adff cell `$procdff$202' with positive edge clock and positive level reset.
Creating register for signal `\timer.\s_ack_2dly' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:303$30'.
  created $adff cell `$procdff$203' with positive edge clock and positive level reset.
Creating register for signal `\timer.\s_ack_pre' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:303$30'.
  created $adff cell `$procdff$204' with positive edge clock and positive level reset.
Creating register for signal `\timer.\reg_04_data' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:275$28'.
  created $adff cell `$procdff$205' with positive edge clock and positive level reset.
Creating register for signal `\timer.\reg_start' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:266$24'.
  created $adff cell `$procdff$206' with positive edge clock and positive level reset.
Creating register for signal `\timer.\reg_to' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:227$14'.
  created $adff cell `$procdff$207' with positive edge clock and positive level reset.
Creating register for signal `\timer.\reg_wr' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:141$8'.
  created $adff cell `$procdff$208' with positive edge clock and positive level reset.
Creating register for signal `\timer.\reg_rd' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:141$8'.
  created $adff cell `$procdff$209' with positive edge clock and positive level reset.
Creating register for signal `\timer.\dw00_cs' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:125$2'.
  created $adff cell `$procdff$210' with positive edge clock and positive level reset.
Creating register for signal `\timer.\dw04_cs' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:125$2'.
  created $adff cell `$procdff$211' with positive edge clock and positive level reset.
Creating register for signal `\timer.\dw08_cs' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:125$2'.
  created $adff cell `$procdff$212' with positive edge clock and positive level reset.
Creating register for signal `\timer.\dw0c_cs' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:125$2'.
  created $adff cell `$procdff$213' with positive edge clock and positive level reset.
Creating register for signal `\timer.\latch_s_data' using process `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:119$1'.
  created $adff cell `$procdff$214' with positive edge clock and positive level reset.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:341$98'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:341$98'.
Found and cleaned up 1 empty switch in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:287$95'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:287$95'.
Found and cleaned up 3 empty switches in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:255$86'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:255$86'.
Found and cleaned up 2 empty switches in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:237$84'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:237$84'.
Found and cleaned up 11 empty switches in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:156$58'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:156$58'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:303$30'.
Found and cleaned up 1 empty switch in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:275$28'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:275$28'.
Found and cleaned up 1 empty switch in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:266$24'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:266$24'.
Found and cleaned up 2 empty switches in `\timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:227$14'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:227$14'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:141$8'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:125$2'.
Removing empty process `timer.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:119$1'.
Cleaned up 22 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Replacing $logic_or cell `$logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$21' (and_or_buffer) in module `\timer' with constant driver `$logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$21_Y = \reg_run'.
Replacing $mux cell `$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:248$23' (1) in module `\timer' with constant driver `$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:248$23_Y = { \reg_run \reg_to }'.
Replacing $mux cell `$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:168$61' (1) in module `\timer' with constant driver `$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:168$61_Y = \latch_s_data'.
Replacing $mux cell `$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:183$70' (1) in module `\timer' with constant driver `$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:183$70_Y = \latch_s_data'.
Replacing $mux cell `$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:204$83' (1) in module `\timer' with constant driver `$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:204$83_Y = \latch_s_data'.
Replacing $logic_and cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:290$97' (and_or_buffer) in module `\timer' with constant driver `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:290$97_Y = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:290$96_Y'.
Replacing $logic_or cell `$logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$103' (and_or_buffer) in module `\timer' with constant driver `$logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$103_Y = \reg_run'.
Optimizing away select inverter for $mux cell `$procmux$136' in module `timer'.
Replacing $eq cell `$procmux$154_CMP0' in module `timer' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$163' in module `timer'.
Optimizing away select inverter for $mux cell `$procmux$165' in module `timer'.
Replacing $eq cell `$procmux$183_CMP0' in module `timer' with $logic_not.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
  removing buffer cell `$extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:204$82': $extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:204$82_Y = \reg_period
  removing buffer cell `$extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:183$69': $extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:183$69_Y = \reg_period
  removing buffer cell `$extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:168$60': $extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:168$60_Y = \reg_period
  removing buffer cell `$extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$56': $extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$56_Y = \read_00_data
  removing buffer cell `$extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$54': $extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$54_Y = \read_04_data
  removing buffer cell `$extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$52': $extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$52_Y = \read_08_data
  removing buffer cell `$extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$49': $extend$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$49_Y = \read_0c_data
  removing unused `$logic_not' cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:150$11'.
  removing unused `$logic_and' cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:150$12'.
  removing unused `$logic_and' cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:150$13'.
  removing unused `$logic_not' cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:187$76'.
  removing unused `$logic_not' cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:189$77'.
  removing unused `$adff' cell `$procdff$209'.
  removing unused non-port wire \reg_rd.
  removed 68 unused temporary wires.
Removed 6 unused cells and 68 unused wires.

3.5. Executing CHECK pass (checking for obvious problems).
checking module timer..
Warning: Wire timer.\RSTREQ_O is used but has no driver.
found and reported 1 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
  Cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:181$68' is identical to cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59'.
    Redirecting output \Y: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:181$68_Y = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59_Y
    Removing $logic_and cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:181$68' from module `\timer'.
  Cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:202$81' is identical to cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59'.
    Redirecting output \Y: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:202$81_Y = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59_Y
    Removing $logic_and cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:202$81' from module `\timer'.
  Cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:269$25' is identical to cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:258$87'.
    Redirecting output \Y: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:269$25_Y = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:258$87_Y
    Removing $logic_and cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:269$25' from module `\timer'.
  Cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:278$29' is identical to cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:258$87'.
    Redirecting output \Y: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:278$29_Y = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:258$87_Y
    Removing $logic_and cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:278$29' from module `\timer'.
  Cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:290$96' is identical to cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59'.
    Redirecting output \Y: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:290$96_Y = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59_Y
    Removing $logic_and cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:290$96' from module `\timer'.
  Cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:200$79' is identical to cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$62'.
    Redirecting output \Y: $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:200$79_Y = $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$62_Y
    Removing $logic_not cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:200$79' from module `\timer'.
  Cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:260$90' is identical to cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$62'.
    Redirecting output \Y: $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:260$90_Y = $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$62_Y
    Removing $logic_not cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:260$90' from module `\timer'.
  Cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:319$37' is identical to cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:318$34'.
    Redirecting output \Y: $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:319$37_Y = $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:318$34_Y
    Removing $logic_not cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:319$37' from module `\timer'.
  Cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$44' is identical to cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$40'.
    Redirecting output \Y: $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$44_Y = $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$40_Y
    Removing $logic_not cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$44' from module `\timer'.
  Cell `$procmux$160_CMP0' is identical to cell `$procmux$134_CMP0'.
    Redirecting output \Y: $procmux$160_CMP = $procmux$134_CMP
    Removing $eq cell `$procmux$160_CMP0' from module `\timer'.
  Cell `$procmux$176_CMP0' is identical to cell `$procmux$144_CMP0'.
    Redirecting output \Y: $procmux$176_CMP = $procmux$144_CMP
    Removing $eq cell `$procmux$176_CMP0' from module `\timer'.
  Cell `$procmux$183_CMP0' is identical to cell `$procmux$154_CMP0'.
    Redirecting output \Y: $procmux$183_CMP = $procmux$154_CMP
    Removing $logic_not cell `$procmux$183_CMP0' from module `\timer'.
  Cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$71' is identical to cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66'.
    Redirecting output \Y: $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$71_Y = $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66_Y
    Removing $reduce_or cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$71' from module `\timer'.
  Cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:187$75' is identical to cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66'.
    Redirecting output \Y: $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:187$75_Y = $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66_Y
    Removing $reduce_or cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:187$75' from module `\timer'.
  Cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$18' is identical to cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66'.
    Redirecting output \Y: $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$18_Y = $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66_Y
    Removing $reduce_or cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$18' from module `\timer'.
  Cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$99' is identical to cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66'.
    Redirecting output \Y: $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$99_Y = $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66_Y
    Removing $reduce_or cell `$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$99' from module `\timer'.
  Cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:200$80' is identical to cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$63'.
    Redirecting output \Y: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:200$80_Y = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$63_Y
    Removing $logic_and cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:200$80' from module `\timer'.
  Cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$19' is identical to cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$72'.
    Redirecting output \Y: $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$19_Y = $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$72_Y
    Removing $logic_not cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$19' from module `\timer'.
  Cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$100' is identical to cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$72'.
    Redirecting output \Y: $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$100_Y = $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$72_Y
    Removing $logic_not cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$100' from module `\timer'.
Removed a total of 19 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \timer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$106 (pure)
    Root of a mux tree: $procmux$109 (pure)
    Root of a mux tree: $procmux$118 (pure)
    Root of a mux tree: $procmux$124 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$159 (pure)
    Root of a mux tree: $procmux$185 (pure)
    Root of a mux tree: $procmux$188 (pure)
    Root of a mux tree: $procmux$194 (pure)
    Root of a mux tree: $ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$57 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \timer.
    New input vector for $reduce_or cell $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66: { \internal_counter [0] \internal_counter [1] \internal_counter [2] \internal_counter [3] \internal_counter [4] \internal_counter [5] \internal_counter [6] \internal_counter [7] \internal_counter [8] \internal_counter [9] \internal_counter [10] \internal_counter [11] \internal_counter [12] \internal_counter [13] \internal_counter [14] \internal_counter [15] }
    New input vector for $reduce_or cell $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:173$64: { \reg_08_data [0] \reg_08_data [1] \reg_08_data [2] \reg_08_data [3] \reg_08_data [4] \reg_08_data [5] \reg_08_data [6] \reg_08_data [7] \reg_08_data [8] \reg_08_data [9] \reg_08_data [10] \reg_08_data [11] \reg_08_data [12] \reg_08_data [13] \reg_08_data [14] \reg_08_data [15] }
    New input vector for $reduce_or cell $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:135$3: { \S_ADR_I [2] \S_ADR_I [3] \S_ADR_I [4] \S_ADR_I [5] }
  Optimizing cells in module \timer.
Performed a total of 3 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
  Cell `$procmux$178' is identical to cell `$procmux$157'.
    Redirecting output \Y: $procmux$178_Y = $procmux$157_Y
    Removing $mux cell `$procmux$178' from module `\timer'.
Removed a total of 1 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
  removed 20 unused temporary wires.
Removed 6 unused cells and 88 unused wires.

3.6.8. Executing OPT_EXPR pass (perform const folding).

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \timer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$106 (pure)
    Root of a mux tree: $procmux$109 (pure)
    Root of a mux tree: $procmux$118 (pure)
    Root of a mux tree: $procmux$124 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$157
    Root of a mux tree: $procmux$159 (pure)
    Root of a mux tree: $procmux$185 (pure)
    Root of a mux tree: $procmux$188 (pure)
    Root of a mux tree: $procmux$194 (pure)
    Root of a mux tree: $ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$57 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \timer.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
Removed 6 unused cells and 88 unused wires.

3.6.15. Executing OPT_EXPR pass (perform const folding).

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 4) from port B of cell timer.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:136$5 ($eq).
Removed top 2 bits (of 4) from port B of cell timer.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:137$6 ($eq).
Removed top 2 bits (of 4) from port B of cell timer.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:138$7 ($eq).
Removed top 31 bits (of 32) from port B of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$41 ($and).
Removed top 31 bits (of 32) from port Y of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$41 ($and).
Removed top 31 bits (of 32) from port A of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$42 ($and).
Removed top 31 bits (of 32) from port Y of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$42 ($and).
Removed top 31 bits (of 32) from port A of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$43 ($and).
Removed top 31 bits (of 32) from port B of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$43 ($and).
Removed top 31 bits (of 32) from port Y of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$43 ($and).
Removed top 31 bits (of 32) from port B of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$45 ($and).
Removed top 31 bits (of 32) from port Y of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$45 ($and).
Removed top 31 bits (of 32) from port A of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$46 ($and).
Removed top 31 bits (of 32) from port Y of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$46 ($and).
Removed top 31 bits (of 32) from port A of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$47 ($and).
Removed top 31 bits (of 32) from port B of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$47 ($and).
Removed top 31 bits (of 32) from port Y of cell timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$47 ($and).
Removed top 16 bits (of 32) from mux cell timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$50 ($mux).
Removed top 16 bits (of 32) from mux cell timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$53 ($mux).
Removed top 16 bits (of 32) from mux cell timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$55 ($mux).
Removed top 16 bits (of 32) from mux cell timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$57 ($mux).
Removed top 31 bits (of 32) from port B of cell timer.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:174$65 ($sub).
Removed top 16 bits (of 32) from port Y of cell timer.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:174$65 ($sub).
Removed top 31 bits (of 32) from port B of cell timer.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:196$78 ($sub).
Removed top 16 bits (of 32) from port Y of cell timer.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:196$78 ($sub).
Removed top 1 bits (of 2) from port B of cell timer.$nex$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:245$85 ($nex).
Removed top 1 bits (of 2) from port B of cell timer.$procmux$144_CMP0 ($eq).
Removed top 31 bits (of 32) from wire timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$41_Y.
Removed top 31 bits (of 32) from wire timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$43_Y.
Removed top 31 bits (of 32) from wire timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$46_Y.
Removed top 31 bits (of 32) from wire timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$40_Y.
Removed top 16 bits (of 32) from wire timer.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:174$65_Y.
Removed top 16 bits (of 32) from wire timer.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:196$78_Y.
Removed top 16 bits (of 32) from wire timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$50_Y.
Removed top 16 bits (of 32) from wire timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$53_Y.
Removed top 16 bits (of 32) from wire timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$55_Y.

3.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module timer:
  creating $macc model for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:174$65 ($sub).
  creating $macc model for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:196$78 ($sub).
  creating $alu model for $macc $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:196$78.
  creating $alu model for $macc $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:174$65.
  creating $alu cell for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:174$65: $auto$alumacc.cc:474:replace_alu$224
  creating $alu cell for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:196$78: $auto$alumacc.cc:474:replace_alu$227
  created 2 $alu and 0 $macc cells.

3.9. Executing SHARE pass (SAT-based resource sharing).

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).
Replacing $and cell `$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$43' (and_or_buffer) in module `\timer' with constant driver `$auto$wreduce.cc:347:run$216 [0] = $and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$42_Y [0]'.
Replacing $and cell `$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$47' (and_or_buffer) in module `\timer' with constant driver `$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$47_Y [0] = $auto$wreduce.cc:347:run$217 [0]'.
Replacing $reduce_bool cell `$reduce_bool$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$48' (and_or_buffer) in module `\timer' with constant driver `$reduce_bool$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$48_Y = $auto$wreduce.cc:347:run$217 [0]'.
Replacing $reduce_bool cell `$reduce_bool$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$51' (and_or_buffer) in module `\timer' with constant driver `$reduce_bool$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$51_Y = $and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$42_Y [0]'.

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
  Cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$40' is identical to cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:318$34'.
    Redirecting output \Y: $auto$wreduce.cc:347:run$218 [0] = $logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:318$34_Y
    Removing $logic_not cell `$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$40' from module `\timer'.
Removed a total of 1 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \timer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$106 (pure)
    Root of a mux tree: $procmux$109 (pure)
    Root of a mux tree: $procmux$118 (pure)
    Root of a mux tree: $procmux$124 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$157
    Root of a mux tree: $procmux$159 (pure)
    Root of a mux tree: $procmux$185 (pure)
    Root of a mux tree: $procmux$188 (pure)
    Root of a mux tree: $procmux$194 (pure)
    Root of a mux tree: $ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$57 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \timer.
Performed a total of 0 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
Removed a total of 0 cells.

3.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
  removed 14 unused temporary wires.
Removed 6 unused cells and 102 unused wires.

3.10.8. Executing OPT_EXPR pass (perform const folding).

3.10.9. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register timer.status.

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\status' from module `\timer'.
  found $adff cell for state register: $procdff$200
  root of input selection tree: $0\status[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: $procmux$134_CMP
  found ctrl input: $procmux$144_CMP
  found ctrl input: $procmux$154_CMP
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$63_Y
  found state code: 2'01
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$67_Y
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59_Y
  found ctrl input: $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66_Y
  found ctrl input: \reg_04_data [1]
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$74_Y
  found state code: 2'10
  found ctrl output: $nex$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:245$85_Y
  found ctrl output: $procmux$134_CMP
  found ctrl output: $procmux$144_CMP
  found ctrl output: $procmux$154_CMP
  ctrl inputs: { $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$74_Y $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$67_Y $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66_Y $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$63_Y $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59_Y \reg_04_data [1] }
  ctrl outputs: { $procmux$154_CMP $procmux$144_CMP $procmux$134_CMP $nex$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:245$85_Y $0\status[1:0] }
  transition:       2'00 6'---00- ->       2'00 6'100000
  transition:       2'00 6'---10- ->       2'01 6'100001
  transition:       2'00 6'----1- ->       2'00 6'100000
  transition:       2'10 6'---0-- ->       2'10 6'001110
  transition:       2'10 6'---1-- ->       2'01 6'001101
  transition:       2'01 6'-00-00 ->       2'00 6'010100
  transition:       2'01 6'-00-01 ->       2'01 6'010101
  transition:       2'01 6'-01-0- ->       2'01 6'010101
  transition:       2'01 6'00--1- ->       2'01 6'010101
  transition:       2'01 6'10--1- ->       2'00 6'010100
  transition:       2'01 6'-1---- ->       2'10 6'010110

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\status$230' from module `\timer'.

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
  removing unused `$nex' cell `$nex$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:245$85'.
  removing unused `$eq' cell `$procmux$134_CMP0'.
  removing unused `$eq' cell `$procmux$144_CMP0'.
  removing unused `$logic_not' cell `$procmux$154_CMP0'.
  removing unused `$mux' cell `$procmux$157'.
  removing unused `$pmux' cell `$procmux$159'.
  removing unused `$mux' cell `$procmux$163'.
  removing unused `$mux' cell `$procmux$165'.
  removing unused `$mux' cell `$procmux$169'.
  removing unused `$mux' cell `$procmux$171'.
  removing unused `$mux' cell `$procmux$174'.
  removing unused `$mux' cell `$procmux$181'.
  removing unused `$adff' cell `$procdff$200'.
  removed 13 unused temporary wires.
Removed 19 unused cells and 115 unused wires.

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\status$230' from module `\timer'.
  Removing unused output signal $0\status[1:0] [0].
  Removing unused output signal $0\status[1:0] [1].

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\status$230' from module `\timer' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\status$230' from module `\timer':
-------------------------------------

  Information on FSM $fsm$\status$230 (\status):

  Number of input signals:    6
  Number of output signals:   4
  Number of state bits:       3

  Input signals:
    0: \reg_04_data [1]
    1: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59_Y
    2: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$63_Y
    3: $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66_Y
    4: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$67_Y
    5: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$74_Y

  Output signals:
    0: $nex$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:245$85_Y
    1: $procmux$134_CMP
    2: $procmux$144_CMP
    3: $procmux$154_CMP

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'---00-   ->     0 4'1000
      1:     0 6'----1-   ->     0 4'1000
      2:     0 6'---10-   ->     2 4'1000
      3:     1 6'---0--   ->     1 4'0011
      4:     1 6'---1--   ->     2 4'0011
      5:     2 6'-00-00   ->     0 4'0101
      6:     2 6'10--1-   ->     0 4'0101
      7:     2 6'-1----   ->     1 4'0101
      8:     2 6'-00-01   ->     2 4'0101
      9:     2 6'-01-0-   ->     2 4'0101
     10:     2 6'00--1-   ->     2 4'0101

-------------------------------------

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\status$230' from module `\timer'.

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$283' (1) in module `\timer' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$282 = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$63_Y'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$262' (1) in module `\timer' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$261 = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$67_Y'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$258' in module `timer' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$241' in module `timer' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$253' (1) in module `\timer' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$252 = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59_Y'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$245' in module `timer' with $logic_not.

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
Removed a total of 0 cells.

3.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
  removed 9 unused temporary wires.
Removed 19 unused cells and 124 unused wires.

3.12.5. Finished fast OPT passes.

3.13. Executing MEMORY pass.

3.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
Removed 19 unused cells and 124 unused wires.

3.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
Removed 19 unused cells and 124 unused wires.

3.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
Removed 19 unused cells and 124 unused wires.

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Setting undriven signal in timer to undef: \RSTREQ_O
Replacing $mux cell `$procmux$106' (mux_bool) in module `\timer' with constant driver `$0\TOPULSE_O[0:0] = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$104_Y'.
Replacing $mux cell `$procmux$116' in module `timer' with or-gate.
Replacing $mux cell `$procmux$121' in module `timer' with or-gate.
Replacing $mux cell `$procmux$188' in module `timer' with and-gate.
Replacing $mux cell `$procmux$191' in module `timer' with or-gate.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
  removed 1 unused temporary wires.
Removed 19 unused cells and 125 unused wires.

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
Removed a total of 0 cells.

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \timer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$109 (pure)
    Root of a mux tree: $procmux$113 (pure)
    Root of a mux tree: $procmux$118 (pure)
    Root of a mux tree: $procmux$124 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$185 (pure)
    Root of a mux tree: $procmux$194 (pure)
    Root of a mux tree: $ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$57 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \timer.
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$287: { \status [1] \status [2] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$286: { $auto$fsm_map.cc:118:implement_pattern_cache$280 $auto$fsm_map.cc:118:implement_pattern_cache$276 $auto$fsm_map.cc:118:implement_pattern_cache$272 $auto$fsm_map.cc:118:implement_pattern_cache$284 $auto$fsm_map.cc:118:implement_pattern_cache$268 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$265: { $auto$fsm_map.cc:118:implement_pattern_cache$259 $auto$fsm_map.cc:118:implement_pattern_cache$263 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$256: { $auto$fsm_map.cc:118:implement_pattern_cache$242 $auto$fsm_map.cc:118:implement_pattern_cache$254 $auto$fsm_map.cc:118:implement_pattern_cache$246 $auto$fsm_map.cc:118:implement_pattern_cache$250 }
  Optimizing cells in module \timer.
Performed a total of 4 changes.

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
Removed a total of 0 cells.

3.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
Removed 19 unused cells and 125 unused wires.

3.17.8. Executing OPT_EXPR pass (perform const folding).

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \timer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$109 (pure)
    Root of a mux tree: $procmux$113 (pure)
    Root of a mux tree: $procmux$118 (pure)
    Root of a mux tree: $procmux$124 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$185 (pure)
    Root of a mux tree: $procmux$194 (pure)
    Root of a mux tree: $ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$57 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \timer.
Performed a total of 0 changes.

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
Removed a total of 0 cells.

3.17.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
Removed 19 unused cells and 125 unused wires.

3.17.15. Executing OPT_EXPR pass (perform const folding).

3.17.16. Finished OPT passes. (There is nothing left to do.)

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping timer.$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:135$3 ($reduce_or) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:135$4 ($logic_not) with simplemap.
Mapping timer.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:136$5 ($eq) with simplemap.
Mapping timer.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:137$6 ($eq) with simplemap.
Mapping timer.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:138$7 ($eq) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:149$9 ($logic_and) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:149$10 ($logic_and) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:230$15 ($logic_and) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:230$16 ($logic_not) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:230$17 ($logic_and) with simplemap.
Mapping timer.$auto$fsm_map.cc:77:implement_pattern_cache$267 ($eq) with simplemap.
Mapping timer.$auto$fsm_map.cc:77:implement_pattern_cache$271 ($eq) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$20 ($logic_and) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:232$22 ($logic_and) with simplemap.
Mapping timer.$auto$fsm_map.cc:144:implement_pattern_cache$286 ($reduce_or) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:269$26 ($logic_not) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:269$27 ($logic_and) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$285 ($and) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:312$31 ($logic_and) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:317$32 ($logic_not) with simplemap.
Mapping timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:317$33 ($and) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:318$34 ($logic_not) with simplemap.
Mapping timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:318$35 ($and) with simplemap.
Mapping timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:318$36 ($and) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$281 ($and) with simplemap.

3.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 16
Parameter \B_WIDTH = 1
Parameter \Y_WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=1\Y_WIDTH=16'.

3.18.3. Continuing TECHMAP pass.
Mapping timer.$auto$alumacc.cc:474:replace_alu$224 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=1\Y_WIDTH=16.
Mapping timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:319$38 ($and) with simplemap.
Mapping timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:319$39 ($and) with simplemap.
Mapping timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$41 ($and) with simplemap.
Mapping timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:320$42 ($and) with simplemap.
Mapping timer.$auto$fsm_map.cc:172:map_fsm$237 ($adff) with simplemap.
Mapping timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$45 ($and) with simplemap.
Mapping timer.$and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:321$46 ($and) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$269 ($and) with simplemap.
Mapping timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$50 ($mux) with simplemap.
Mapping timer.$auto$fsm_map.cc:77:implement_pattern_cache$249 ($eq) with simplemap.
Mapping timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$53 ($mux) with simplemap.
Mapping timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$55 ($mux) with simplemap.
Mapping timer.$ternary$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:322$57 ($mux) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:166$59 ($logic_and) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$62 ($logic_not) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:170$63 ($logic_and) with simplemap.
Mapping timer.$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:173$64 ($reduce_or) with simplemap.
Mapping timer.$reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66 ($reduce_or) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$67 ($logic_and) with simplemap.
Mapping timer.$auto$fsm_map.cc:144:implement_pattern_cache$265 ($reduce_or) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$72 ($logic_not) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$73 ($logic_not) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$74 ($logic_and) with simplemap.
Mapping timer.$auto$fsm_map.cc:77:implement_pattern_cache$275 ($eq) with simplemap.
Mapping timer.$auto$fsm_map.cc:77:implement_pattern_cache$241 ($logic_not) with simplemap.
Mapping timer.$auto$fsm_map.cc:144:implement_pattern_cache$287 ($reduce_or) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:258$87 ($logic_and) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:260$88 ($logic_not) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:260$89 ($logic_and) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:260$91 ($logic_and) with simplemap.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:262$92 ($logic_not) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:262$93 ($logic_and) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:262$94 ($logic_and) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$273 ($and) with simplemap.
Mapping timer.$auto$alumacc.cc:474:replace_alu$227 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=1\Y_WIDTH=16.
Mapping timer.$logic_not$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$101 ($logic_not) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$102 ($logic_and) with simplemap.
Mapping timer.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:344$104 ($logic_and) with simplemap.
Mapping timer.$procmux$109 ($mux) with simplemap.
Mapping timer.$procmux$113 ($mux) with simplemap.
Mapping timer.$procmux$116 ($or) with simplemap.
Mapping timer.$procmux$118 ($mux) with simplemap.
Mapping timer.$procmux$121 ($or) with simplemap.
Mapping timer.$procmux$124 ($mux) with simplemap.
Mapping timer.$procmux$128 ($mux) with simplemap.
Mapping timer.$procmux$131 ($mux) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$260 ($and) with simplemap.

3.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 16
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=16\S_WIDTH=3'.

3.18.5. Continuing TECHMAP pass.
Mapping timer.$procmux$133 using $paramod\_90_pmux\WIDTH=16\S_WIDTH=3.
Mapping timer.$procmux$136 ($mux) with simplemap.
Mapping timer.$procmux$139 ($mux) with simplemap.
Mapping timer.$procmux$142 ($mux) with simplemap.
Mapping timer.$procmux$147 ($mux) with simplemap.
Mapping timer.$procmux$149 ($mux) with simplemap.
Mapping timer.$procmux$152 ($mux) with simplemap.
Mapping timer.$auto$fsm_map.cc:77:implement_pattern_cache$258 ($not) with simplemap.
Mapping timer.$auto$fsm_map.cc:77:implement_pattern_cache$279 ($eq) with simplemap.
Mapping timer.$auto$fsm_map.cc:144:implement_pattern_cache$256 ($reduce_or) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$243 ($and) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$255 ($and) with simplemap.
Mapping timer.$auto$fsm_map.cc:77:implement_pattern_cache$245 ($logic_not) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$247 ($and) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$251 ($and) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$264 ($and) with simplemap.
Mapping timer.$auto$fsm_map.cc:121:implement_pattern_cache$277 ($and) with simplemap.
Mapping timer.$procmux$185 ($mux) with simplemap.
Mapping timer.$procmux$188 ($and) with simplemap.
Mapping timer.$procmux$191 ($or) with simplemap.
Mapping timer.$procmux$194 ($mux) with simplemap.
Mapping timer.$procdff$196 ($adff) with simplemap.
Mapping timer.$procdff$197 ($adff) with simplemap.
Mapping timer.$procdff$198 ($adff) with simplemap.
Mapping timer.$procdff$199 ($adff) with simplemap.
Mapping timer.$procdff$201 ($adff) with simplemap.
Mapping timer.$procdff$202 ($adff) with simplemap.
Mapping timer.$procdff$203 ($adff) with simplemap.
Mapping timer.$procdff$204 ($adff) with simplemap.
Mapping timer.$procdff$205 ($adff) with simplemap.
Mapping timer.$procdff$206 ($adff) with simplemap.
Mapping timer.$procdff$207 ($adff) with simplemap.
Mapping timer.$procdff$208 ($adff) with simplemap.
Mapping timer.$procdff$210 ($adff) with simplemap.
Mapping timer.$procdff$211 ($adff) with simplemap.
Mapping timer.$procdff$212 ($adff) with simplemap.
Mapping timer.$procdff$213 ($adff) with simplemap.
Mapping timer.$procdff$214 ($adff) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.$xor$<techmap.v>:262$435 ($xor) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.$xor$<techmap.v>:263$436 ($xor) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434 ($and) with simplemap.

3.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=16'.

3.18.7. Executing PROC pass (convert processes to netlists).

3.18.7.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.7.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.7.3. Executing PROC_INIT pass (extract init attributes).

3.18.7.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.7.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$969'.
     1/32: $0\p[15:0] [14]
     2/32: $0\g[15:0] [14]
     3/32: $0\p[15:0] [12]
     4/32: $0\g[15:0] [12]
     5/32: $0\p[15:0] [10]
     6/32: $0\g[15:0] [10]
     7/32: $0\p[15:0] [8]
     8/32: $0\g[15:0] [8]
     9/32: $0\p[15:0] [6]
    10/32: $0\g[15:0] [6]
    11/32: $0\p[15:0] [4]
    12/32: $0\g[15:0] [4]
    13/32: $0\p[15:0] [2]
    14/32: $0\g[15:0] [2]
    15/32: $0\p[15:0] [13]
    16/32: $0\g[15:0] [13]
    17/32: $0\p[15:0] [9]
    18/32: $0\g[15:0] [9]
    19/32: $0\p[15:0] [5]
    20/32: $0\g[15:0] [5]
    21/32: $0\p[15:0] [11]
    22/32: $0\g[15:0] [11]
    23/32: $0\p[15:0] [15]
    24/32: $0\g[15:0] [15]
    25/32: $0\p[15:0] [7]
    26/32: $0\g[15:0] [7]
    27/32: $0\p[15:0] [3]
    28/32: $0\g[15:0] [3]
    29/32: $0\p[15:0] [1]
    30/32: $0\g[15:0] [1]
    31/32: $0\g[15:0] [0]
    32/32: $0\p[15:0] [0]

3.18.7.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\g' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$969'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\p' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$969'.

3.18.7.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.7.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$969'.
Cleaned up 0 empty switches.

3.18.8. Executing OPT pass (performing simple optimizations).

3.18.8.1. Executing OPT_EXPR pass (perform const folding).

3.18.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=16'.
Removed a total of 0 cells.

3.18.8.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=16..
  removing unused `$and' cell `$and$<techmap.v>:222$974'.
  removing unused `$and' cell `$and$<techmap.v>:222$998'.
  removing unused `$and' cell `$and$<techmap.v>:222$1010'.
  removing unused `$and' cell `$and$<techmap.v>:222$1016'.
  removing unused `$and' cell `$and$<techmap.v>:230$1019'.
  removing unused `$and' cell `$and$<techmap.v>:230$1022'.
  removing unused `$and' cell `$and$<techmap.v>:230$1025'.
  removing unused `$and' cell `$and$<techmap.v>:230$1028'.
  removing unused `$and' cell `$and$<techmap.v>:230$1031'.
  removing unused `$and' cell `$and$<techmap.v>:230$1034'.
  removing unused `$and' cell `$and$<techmap.v>:230$1037'.
  removing unused `$and' cell `$and$<techmap.v>:230$1040'.
  removing unused `$and' cell `$and$<techmap.v>:230$1043'.
  removing unused `$and' cell `$and$<techmap.v>:230$1046'.
  removing unused `$and' cell `$and$<techmap.v>:230$1049'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 35 unused temporary wires.
Removed 34 unused cells and 160 unused wires.

3.18.8.5. Finished fast OPT passes.

3.18.9. Continuing TECHMAP pass.
Mapping timer.$auto$alumacc.cc:474:replace_alu$224.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433 ($mux) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432 ($not) with simplemap.
Mapping timer.$auto$alumacc.cc:474:replace_alu$224.B_conv ($pos) with simplemap.
Mapping timer.$auto$alumacc.cc:474:replace_alu$224.A_conv ($pos) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.$xor$<techmap.v>:262$435 ($xor) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.$xor$<techmap.v>:263$436 ($xor) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434 ($and) with simplemap.
Mapping timer.$auto$alumacc.cc:474:replace_alu$227.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433 ($mux) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432 ($not) with simplemap.
Mapping timer.$auto$alumacc.cc:474:replace_alu$227.B_conv ($pos) with simplemap.
Mapping timer.$auto$alumacc.cc:474:replace_alu$227.A_conv ($pos) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$676 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$677 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$675 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$674 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$673 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$672 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$671 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$670 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$669 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$668 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$667 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$666 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$665 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$664 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$663 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:441$662 ($reduce_or) with simplemap.
Mapping timer.$techmap$procmux$133.$and$<techmap.v>:434$661 ($and) with simplemap.
Mapping timer.$techmap$procmux$133.$and$<techmap.v>:434$660 ($and) with simplemap.
Mapping timer.$techmap$procmux$133.$and$<techmap.v>:434$659 ($and) with simplemap.
Mapping timer.$techmap$procmux$133.$ternary$<techmap.v>:445$658 ($mux) with simplemap.
Mapping timer.$techmap$procmux$133.$reduce_or$<techmap.v>:445$657 ($reduce_or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1048 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1045 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1042 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1039 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1036 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1033 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1030 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1027 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1024 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1021 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:229$1018 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$997 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$994 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$991 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$988 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$985 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$982 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$979 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$976 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$973 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$1015 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$1012 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$1009 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$1006 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$1003 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:221$1000 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$or$<techmap.v>:212$971 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1047 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1044 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1041 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1038 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1035 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1032 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1029 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1026 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1023 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1020 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:229$1017 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$995 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$992 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$989 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$986 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$983 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$980 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$977 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$1013 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$1007 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$1004 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:222$1001 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$999 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$996 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$993 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$990 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$987 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$984 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$981 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$978 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$975 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$972 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$1014 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$1011 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$1008 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$1005 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:221$1002 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:212$970 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:212$970 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$1002 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$1005 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$1008 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$1011 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$1014 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$972 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$975 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$978 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$981 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$984 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$987 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$990 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$993 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$996 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:221$999 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$1001 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$1004 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$1007 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$1013 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$977 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$980 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$983 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$986 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$989 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$992 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:222$995 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1017 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1020 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1023 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1026 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1029 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1032 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1035 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1038 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1041 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1044 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:229$1047 ($and) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:212$971 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$1000 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$1003 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$1006 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$1009 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$1012 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$1015 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$973 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$976 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$979 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$982 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$985 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$988 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$991 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$994 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:221$997 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1018 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1021 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1024 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1027 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1030 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1033 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1036 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1039 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1042 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1045 ($or) with simplemap.
Mapping timer.$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$or$<techmap.v>:229$1048 ($or) with simplemap.
No more expansions possible.

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1154' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1138' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [7] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1153' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1137' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [6] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1152' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1136' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [5] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1151' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1135' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [4] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1150' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1134' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [3] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1149' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1133' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [2] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1148' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1132' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [1] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1147' (1) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1131' (101) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1082' (?0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$xor$<techmap.v>:262$435_Y [0] = \internal_counter [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1081' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [15] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1080' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [14] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1079' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [13] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1078' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [12] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1077' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [11] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1076' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [10] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1075' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [9] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1074' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [8] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1073' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [7] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1072' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [6] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1071' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [5] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1070' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [4] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1069' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [3] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1068' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [2] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1067' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [1] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1066' (1) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$not$<techmap.v>:258$432_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1065' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1064' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1063' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1062' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1061' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1060' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1059' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1058' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1057' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1056' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1055' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1054' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1050' (101) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$886' (?0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$xor$<techmap.v>:262$435_Y [0] = \reg_08_data [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1051' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1052' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [2] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$341' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$338 [1] = \S_ADR_I [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$342' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$338 [2] = \S_ADR_I [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$343' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$338 [3] = \S_ADR_I [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$355' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$353 [0] = \S_ADR_I [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$357' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$353 [2] = \S_ADR_I [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$358' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$353 [3] = \S_ADR_I [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$372' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$368 [2] = \S_ADR_I [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$373' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$368 [3] = \S_ADR_I [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$391' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$388 [1] = $auto$fsm_map.cc:74:implement_pattern_cache$252'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$392' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$388 [2] = $reduce_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:179$66_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$393' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$388 [3] = $auto$fsm_map.cc:74:implement_pattern_cache$261'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$405' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$403 [0] = $auto$fsm_map.cc:74:implement_pattern_cache$252'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$575' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$571 [2] = $auto$fsm_map.cc:74:implement_pattern_cache$261'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$573' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$571 [0] = $auto$fsm_map.cc:74:implement_pattern_cache$252'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$779' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$775 [2] = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:184$74_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$778' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$775 [1] = $auto$fsm_map.cc:74:implement_pattern_cache$261'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1053' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$ternary$<techmap.v>:258$433_Y [3] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$466' (?0) in module `\timer' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$463 [1] = $auto$fsm_map.cc:74:implement_pattern_cache$261'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1115' (const_and) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1360' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.lcu.$and$<techmap.v>:212$970_Y = \internal_counter [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1398' (and_or_buffer) in module `\timer' with constant driver `$auto$alumacc.cc:491:replace_alu$229 [0] = \internal_counter [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1116' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [1] = \internal_counter [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1117' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [2] = \internal_counter [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1118' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [3] = \internal_counter [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1119' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [4] = \internal_counter [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1120' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [5] = \internal_counter [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1121' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [6] = \internal_counter [6]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1155' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1139' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [8] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1122' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [7] = \internal_counter [7]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1156' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1140' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1123' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [8] = \internal_counter [8]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1157' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1141' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [10] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1124' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [9] = \internal_counter [9]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1158' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1142' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [11] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1125' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [10] = \internal_counter [10]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1159' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1143' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [12] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1126' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [11] = \internal_counter [11]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1160' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1144' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [13] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1127' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [12] = \internal_counter [12]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1161' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1145' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [14] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1128' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [13] = \internal_counter [13]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1162' (0) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$not$<techmap.v>:258$432_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1146' (011) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$ternary$<techmap.v>:258$433_Y [15] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1129' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [14] = \internal_counter [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$919' (const_and) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1359' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.lcu.$and$<techmap.v>:212$970_Y = \reg_08_data [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1321' (and_or_buffer) in module `\timer' with constant driver `$auto$alumacc.cc:491:replace_alu$226 [0] = \reg_08_data [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$920' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [1] = \reg_08_data [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$921' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [2] = \reg_08_data [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$922' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [3] = \reg_08_data [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$923' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [4] = \reg_08_data [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$924' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [5] = \reg_08_data [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$925' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [6] = \reg_08_data [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$926' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [7] = \reg_08_data [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$927' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [8] = \reg_08_data [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$928' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [9] = \reg_08_data [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$929' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [10] = \reg_08_data [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$930' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [11] = \reg_08_data [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$931' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [12] = \reg_08_data [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$932' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [13] = \reg_08_data [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$933' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [14] = \reg_08_data [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$934' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$and$<techmap.v>:260$434_Y [15] = \reg_08_data [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$918' (0?) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$224.$xor$<techmap.v>:263$436_Y [16] = $auto$alumacc.cc:491:replace_alu$226 [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1130' (and_or_buffer) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$and$<techmap.v>:260$434_Y [15] = \internal_counter [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1114' (0?) in module `\timer' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$227.$xor$<techmap.v>:263$436_Y [16] = $auto$alumacc.cc:491:replace_alu$229 [15]'.

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$465' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$777'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$463 [0] = $auto$simplemap.cc:250:simplemap_eqne$775 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$465' from module `\timer'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$398' is identical to cell `$auto$simplemap.cc:177:logic_reduce$586'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$396 [1] = $auto$simplemap.cc:168:logic_reduce$584 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$398' from module `\timer'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$363' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$378'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$361 [1] = $auto$simplemap.cc:127:simplemap_reduce$376 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$363' from module `\timer'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$356' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$371'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$353 [1] = $auto$simplemap.cc:250:simplemap_eqne$368 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$356' from module `\timer'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$348' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$378'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$346 [1] = $auto$simplemap.cc:127:simplemap_reduce$376 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$348' from module `\timer'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$340' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$370'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$338 [0] = $auto$simplemap.cc:250:simplemap_eqne$368 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$340' from module `\timer'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$333' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$378'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$332 [0] = $auto$simplemap.cc:127:simplemap_reduce$376 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$333' from module `\timer'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$591' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1292'.
    Redirecting output \Y: $nex$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/source/timer.v:245$85_Y = $auto$simplemap.cc:127:simplemap_reduce$1291
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$591' from module `\timer'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$471' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$783'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$470 = $auto$simplemap.cc:127:simplemap_reduce$782
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$471' from module `\timer'.
Removed a total of 9 cells.

3.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$870'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$871'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$872'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$873'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$874'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$875'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$876'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$877'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$878'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$879'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$880'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$881'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$882'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$883'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$884'.
  removing unused `$_DFF_PP0_' cell `$auto$simplemap.cc:496:simplemap_adff$885'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1307'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1315'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1316'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1318'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1333'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1340'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1341'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1346'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1354'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1355'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1357'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1362'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1364'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1365'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1373'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1378'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1379'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1386'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1401'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1403'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1404'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1412'.
  removed 145 unused temporary wires.
Removed 72 unused cells and 305 unused wires.

3.19.5. Finished fast OPT passes.

3.20. Executing ABC pass (technology mapping using ABC).

3.20.1. Extracting gate netlist of module `\timer' to `<abc-temp-dir>/input.blif'..
Extracted 609 gates and 683 wires to a netlist network with 72 inputs and 65 outputs.

3.20.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:       55
ABC RESULTS:              AOI3 cells:       25
ABC RESULTS:              AOI4 cells:       17
ABC RESULTS:               MUX cells:      168
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:       15
ABC RESULTS:               NOT cells:       54
ABC RESULTS:              OAI3 cells:        7
ABC RESULTS:              OAI4 cells:        3
ABC RESULTS:                OR cells:       81
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       29
ABC RESULTS:        internal signals:      546
ABC RESULTS:           input signals:       72
ABC RESULTS:          output signals:       65
Removing temp directory.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1800' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1781' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1762' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1744' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1720' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1701' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1680' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1661' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1640' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1621' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1600' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1582' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1562' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1543' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1526' in module `timer'.
Optimizing away select inverter for $_MUX_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1509' in module `timer'.

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
  Cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1607' is identical to cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1437'.
    Redirecting output \Y: $abc$1425$n319 = $abc$1425$n149
    Removing $_OR_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1607' from module `\timer'.
  Cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1616' is identical to cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1501'.
    Redirecting output \Y: $abc$1425$n328_1 = $abc$1425$n213_1
    Removing $_OR_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1616' from module `\timer'.
  Cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1687' is identical to cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1433'.
    Redirecting output \Y: $abc$1425$n399 = $abc$1425$n145
    Removing $_OR_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1687' from module `\timer'.
  Cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1696' is identical to cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1497'.
    Redirecting output \Y: $abc$1425$n408 = $abc$1425$n209
    Removing $_OR_ cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1696' from module `\timer'.
Removed a total of 4 cells.

3.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
  removing unused `$_NOT_' cell `$abc$1425$auto$blifparse.cc:371:parse_blif$1492'.
  removed 345 unused temporary wires.
Removed 73 unused cells and 650 unused wires.

3.21.5. Finished fast OPT passes.

3.22. Executing HIERARCHY pass (managing design hierarchy).

3.22.1. Analyzing design hierarchy..
Top module:  \timer

3.22.2. Analyzing design hierarchy..
Top module:  \timer
Removed 0 unused modules.

3.23. Printing statistics.

=== timer ===

   Number of wires:                472
   Number of wire bits:            713
   Number of public wires:          42
   Number of public wire bits:     252
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                544
     $_ANDNOT_                      55
     $_AND_                          7
     $_AOI3_                        25
     $_AOI4_                        17
     $_DFF_PP0_                     63
     $_DFF_PP1_                      3
     $_MUX_                        168
     $_NAND_                         5
     $_NOR_                         15
     $_NOT_                         53
     $_OAI3_                         7
     $_OAI4_                         3
     $_ORNOT_                       16
     $_OR_                          77
     $_XNOR_                         1
     $_XOR_                         29

3.24. Executing CHECK pass (checking for obvious problems).
checking module timer..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=704.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\timer':
  mapped 63 $_DFF_PP0_ cells to \DFFSR cells.
  mapped 3 $_DFF_PP1_ cells to \DFFSR cells.

5. Executing ABC pass (technology mapping using ABC).

5.1. Extracting gate netlist of module `\timer' to `<abc-temp-dir>/input.blif'..
Extracted 544 gates and 617 wires to a netlist network with 73 inputs and 131 outputs.

5.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.00 sec
ABC: Memory =    0.38 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       28
ABC RESULTS:           AOI21X1 cells:       47
ABC RESULTS:           AOI22X1 cells:       10
ABC RESULTS:             INVX1 cells:      152
ABC RESULTS:           NAND2X1 cells:       62
ABC RESULTS:           NAND3X1 cells:       32
ABC RESULTS:            NOR2X1 cells:       59
ABC RESULTS:            NOR3X1 cells:        2
ABC RESULTS:           OAI21X1 cells:      170
ABC RESULTS:           OAI22X1 cells:        8
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:           XNOR2X1 cells:        3
ABC RESULTS:        internal signals:      413
ABC RESULTS:           input signals:       73
ABC RESULTS:          output signals:      131
Removing temp directory.

6. Executing FLATTEN pass (flatten design).
No more expansions possible.
Removed 0 unused cells and 624 unused wires.

7. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port timer.CLK_I: Missing option -inpad.
Mapping port timer.RSTREQ_O using BUFX2.
Don't map input port timer.RST_I: Missing option -inpad.
Mapping port timer.S_ACK_O using BUFX2.
Don't map input port timer.S_ADR_I: Missing option -inpad.
Don't map input port timer.S_BTE_I: Missing option -inpad.
Don't map input port timer.S_CTI_I: Missing option -inpad.
Don't map input port timer.S_CYC_I: Missing option -inpad.
Don't map input port timer.S_DAT_I: Missing option -inpad.
Mapping port timer.S_DAT_O using BUFX2.
Mapping port timer.S_ERR_O using BUFX2.
Mapping port timer.S_INT_O using BUFX2.
Don't map input port timer.S_LOCK_I: Missing option -inpad.
Mapping port timer.S_RTY_O using BUFX2.
Don't map input port timer.S_SEL_I: Missing option -inpad.
Don't map input port timer.S_STB_I: Missing option -inpad.
Don't map input port timer.S_WE_I: Missing option -inpad.
Mapping port timer.TOPULSE_O using BUFX2.

8. Executing OPT pass (performing simple optimizations).

8.1. Executing OPT_EXPR pass (perform const folding).

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
Removed a total of 0 cells.

8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \timer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \timer.
Performed a total of 0 changes.

8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\timer'.
Removed a total of 0 cells.

8.6. Executing OPT_RMDFF pass (remove dff with constant values).

8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timer..
  removed 3 unused temporary wires.
Removed 0 unused cells and 627 unused wires.

8.8. Executing OPT_EXPR pass (perform const folding).

8.9. Finished OPT passes. (There is nothing left to do.)

9. Executing BLIF backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: e25d2d6b79
CPU: user 0.35s system 0.01s, MEM: 47.38 MB total, 14.29 MB resident
Yosys 0.7+632 (git sha1 2353d28f, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 14% 16x opt_clean (0 sec), 14% 16x opt_expr (0 sec), ...
Cleaning up output syntax
Cleaning Up blif file syntax
Running blifFanout (iterative)

Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 46 (load 1055.35) from node _58_,
driven by NOR2X1 with strength 108.686 (fF driven at latency 200)
Top fanout load-to-strength ratio is 9.71015 (latency = 1942.03 ps)
Top input node fanout is 66 (load 887.495) from node CLK_I.
Warning 1: load of 241.982 is 1.16641 times greater than strongest gate AND2X2
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 484.85 is 4.71129 times greater than strongest gate DFFSR
Warning 68: load of 635.803 is 5.84994 times greater than strongest gate NOR2X1
Warning 81: load of 1065.35 is 9.80216 times greater than strongest gate NOR2X1
96 gates exceed specified minimum load.
40 buffers were added.
23 gates were changed.

Gate counts by drive strength:

	"" gates	In: 66    	Out: 66    	+0
	"1" gates	In: 545    	Out: 522    	-23
	"2" gates	In: 68    	Out: 84    	+16

gates resized: 63
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 16 (load 526.513) from node _43_,
driven by INVX8 with strength 834.803 (fF driven at latency 200)
Top fanout load-to-strength ratio is 4.53672 (latency = 907.343 ps)
Top input node fanout is 8 (load 107.318) from node CLK_I.
Warning 1: load of 241.982 is 1.16641 times greater than strongest gate AND2X2
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 194.639 is 1.89131 times greater than strongest gate DFFSR
Warning 3: load of 476.884 is 4.63389 times greater than strongest gate DFFSR
96 gates exceed specified minimum load.
0 buffers were added.
36 gates were changed.

Gate counts by drive strength:

	"" gates	In: 66    	Out: 66    	+0
	"1" gates	In: 522    	Out: 522    	+0
	"2" gates	In: 124    	Out: 88    	-36
	"4" gates	In: 4    	Out: 40    	+36
	"8" gates	In: 3    	Out: 3    	+0

gates resized: 36
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 16 (load 526.513) from node _43_,
driven by INVX8 with strength 834.803 (fF driven at latency 200)
Top fanout load-to-strength ratio is 4.53672 (latency = 907.343 ps)
Top input node fanout is 8 (load 163.227) from node CLK_I.
Warning 1: load of 437.14 is 1.0573 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 440.902 is 1.0664 times greater than strongest gate BUFX4
Warning 3: load of 441.883 is 1.06877 times greater than strongest gate BUFX4
Warning 4: load of 446.103 is 1.07897 times greater than strongest gate BUFX4
Warning 6: load of 501.818 is 1.21373 times greater than strongest gate BUFX4
Warning 8: load of 201.627 is 1.95922 times greater than strongest gate DFFSR
Warning 9: load of 476.884 is 4.63389 times greater than strongest gate DFFSR
104 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"" gates	In: 66    	Out: 66    	+0
	"1" gates	In: 522    	Out: 522    	+0
	"2" gates	In: 88    	Out: 88    	+0
	"4" gates	In: 40    	Out: 40    	+0
	"8" gates	In: 3    	Out: 3    	+0

gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/synthesis
Files:
   Verilog: /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/synthesis/timer.rtl.v
   Verilog: /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/synthesis/timer.rtlnopwr.v
   Spice:   /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/timer/timer/synthesis/timer.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
Synthesis script ended on Tue Aug 14 15:19:20 EET 2018
