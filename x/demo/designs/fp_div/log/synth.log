Qflow synthesis logfile created on Tue Aug 14 15:55:58 EET 2018
Running yosys for verilog parsing and synthesis

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2018  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7+632 (git sha1 2353d28f, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `fp_divider.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v' to AST representation.
Generating RTLIL representation for module `\fp_divider'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \fp_divider

3.1.2. Analyzing design hierarchy..
Top module:  \fp_divider
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
     1/33: $0\z[31:0] [22]
     2/33: $0\z_m[23:0] [0]
     3/33: $0\quotient[50:0] [0]
     4/33: $0\quotient[50:0] [50:1]
     5/33: $0\a_m[23:0] [23]
     6/33: $0\b_m[23:0] [22:0]
     7/33: $0\z_m[23:0] [23:1]
     8/33: $0\z[31:0] [30:23]
     9/33: $0\z[31:0] [31]
    10/33: $0\b_m[23:0] [23]
    11/33: $0\dividend[50:0]
    12/33: $0\divisor[50:0]
    13/33: $0\remainder[50:0] [0]
    14/33: $0\sticky[0:0]
    15/33: $0\round_bit[0:0]
    16/33: $0\guard[0:0]
    17/33: $0\z_s[0:0]
    18/33: $0\b_s[0:0]
    19/33: $0\a_s[0:0]
    20/33: $0\z_e[9:0]
    21/33: $0\b_e[9:0]
    22/33: $0\a_e[9:0]
    23/33: $0\remainder[50:0] [50:1]
    24/33: $0\a_m[23:0] [22:0]
    25/33: $0\z[31:0] [21:0]
    26/33: $0\count[5:0]
    27/33: $0\b[31:0]
    28/33: $0\a[31:0]
    29/33: $0\state[3:0]
    30/33: $0\s_input_b_ack[0:0]
    31/33: $0\s_input_a_ack[0:0]
    32/33: $0\s_output_z[31:0]
    33/33: $0\s_output_z_stb[0:0]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\fp_divider.\s_output_z_stb' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$771' with positive edge clock.
Creating register for signal `\fp_divider.\s_output_z' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$772' with positive edge clock.
Creating register for signal `\fp_divider.\s_input_a_ack' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$773' with positive edge clock.
Creating register for signal `\fp_divider.\s_input_b_ack' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$774' with positive edge clock.
Creating register for signal `\fp_divider.\state' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$775' with positive edge clock.
Creating register for signal `\fp_divider.\a' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$776' with positive edge clock.
Creating register for signal `\fp_divider.\b' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$777' with positive edge clock.
Creating register for signal `\fp_divider.\z' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$778' with positive edge clock.
Creating register for signal `\fp_divider.\a_m' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$779' with positive edge clock.
Creating register for signal `\fp_divider.\b_m' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$780' with positive edge clock.
Creating register for signal `\fp_divider.\z_m' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$781' with positive edge clock.
Creating register for signal `\fp_divider.\a_e' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$782' with positive edge clock.
Creating register for signal `\fp_divider.\b_e' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$783' with positive edge clock.
Creating register for signal `\fp_divider.\z_e' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$784' with positive edge clock.
Creating register for signal `\fp_divider.\a_s' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$785' with positive edge clock.
Creating register for signal `\fp_divider.\b_s' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$786' with positive edge clock.
Creating register for signal `\fp_divider.\z_s' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$787' with positive edge clock.
Creating register for signal `\fp_divider.\guard' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$788' with positive edge clock.
Creating register for signal `\fp_divider.\round_bit' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$789' with positive edge clock.
Creating register for signal `\fp_divider.\sticky' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$790' with positive edge clock.
Creating register for signal `\fp_divider.\quotient' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$791' with positive edge clock.
Creating register for signal `\fp_divider.\divisor' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$792' with positive edge clock.
Creating register for signal `\fp_divider.\dividend' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$793' with positive edge clock.
Creating register for signal `\fp_divider.\remainder' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$794' with positive edge clock.
Creating register for signal `\fp_divider.\count' using process `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
  created $dff cell `$procdff$795' with positive edge clock.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 25 empty switches in `\fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
Removing empty process `fp_divider.$proc$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:63$1'.
Cleaned up 25 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Replacing $ne cell `$ne$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$7' in module `fp_divider' with $logic_not.
Replacing $ne cell `$ne$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$10' in module `fp_divider' with $logic_not.
Replacing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:122$18' (isneq) in module `\fp_divider' with constant driver `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:122$18_Y = 1'0'.
Replacing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:122$19' in module `fp_divider' with $logic_not.
Replacing $logic_and cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:122$20' (const_and) in module `\fp_divider' with constant driver `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:122$20_Y = 1'0'.
Replacing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$24' in module `fp_divider' with $logic_not.
Replacing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$28' in module `fp_divider' with $logic_not.
Replacing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$31' in module `fp_divider' with $logic_not.
Replacing $shl cell `$shl$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:177$36' (B=1, SHR=-1) in module `fp_divider' with fixed wiring: { \a_m [22:0] 1'0 }
Replacing $shl cell `$shl$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:187$38' (B=1, SHR=-1) in module `fp_divider' with fixed wiring: { \b_m [22:0] 1'0 }
Replacing $shl cell `$shl$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:199$42' (B=27, SHR=-27) in module `fp_divider' with fixed wiring: { \a_m 27'000000000000000000000000000 }
Replacing $shl cell `$shl$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:206$43' (B=1, SHR=-1) in module `fp_divider' with fixed wiring: { \quotient [49:0] 1'0 }
Replacing $shl cell `$shl$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:207$44' (B=1, SHR=-1) in module `fp_divider' with fixed wiring: { \remainder [49:0] 1'0 }
Replacing $shl cell `$shl$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:209$45' (B=1, SHR=-1) in module `fp_divider' with fixed wiring: { \dividend [49:0] 1'0 }
Replacing $ne cell `$ne$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:232$50' in module `fp_divider' with $logic_not.
Replacing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$52' in module `fp_divider' with inverter.
Replacing $shl cell `$shl$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:240$56' (B=1, SHR=-1) in module `fp_divider' with fixed wiring: { \z_m [22:0] 1'0 }
Replacing $shr cell `$shr$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:253$59' (B=1, SHR=1) in module `fp_divider' with fixed wiring: { 1'0 \z_m [23:1] }
Replacing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:278$69' in module `fp_divider' with inverter.
Replacing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:302$73' (1) in module `\fp_divider' with constant driver `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:302$73_Y = \rst'.
Replacing $mux cell `$procmux$95' (0) in module `\fp_divider' with constant driver `$procmux$95_Y = 1'0'.
Replacing $mux cell `$procmux$274' (0) in module `\fp_divider' with constant driver `$procmux$274_Y = $xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:117$17_Y'.
Replacing $eq cell `$procmux$647_CMP0' in module `fp_divider' with $logic_not.
Replacing $eq cell `$procmux$710_CMP0' in module `fp_divider' with $logic_not.
Replacing $eq cell `$procmux$755_CMP0' in module `fp_divider' with $logic_not.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
  removing unused `$logic_not' cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:122$19'.
  removed 156 unused temporary wires.
Removed 1 unused cells and 156 unused wires.

3.5. Executing CHECK pass (checking for obvious problems).
checking module fp_divider..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
  Cell `$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:267$66' is identical to cell `$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:252$58'.
    Redirecting output \Y: $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:267$66_Y = $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:252$58_Y
    Removing $add cell `$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:267$66' from module `\fp_divider'.
  Cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$13' is identical to cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$13_Y = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6_Y
    Removing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$13' from module `\fp_divider'.
  Cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$14' is identical to cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$14_Y = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9_Y
    Removing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$14' from module `\fp_divider'.
  Cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:116$16' is identical to cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:116$16_Y = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6_Y
    Removing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:116$16' from module `\fp_divider'.
  Cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:130$21' is identical to cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:130$21_Y = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9_Y
    Removing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:130$21' from module `\fp_divider'.
  Cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$30' is identical to cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$27'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$30_Y = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$27_Y
    Removing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$30' from module `\fp_divider'.
  Cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$31' is identical to cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$28'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$31_Y = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$28_Y
    Removing $logic_not cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$31' from module `\fp_divider'.
  Cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:157$34' is identical to cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$23'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:157$34_Y = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$23_Y
    Removing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:157$34' from module `\fp_divider'.
  Cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:163$35' is identical to cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$27'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:163$35_Y = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$27_Y
    Removing $eq cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:163$35' from module `\fp_divider'.
  Cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:278$69' is identical to cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$52'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:278$69_Y = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$52_Y
    Removing $not cell `$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:278$69' from module `\fp_divider'.
  Cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$32' is identical to cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$29'.
    Redirecting output \Y: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$32_Y = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$29_Y
    Removing $logic_and cell `$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:150$32' from module `\fp_divider'.
  Cell `$or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:264$61' is identical to cell `$or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:256$60'.
    Redirecting output \Y: $or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:264$61_Y = $or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:256$60_Y
    Removing $or cell `$or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:264$61' from module `\fp_divider'.
  Cell `$procmux$146_CMP0' is identical to cell `$procmux$135_CMP0'.
    Redirecting output \Y: $procmux$146_CMP = $procmux$135_CMP
    Removing $eq cell `$procmux$146_CMP0' from module `\fp_divider'.
  Cell `$procmux$147_CMP0' is identical to cell `$procmux$136_CMP0'.
    Redirecting output \Y: $procmux$147_CMP = $procmux$136_CMP
    Removing $eq cell `$procmux$147_CMP0' from module `\fp_divider'.
  Cell `$procmux$185_CMP0' is identical to cell `$procmux$105_CMP0'.
    Redirecting output \Y: $procmux$185_CMP = $procmux$105_CMP
    Removing $eq cell `$procmux$185_CMP0' from module `\fp_divider'.
  Cell `$procmux$202_CMP0' is identical to cell `$procmux$186_CMP0'.
    Redirecting output \Y: $procmux$202_CMP = $procmux$186_CMP
    Removing $eq cell `$procmux$202_CMP0' from module `\fp_divider'.
  Cell `$procmux$210_CMP0' is identical to cell `$procmux$113_CMP0'.
    Redirecting output \Y: $procmux$210_CMP = $procmux$113_CMP
    Removing $eq cell `$procmux$210_CMP0' from module `\fp_divider'.
  Cell `$procmux$214_CMP0' is identical to cell `$procmux$117_CMP0'.
    Redirecting output \Y: $procmux$214_CMP = $procmux$117_CMP
    Removing $eq cell `$procmux$214_CMP0' from module `\fp_divider'.
  Cell `$procmux$218_CMP0' is identical to cell `$procmux$121_CMP0'.
    Redirecting output \Y: $procmux$218_CMP = $procmux$121_CMP
    Removing $eq cell `$procmux$218_CMP0' from module `\fp_divider'.
  Cell `$procmux$219_CMP0' is identical to cell `$procmux$122_CMP0'.
    Redirecting output \Y: $procmux$219_CMP = $procmux$122_CMP
    Removing $eq cell `$procmux$219_CMP0' from module `\fp_divider'.
  Cell `$procmux$253_CMP0' is identical to cell `$procmux$105_CMP0'.
    Redirecting output \Y: $procmux$253_CMP = $procmux$105_CMP
    Removing $eq cell `$procmux$253_CMP0' from module `\fp_divider'.
  Cell `$procmux$259_CMP0' is identical to cell `$procmux$229_CMP0'.
    Redirecting output \Y: $procmux$259_CMP = $procmux$229_CMP
    Removing $eq cell `$procmux$259_CMP0' from module `\fp_divider'.
  Cell `$procmux$284_CMP0' is identical to cell `$procmux$105_CMP0'.
    Redirecting output \Y: $procmux$284_CMP = $procmux$105_CMP
    Removing $eq cell `$procmux$284_CMP0' from module `\fp_divider'.
  Cell `$procmux$299_CMP0' is identical to cell `$procmux$201_CMP0'.
    Redirecting output \Y: $procmux$299_CMP = $procmux$201_CMP
    Removing $eq cell `$procmux$299_CMP0' from module `\fp_divider'.
  Cell `$procmux$321_CMP0' is identical to cell `$procmux$105_CMP0'.
    Redirecting output \Y: $procmux$321_CMP = $procmux$105_CMP
    Removing $eq cell `$procmux$321_CMP0' from module `\fp_divider'.
  Cell `$procmux$322_CMP0' is identical to cell `$procmux$186_CMP0'.
    Redirecting output \Y: $procmux$322_CMP = $procmux$186_CMP
    Removing $eq cell `$procmux$322_CMP0' from module `\fp_divider'.
  Cell `$procmux$332_CMP0' is identical to cell `$procmux$135_CMP0'.
    Redirecting output \Y: $procmux$332_CMP = $procmux$135_CMP
    Removing $eq cell `$procmux$332_CMP0' from module `\fp_divider'.
  Cell `$procmux$333_CMP0' is identical to cell `$procmux$136_CMP0'.
    Redirecting output \Y: $procmux$333_CMP = $procmux$136_CMP
    Removing $eq cell `$procmux$333_CMP0' from module `\fp_divider'.
  Cell `$procmux$344_CMP0' is identical to cell `$procmux$136_CMP0'.
    Redirecting output \Y: $procmux$344_CMP = $procmux$136_CMP
    Removing $eq cell `$procmux$344_CMP0' from module `\fp_divider'.
  Cell `$procmux$356_CMP0' is identical to cell `$procmux$134_CMP0'.
    Redirecting output \Y: $procmux$356_CMP = $procmux$134_CMP
    Removing $eq cell `$procmux$356_CMP0' from module `\fp_divider'.
  Cell `$procmux$357_CMP0' is identical to cell `$procmux$135_CMP0'.
    Redirecting output \Y: $procmux$357_CMP = $procmux$135_CMP
    Removing $eq cell `$procmux$357_CMP0' from module `\fp_divider'.
  Cell `$procmux$358_CMP0' is identical to cell `$procmux$136_CMP0'.
    Redirecting output \Y: $procmux$358_CMP = $procmux$136_CMP
    Removing $eq cell `$procmux$358_CMP0' from module `\fp_divider'.
  Cell `$procmux$367_CMP0' is identical to cell `$procmux$117_CMP0'.
    Redirecting output \Y: $procmux$367_CMP = $procmux$117_CMP
    Removing $eq cell `$procmux$367_CMP0' from module `\fp_divider'.
  Cell `$procmux$368_CMP0' is identical to cell `$procmux$122_CMP0'.
    Redirecting output \Y: $procmux$368_CMP = $procmux$122_CMP
    Removing $eq cell `$procmux$368_CMP0' from module `\fp_divider'.
  Cell `$procmux$377_CMP0' is identical to cell `$procmux$117_CMP0'.
    Redirecting output \Y: $procmux$377_CMP = $procmux$117_CMP
    Removing $eq cell `$procmux$377_CMP0' from module `\fp_divider'.
  Cell `$procmux$381_CMP0' is identical to cell `$procmux$121_CMP0'.
    Redirecting output \Y: $procmux$381_CMP = $procmux$121_CMP
    Removing $eq cell `$procmux$381_CMP0' from module `\fp_divider'.
  Cell `$procmux$382_CMP0' is identical to cell `$procmux$122_CMP0'.
    Redirecting output \Y: $procmux$382_CMP = $procmux$122_CMP
    Removing $eq cell `$procmux$382_CMP0' from module `\fp_divider'.
  Cell `$procmux$391_CMP0' is identical to cell `$procmux$117_CMP0'.
    Redirecting output \Y: $procmux$391_CMP = $procmux$117_CMP
    Removing $eq cell `$procmux$391_CMP0' from module `\fp_divider'.
  Cell `$procmux$395_CMP0' is identical to cell `$procmux$121_CMP0'.
    Redirecting output \Y: $procmux$395_CMP = $procmux$121_CMP
    Removing $eq cell `$procmux$395_CMP0' from module `\fp_divider'.
  Cell `$procmux$396_CMP0' is identical to cell `$procmux$122_CMP0'.
    Redirecting output \Y: $procmux$396_CMP = $procmux$122_CMP
    Removing $eq cell `$procmux$396_CMP0' from module `\fp_divider'.
  Cell `$procmux$407_CMP0' is identical to cell `$procmux$136_CMP0'.
    Redirecting output \Y: $procmux$407_CMP = $procmux$136_CMP
    Removing $eq cell `$procmux$407_CMP0' from module `\fp_divider'.
  Cell `$procmux$422_CMP0' is identical to cell `$procmux$186_CMP0'.
    Redirecting output \Y: $procmux$422_CMP = $procmux$186_CMP
    Removing $eq cell `$procmux$422_CMP0' from module `\fp_divider'.
  Cell `$procmux$437_CMP0' is identical to cell `$procmux$186_CMP0'.
    Redirecting output \Y: $procmux$437_CMP = $procmux$186_CMP
    Removing $eq cell `$procmux$437_CMP0' from module `\fp_divider'.
  Cell `$procmux$448_CMP0' is identical to cell `$procmux$113_CMP0'.
    Redirecting output \Y: $procmux$448_CMP = $procmux$113_CMP
    Removing $eq cell `$procmux$448_CMP0' from module `\fp_divider'.
  Cell `$procmux$452_CMP0' is identical to cell `$procmux$117_CMP0'.
    Redirecting output \Y: $procmux$452_CMP = $procmux$117_CMP
    Removing $eq cell `$procmux$452_CMP0' from module `\fp_divider'.
  Cell `$procmux$456_CMP0' is identical to cell `$procmux$121_CMP0'.
    Redirecting output \Y: $procmux$456_CMP = $procmux$121_CMP
    Removing $eq cell `$procmux$456_CMP0' from module `\fp_divider'.
  Cell `$procmux$457_CMP0' is identical to cell `$procmux$136_CMP0'.
    Redirecting output \Y: $procmux$457_CMP = $procmux$136_CMP
    Removing $eq cell `$procmux$457_CMP0' from module `\fp_divider'.
  Cell `$procmux$472_CMP0' is identical to cell `$procmux$201_CMP0'.
    Redirecting output \Y: $procmux$472_CMP = $procmux$201_CMP
    Removing $eq cell `$procmux$472_CMP0' from module `\fp_divider'.
  Cell `$procmux$494_CMP0' is identical to cell `$procmux$105_CMP0'.
    Redirecting output \Y: $procmux$494_CMP = $procmux$105_CMP
    Removing $eq cell `$procmux$494_CMP0' from module `\fp_divider'.
  Cell `$procmux$495_CMP0' is identical to cell `$procmux$186_CMP0'.
    Redirecting output \Y: $procmux$495_CMP = $procmux$186_CMP
    Removing $eq cell `$procmux$495_CMP0' from module `\fp_divider'.
  Cell `$procmux$511_CMP0' is identical to cell `$procmux$163_CMP0'.
    Redirecting output \Y: $procmux$511_CMP = $procmux$163_CMP
    Removing $eq cell `$procmux$511_CMP0' from module `\fp_divider'.
  Cell `$procmux$533_CMP0' is identical to cell `$procmux$105_CMP0'.
    Redirecting output \Y: $procmux$533_CMP = $procmux$105_CMP
    Removing $eq cell `$procmux$533_CMP0' from module `\fp_divider'.
  Cell `$procmux$534_CMP0' is identical to cell `$procmux$186_CMP0'.
    Redirecting output \Y: $procmux$534_CMP = $procmux$186_CMP
    Removing $eq cell `$procmux$534_CMP0' from module `\fp_divider'.
  Cell `$procmux$546_CMP0' is identical to cell `$procmux$134_CMP0'.
    Redirecting output \Y: $procmux$546_CMP = $procmux$134_CMP
    Removing $eq cell `$procmux$546_CMP0' from module `\fp_divider'.
  Cell `$procmux$547_CMP0' is identical to cell `$procmux$135_CMP0'.
    Redirecting output \Y: $procmux$547_CMP = $procmux$135_CMP
    Removing $eq cell `$procmux$547_CMP0' from module `\fp_divider'.
  Cell `$procmux$548_CMP0' is identical to cell `$procmux$136_CMP0'.
    Redirecting output \Y: $procmux$548_CMP = $procmux$136_CMP
    Removing $eq cell `$procmux$548_CMP0' from module `\fp_divider'.
  Cell `$procmux$564_CMP0' is identical to cell `$procmux$163_CMP0'.
    Redirecting output \Y: $procmux$564_CMP = $procmux$163_CMP
    Removing $eq cell `$procmux$564_CMP0' from module `\fp_divider'.
  Cell `$procmux$565_CMP0' is identical to cell `$procmux$186_CMP0'.
    Redirecting output \Y: $procmux$565_CMP = $procmux$186_CMP
    Removing $eq cell `$procmux$565_CMP0' from module `\fp_divider'.
  Cell `$procmux$572_CMP0' is identical to cell `$procmux$229_CMP0'.
    Redirecting output \Y: $procmux$572_CMP = $procmux$229_CMP
    Removing $eq cell `$procmux$572_CMP0' from module `\fp_divider'.
  Cell `$procmux$595_CMP0' is identical to cell `$procmux$105_CMP0'.
    Redirecting output \Y: $procmux$595_CMP = $procmux$105_CMP
    Removing $eq cell `$procmux$595_CMP0' from module `\fp_divider'.
  Cell `$procmux$607_CMP0' is identical to cell `$procmux$134_CMP0'.
    Redirecting output \Y: $procmux$607_CMP = $procmux$134_CMP
    Removing $eq cell `$procmux$607_CMP0' from module `\fp_divider'.
  Cell `$procmux$608_CMP0' is identical to cell `$procmux$136_CMP0'.
    Redirecting output \Y: $procmux$608_CMP = $procmux$136_CMP
    Removing $eq cell `$procmux$608_CMP0' from module `\fp_divider'.
  Cell `$procmux$654_CMP0' is identical to cell `$procmux$229_CMP0'.
    Redirecting output \Y: $procmux$654_CMP = $procmux$229_CMP
    Removing $eq cell `$procmux$654_CMP0' from module `\fp_divider'.
  Cell `$procmux$655_CMP0' is identical to cell `$procmux$113_CMP0'.
    Redirecting output \Y: $procmux$655_CMP = $procmux$113_CMP
    Removing $eq cell `$procmux$655_CMP0' from module `\fp_divider'.
  Cell `$procmux$659_CMP0' is identical to cell `$procmux$117_CMP0'.
    Redirecting output \Y: $procmux$659_CMP = $procmux$117_CMP
    Removing $eq cell `$procmux$659_CMP0' from module `\fp_divider'.
  Cell `$procmux$663_CMP0' is identical to cell `$procmux$121_CMP0'.
    Redirecting output \Y: $procmux$663_CMP = $procmux$121_CMP
    Removing $eq cell `$procmux$663_CMP0' from module `\fp_divider'.
  Cell `$procmux$664_CMP0' is identical to cell `$procmux$122_CMP0'.
    Redirecting output \Y: $procmux$664_CMP = $procmux$122_CMP
    Removing $eq cell `$procmux$664_CMP0' from module `\fp_divider'.
  Cell `$procmux$668_CMP0' is identical to cell `$procmux$134_CMP0'.
    Redirecting output \Y: $procmux$668_CMP = $procmux$134_CMP
    Removing $eq cell `$procmux$668_CMP0' from module `\fp_divider'.
  Cell `$procmux$669_CMP0' is identical to cell `$procmux$135_CMP0'.
    Redirecting output \Y: $procmux$669_CMP = $procmux$135_CMP
    Removing $eq cell `$procmux$669_CMP0' from module `\fp_divider'.
  Cell `$procmux$670_CMP0' is identical to cell `$procmux$136_CMP0'.
    Redirecting output \Y: $procmux$670_CMP = $procmux$136_CMP
    Removing $eq cell `$procmux$670_CMP0' from module `\fp_divider'.
  Cell `$procmux$674_CMP0' is identical to cell `$procmux$201_CMP0'.
    Redirecting output \Y: $procmux$674_CMP = $procmux$201_CMP
    Removing $eq cell `$procmux$674_CMP0' from module `\fp_divider'.
  Cell `$procmux$678_CMP0' is identical to cell `$procmux$163_CMP0'.
    Redirecting output \Y: $procmux$678_CMP = $procmux$163_CMP
    Removing $eq cell `$procmux$678_CMP0' from module `\fp_divider'.
  Cell `$procmux$701_CMP0' is identical to cell `$procmux$105_CMP0'.
    Redirecting output \Y: $procmux$701_CMP = $procmux$105_CMP
    Removing $eq cell `$procmux$701_CMP0' from module `\fp_divider'.
  Cell `$procmux$702_CMP0' is identical to cell `$procmux$186_CMP0'.
    Redirecting output \Y: $procmux$702_CMP = $procmux$186_CMP
    Removing $eq cell `$procmux$702_CMP0' from module `\fp_divider'.
  Cell `$procmux$706_CMP0' is identical to cell `$procmux$627_CMP0'.
    Redirecting output \Y: $procmux$706_CMP = $procmux$627_CMP
    Removing $eq cell `$procmux$706_CMP0' from module `\fp_divider'.
  Cell `$procmux$710_CMP0' is identical to cell `$procmux$647_CMP0'.
    Redirecting output \Y: $procmux$710_CMP = $procmux$647_CMP
    Removing $logic_not cell `$procmux$710_CMP0' from module `\fp_divider'.
  Cell `$procmux$732_CMP0' is identical to cell `$procmux$627_CMP0'.
    Redirecting output \Y: $procmux$732_CMP = $procmux$627_CMP
    Removing $eq cell `$procmux$732_CMP0' from module `\fp_divider'.
  Cell `$procmux$755_CMP0' is identical to cell `$procmux$647_CMP0'.
    Redirecting output \Y: $procmux$755_CMP = $procmux$647_CMP
    Removing $logic_not cell `$procmux$755_CMP0' from module `\fp_divider'.
  Cell `$procmux$761_CMP0' is identical to cell `$procmux$653_CMP0'.
    Redirecting output \Y: $procmux$761_CMP = $procmux$653_CMP
    Removing $eq cell `$procmux$761_CMP0' from module `\fp_divider'.
  Cell `$procmux$767_CMP0' is identical to cell `$procmux$653_CMP0'.
    Redirecting output \Y: $procmux$767_CMP = $procmux$653_CMP
    Removing $eq cell `$procmux$767_CMP0' from module `\fp_divider'.
  Cell `$procmux$80_CMP0' is identical to cell `$procmux$229_CMP0'.
    Redirecting output \Y: $procmux$80_CMP = $procmux$229_CMP
    Removing $eq cell `$procmux$80_CMP0' from module `\fp_divider'.
  Cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:131$22' is identical to cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:117$17'.
    Redirecting output \Y: $xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:131$22_Y = $procmux$274_Y
    Removing $xor cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:131$22' from module `\fp_divider'.
  Cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:137$26' is identical to cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:117$17'.
    Redirecting output \Y: $xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:137$26_Y = $procmux$274_Y
    Removing $xor cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:137$26' from module `\fp_divider'.
  Cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:151$33' is identical to cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:117$17'.
    Redirecting output \Y: $xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:151$33_Y = $procmux$274_Y
    Removing $xor cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:151$33' from module `\fp_divider'.
  Cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:194$40' is identical to cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:117$17'.
    Redirecting output \Y: $xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:194$40_Y = $procmux$274_Y
    Removing $xor cell `$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:194$40' from module `\fp_divider'.
Removed a total of 85 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fp_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$145 (pure)
    Root of a mux tree: $procmux$162 (pure)
      Replacing known input bits on port B of cell $procmux$160: \a_m [23] -> 1'1
    Root of a mux tree: $procmux$200 (pure)
    Root of a mux tree: $procmux$209 (pure)
    Root of a mux tree: $procmux$228 (pure)
    Root of a mux tree: $procmux$258 (pure)
    Root of a mux tree: $procmux$298 (pure)
      Replacing known input bits on port B of cell $procmux$296: \b_m [23] -> 1'1
    Root of a mux tree: $procmux$331 (pure)
    Root of a mux tree: $procmux$343 (pure)
    Root of a mux tree: $procmux$355 (pure)
    Root of a mux tree: $procmux$366 (pure)
    Root of a mux tree: $procmux$376 (pure)
    Root of a mux tree: $procmux$390 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$421 (pure)
    Root of a mux tree: $procmux$436 (pure)
    Root of a mux tree: $procmux$447 (pure)
    Root of a mux tree: $procmux$471 (pure)
    Root of a mux tree: $procmux$510 (pure)
    Root of a mux tree: $procmux$545 (pure)
    Root of a mux tree: $procmux$563 (pure)
    Root of a mux tree: $procmux$571 (pure)
    Root of a mux tree: $procmux$606 (pure)
    Root of a mux tree: $procmux$626 (pure)
    Root of a mux tree: $procmux$646 (pure)
    Root of a mux tree: $procmux$712 (pure)
    Root of a mux tree: $procmux$734 (pure)
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$760 (pure)
    Root of a mux tree: $procmux$769 (pure)
    Root of a mux tree: $procmux$79 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fp_divider.
    New ctrl vector for $pmux cell $procmux$133: { $auto$opt_reduce.cc:132:opt_mux$797 $procmux$134_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$796: { $procmux$135_CMP $procmux$136_CMP }
  Optimizing cells in module \fp_divider.
Performed a total of 2 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
  removed 85 unused temporary wires.
Removed 1 unused cells and 241 unused wires.

3.6.8. Executing OPT_EXPR pass (perform const folding).

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fp_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$145 (pure)
    Root of a mux tree: $procmux$162 (pure)
    Root of a mux tree: $procmux$200 (pure)
    Root of a mux tree: $procmux$209 (pure)
    Root of a mux tree: $procmux$228 (pure)
    Root of a mux tree: $procmux$258 (pure)
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$331 (pure)
    Root of a mux tree: $procmux$343 (pure)
    Root of a mux tree: $procmux$355 (pure)
    Root of a mux tree: $procmux$366 (pure)
    Root of a mux tree: $procmux$376 (pure)
    Root of a mux tree: $procmux$390 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$421 (pure)
    Root of a mux tree: $procmux$436 (pure)
    Root of a mux tree: $procmux$447 (pure)
    Root of a mux tree: $procmux$471 (pure)
    Root of a mux tree: $procmux$510 (pure)
    Root of a mux tree: $procmux$545 (pure)
    Root of a mux tree: $procmux$563 (pure)
    Root of a mux tree: $procmux$571 (pure)
    Root of a mux tree: $procmux$606 (pure)
    Root of a mux tree: $procmux$626 (pure)
    Root of a mux tree: $procmux$646 (pure)
    Root of a mux tree: $procmux$712 (pure)
    Root of a mux tree: $procmux$734 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$760 (pure)
    Root of a mux tree: $procmux$769 (pure)
    Root of a mux tree: $procmux$79 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fp_divider.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
Removed 1 unused cells and 241 unused wires.

3.6.15. Executing OPT_EXPR pass (perform const folding).

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 25 bits (of 32) from port B of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:92$4 ($sub).
Removed top 22 bits (of 32) from port Y of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:92$4 ($sub).
Removed top 25 bits (of 32) from port B of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:93$5 ($sub).
Removed top 22 bits (of 32) from port Y of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:93$5 ($sub).
Removed top 2 bits (of 10) from port B of cell fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6 ($eq).
Removed top 2 bits (of 10) from port B of cell fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9 ($eq).
Removed top 22 bits (of 32) from port A of cell fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$23 ($eq).
Removed top 24 bits (of 32) from port B of cell fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$23 ($eq).
Removed top 22 bits (of 32) from port A of cell fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$27 ($eq).
Removed top 24 bits (of 32) from port B of cell fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$27 ($eq).
Removed top 31 bits (of 32) from port B of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:178$37 ($sub).
Removed top 22 bits (of 32) from port Y of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:178$37 ($sub).
Removed top 31 bits (of 32) from port B of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:188$39 ($sub).
Removed top 22 bits (of 32) from port Y of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:188$39 ($sub).
Removed top 31 bits (of 32) from port B of cell fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:222$49 ($add).
Removed top 26 bits (of 32) from port Y of cell fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:222$49 ($add).
Removed top 22 bits (of 32) from port A of cell fp_divider.$gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$53 ($gt).
Removed top 24 bits (of 32) from port B of cell fp_divider.$gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$53 ($gt).
Removed top 31 bits (of 32) from port B of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:239$55 ($sub).
Removed top 22 bits (of 32) from port Y of cell fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:239$55 ($sub).
Removed top 22 bits (of 32) from port A of cell fp_divider.$lt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:251$57 ($lt).
Removed top 24 bits (of 32) from port B of cell fp_divider.$lt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:251$57 ($lt).
Removed top 31 bits (of 32) from port B of cell fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:252$58 ($add).
Removed top 22 bits (of 32) from port Y of cell fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:252$58 ($add).
Removed top 31 bits (of 32) from port B of cell fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:265$64 ($add).
Removed top 8 bits (of 32) from port Y of cell fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:265$64 ($add).
Removed top 25 bits (of 32) from port B of cell fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:276$67 ($add).
Removed top 24 bits (of 32) from port Y of cell fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:276$67 ($add).
Removed top 22 bits (of 32) from port A of cell fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:278$68 ($eq).
Removed top 24 bits (of 32) from port B of cell fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:278$68 ($eq).
Removed top 22 bits (of 32) from port A of cell fp_divider.$gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:282$71 ($gt).
Removed top 24 bits (of 32) from port B of cell fp_divider.$gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:282$71 ($gt).
Removed top 2 bits (of 4) from port B of cell fp_divider.$procmux$105_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell fp_divider.$procmux$135_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell fp_divider.$procmux$136_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell fp_divider.$procmux$163_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell fp_divider.$procmux$186_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell fp_divider.$procmux$201_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell fp_divider.$procmux$627_CMP0 ($eq).
Removed top 26 bits (of 32) from wire fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:222$49_Y.
Removed top 8 bits (of 32) from wire fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:265$64_Y.
Removed top 24 bits (of 32) from wire fp_divider.$add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:276$67_Y.
Removed top 22 bits (of 32) from wire fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:178$37_Y.
Removed top 22 bits (of 32) from wire fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:188$39_Y.
Removed top 22 bits (of 32) from wire fp_divider.$sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:92$4_Y.

3.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module fp_divider:
  creating $macc model for $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:222$49 ($add).
  creating $macc model for $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:252$58 ($add).
  creating $macc model for $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:265$64 ($add).
  creating $macc model for $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:276$67 ($add).
  creating $macc model for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:178$37 ($sub).
  creating $macc model for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:188$39 ($sub).
  creating $macc model for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:195$41 ($sub).
  creating $macc model for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:217$47 ($sub).
  creating $macc model for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:239$55 ($sub).
  creating $macc model for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:92$4 ($sub).
  creating $macc model for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:93$5 ($sub).
  creating $alu model for $macc $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:93$5.
  creating $alu model for $macc $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:92$4.
  creating $alu model for $macc $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:239$55.
  creating $alu model for $macc $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:217$47.
  creating $alu model for $macc $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:195$41.
  creating $alu model for $macc $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:188$39.
  creating $alu model for $macc $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:178$37.
  creating $alu model for $macc $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:276$67.
  creating $alu model for $macc $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:265$64.
  creating $alu model for $macc $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:252$58.
  creating $alu model for $macc $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:222$49.
  creating $alu model for $ge$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:215$46 ($ge): merged with $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:217$47.
  creating $alu model for $gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$53 ($gt): new $alu
  creating $alu model for $gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:282$71 ($gt): new $alu
  creating $alu model for $lt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:251$57 ($lt): merged with $gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$53.
  creating $alu model for $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:278$68 ($eq): merged with $gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$53.
  creating $alu cell for $gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:282$71: $auto$alumacc.cc:474:replace_alu$806
  creating $alu cell for $gt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$53, $lt$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:251$57, $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:278$68: $auto$alumacc.cc:474:replace_alu$813
  creating $alu cell for $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:222$49: $auto$alumacc.cc:474:replace_alu$826
  creating $alu cell for $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:252$58: $auto$alumacc.cc:474:replace_alu$829
  creating $alu cell for $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:265$64: $auto$alumacc.cc:474:replace_alu$832
  creating $alu cell for $add$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:276$67: $auto$alumacc.cc:474:replace_alu$835
  creating $alu cell for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:178$37: $auto$alumacc.cc:474:replace_alu$838
  creating $alu cell for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:188$39: $auto$alumacc.cc:474:replace_alu$841
  creating $alu cell for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:195$41: $auto$alumacc.cc:474:replace_alu$844
  creating $alu cell for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:217$47, $ge$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:215$46: $auto$alumacc.cc:474:replace_alu$847
  creating $alu cell for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:239$55: $auto$alumacc.cc:474:replace_alu$860
  creating $alu cell for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:92$4: $auto$alumacc.cc:474:replace_alu$863
  creating $alu cell for $sub$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:93$5: $auto$alumacc.cc:474:replace_alu$866
  created 13 $alu and 0 $macc cells.

3.9. Executing SHARE pass (SAT-based resource sharing).

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $mux cell `$procmux$115' in module `fp_divider'.
Optimizing away select inverter for $mux cell `$procmux$212' in module `fp_divider'.
Optimizing away select inverter for $mux cell `$procmux$364' in module `fp_divider'.
Optimizing away select inverter for $mux cell `$procmux$374' in module `fp_divider'.
Optimizing away select inverter for $mux cell `$procmux$388' in module `fp_divider'.
Optimizing away select inverter for $mux cell `$procmux$450' in module `fp_divider'.
Optimizing away select inverter for $mux cell `$procmux$657' in module `fp_divider'.

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fp_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$145 (pure)
    Root of a mux tree: $procmux$162 (pure)
    Root of a mux tree: $procmux$200 (pure)
    Root of a mux tree: $procmux$209 (pure)
    Root of a mux tree: $procmux$228 (pure)
    Root of a mux tree: $procmux$258 (pure)
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$331 (pure)
    Root of a mux tree: $procmux$343 (pure)
    Root of a mux tree: $procmux$355 (pure)
    Root of a mux tree: $procmux$366 (pure)
    Root of a mux tree: $procmux$376 (pure)
    Root of a mux tree: $procmux$390 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$421 (pure)
    Root of a mux tree: $procmux$436 (pure)
    Root of a mux tree: $procmux$447 (pure)
    Root of a mux tree: $procmux$471 (pure)
    Root of a mux tree: $procmux$510 (pure)
    Root of a mux tree: $procmux$545 (pure)
    Root of a mux tree: $procmux$563 (pure)
    Root of a mux tree: $procmux$571 (pure)
    Root of a mux tree: $procmux$606 (pure)
    Root of a mux tree: $procmux$626 (pure)
    Root of a mux tree: $procmux$646 (pure)
    Root of a mux tree: $procmux$712 (pure)
    Root of a mux tree: $procmux$734 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$760 (pure)
    Root of a mux tree: $procmux$769 (pure)
    Root of a mux tree: $procmux$79 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fp_divider.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$822: { $auto$alumacc.cc:490:replace_alu$814 [0] $auto$alumacc.cc:490:replace_alu$814 [1] $auto$alumacc.cc:490:replace_alu$814 [2] $auto$alumacc.cc:490:replace_alu$814 [3] $auto$alumacc.cc:490:replace_alu$814 [4] $auto$alumacc.cc:490:replace_alu$814 [5] $auto$alumacc.cc:490:replace_alu$814 [6] $auto$alumacc.cc:490:replace_alu$814 [7] $auto$alumacc.cc:490:replace_alu$814 [8] $auto$alumacc.cc:490:replace_alu$814 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$854: { $auto$alumacc.cc:490:replace_alu$848 [0] $auto$alumacc.cc:490:replace_alu$848 [1] $auto$alumacc.cc:490:replace_alu$848 [2] $auto$alumacc.cc:490:replace_alu$848 [3] $auto$alumacc.cc:490:replace_alu$848 [4] $auto$alumacc.cc:490:replace_alu$848 [5] $auto$alumacc.cc:490:replace_alu$848 [6] $auto$alumacc.cc:490:replace_alu$848 [7] $auto$alumacc.cc:490:replace_alu$848 [8] $auto$alumacc.cc:490:replace_alu$848 [9] $auto$alumacc.cc:490:replace_alu$848 [10] $auto$alumacc.cc:490:replace_alu$848 [11] $auto$alumacc.cc:490:replace_alu$848 [12] $auto$alumacc.cc:490:replace_alu$848 [13] $auto$alumacc.cc:490:replace_alu$848 [14] $auto$alumacc.cc:490:replace_alu$848 [15] $auto$alumacc.cc:490:replace_alu$848 [16] $auto$alumacc.cc:490:replace_alu$848 [17] $auto$alumacc.cc:490:replace_alu$848 [18] $auto$alumacc.cc:490:replace_alu$848 [19] $auto$alumacc.cc:490:replace_alu$848 [20] $auto$alumacc.cc:490:replace_alu$848 [21] $auto$alumacc.cc:490:replace_alu$848 [22] $auto$alumacc.cc:490:replace_alu$848 [23] $auto$alumacc.cc:490:replace_alu$848 [24] $auto$alumacc.cc:490:replace_alu$848 [25] $auto$alumacc.cc:490:replace_alu$848 [26] $auto$alumacc.cc:490:replace_alu$848 [27] $auto$alumacc.cc:490:replace_alu$848 [28] $auto$alumacc.cc:490:replace_alu$848 [29] $auto$alumacc.cc:490:replace_alu$848 [30] $auto$alumacc.cc:490:replace_alu$848 [31] $auto$alumacc.cc:490:replace_alu$848 [32] $auto$alumacc.cc:490:replace_alu$848 [33] $auto$alumacc.cc:490:replace_alu$848 [34] $auto$alumacc.cc:490:replace_alu$848 [35] $auto$alumacc.cc:490:replace_alu$848 [36] $auto$alumacc.cc:490:replace_alu$848 [37] $auto$alumacc.cc:490:replace_alu$848 [38] $auto$alumacc.cc:490:replace_alu$848 [39] $auto$alumacc.cc:490:replace_alu$848 [40] $auto$alumacc.cc:490:replace_alu$848 [41] $auto$alumacc.cc:490:replace_alu$848 [42] $auto$alumacc.cc:490:replace_alu$848 [43] $auto$alumacc.cc:490:replace_alu$848 [44] $auto$alumacc.cc:490:replace_alu$848 [45] $auto$alumacc.cc:490:replace_alu$848 [46] $auto$alumacc.cc:490:replace_alu$848 [47] $auto$alumacc.cc:490:replace_alu$848 [48] $auto$alumacc.cc:490:replace_alu$848 [49] $auto$alumacc.cc:490:replace_alu$848 [50] }
  Optimizing cells in module \fp_divider.
Performed a total of 2 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

3.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
  removing unused `$not' cell `$auto$alumacc.cc:58:get_gt$820'.
  removed 12 unused temporary wires.
Removed 2 unused cells and 253 unused wires.

3.10.8. Executing OPT_EXPR pass (perform const folding).

3.10.9. Rerunning OPT passes. (Maybe there is more to do..)

3.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fp_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$145 (pure)
    Root of a mux tree: $procmux$162 (pure)
    Root of a mux tree: $procmux$200 (pure)
    Root of a mux tree: $procmux$209 (pure)
    Root of a mux tree: $procmux$228 (pure)
    Root of a mux tree: $procmux$258 (pure)
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$331 (pure)
    Root of a mux tree: $procmux$343 (pure)
    Root of a mux tree: $procmux$355 (pure)
    Root of a mux tree: $procmux$366 (pure)
    Root of a mux tree: $procmux$376 (pure)
    Root of a mux tree: $procmux$390 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$421 (pure)
    Root of a mux tree: $procmux$436 (pure)
    Root of a mux tree: $procmux$447 (pure)
    Root of a mux tree: $procmux$471 (pure)
    Root of a mux tree: $procmux$510 (pure)
    Root of a mux tree: $procmux$545 (pure)
    Root of a mux tree: $procmux$563 (pure)
    Root of a mux tree: $procmux$571 (pure)
    Root of a mux tree: $procmux$606 (pure)
    Root of a mux tree: $procmux$626 (pure)
    Root of a mux tree: $procmux$646 (pure)
    Root of a mux tree: $procmux$712 (pure)
    Root of a mux tree: $procmux$734 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$760 (pure)
    Root of a mux tree: $procmux$769 (pure)
    Root of a mux tree: $procmux$79 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fp_divider.
Performed a total of 0 changes.

3.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

3.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
Removed 2 unused cells and 253 unused wires.

3.10.15. Executing OPT_EXPR pass (perform const folding).

3.10.16. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register fp_divider.state.

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\state' from module `\fp_divider'.
  found $dff cell for state register: $procdff$775
  root of input selection tree: $0\state[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \rst
  found ctrl input: $procmux$653_CMP
  found ctrl input: $procmux$229_CMP
  found ctrl input: $procmux$113_CMP
  found ctrl input: $procmux$117_CMP
  found ctrl input: $procmux$121_CMP
  found ctrl input: $procmux$122_CMP
  found ctrl input: $procmux$134_CMP
  found ctrl input: $procmux$135_CMP
  found ctrl input: $procmux$136_CMP
  found ctrl input: $procmux$201_CMP
  found ctrl input: $procmux$163_CMP
  found ctrl input: $procmux$105_CMP
  found ctrl input: $procmux$186_CMP
  found ctrl input: $procmux$627_CMP
  found ctrl input: $procmux$647_CMP
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:294$72_Y
  found state code: 4'0000
  found state code: 4'1110
  found state code: 4'1101
  found ctrl input: $auto$rtlil.cc:1698:Or$824
  found state code: 4'1100
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$54_Y
  found state code: 4'1011
  found state code: 4'1010
  found ctrl input: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:219$48_Y
  found state code: 4'0111
  found state code: 4'1001
  found state code: 4'1000
  found ctrl input: \b_m [23]
  found state code: 4'0110
  found ctrl input: \a_m [23]
  found state code: 4'0101
  found ctrl input: $logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$12_Y
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$15_Y
  found ctrl input: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6_Y
  found ctrl input: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9_Y
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$25_Y
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$29_Y
  found state code: 4'0100
  found state code: 4'0011
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:81$3_Y
  found state code: 4'0010
  found ctrl input: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:71$2_Y
  found state code: 4'0001
  found ctrl output: $procmux$105_CMP
  found ctrl output: $procmux$113_CMP
  found ctrl output: $procmux$117_CMP
  found ctrl output: $procmux$121_CMP
  found ctrl output: $procmux$122_CMP
  found ctrl output: $procmux$134_CMP
  found ctrl output: $procmux$135_CMP
  found ctrl output: $procmux$136_CMP
  found ctrl output: $procmux$163_CMP
  found ctrl output: $procmux$186_CMP
  found ctrl output: $procmux$201_CMP
  found ctrl output: $procmux$229_CMP
  found ctrl output: $procmux$627_CMP
  found ctrl output: $procmux$647_CMP
  found ctrl output: $procmux$653_CMP
  ctrl inputs: { $auto$rtlil.cc:1698:Or$824 $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:294$72_Y $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$54_Y $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:219$48_Y $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$29_Y $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$25_Y $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$15_Y $logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$12_Y $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9_Y $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6_Y $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:81$3_Y $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:71$2_Y \b_m [23] \a_m [23] \rst }
  ctrl outputs: { $procmux$653_CMP $procmux$647_CMP $procmux$627_CMP $procmux$229_CMP $procmux$201_CMP $procmux$186_CMP $procmux$163_CMP $procmux$136_CMP $procmux$135_CMP $procmux$134_CMP $procmux$122_CMP $procmux$121_CMP $procmux$117_CMP $procmux$113_CMP $procmux$105_CMP $0\state[3:0] }
  transition:     4'0000 15'-----------0--0 ->     4'0000 19'0100000000000000000
  transition:     4'0000 15'-----------1--0 ->     4'0001 19'0100000000000000001
  transition:     4'0000 15'--------------1 ->     4'0000 19'0100000000000000000
  transition:     4'1000 15'---0----------0 ->     4'0111 19'0000000001000000111
  transition:     4'1000 15'---1----------0 ->     4'1001 19'0000000001000001001
  transition:     4'1000 15'--------------1 ->     4'0000 19'0000000001000000000
  transition:     4'0100 15'-------------00 ->     4'0100 19'0000001000000000100
  transition:     4'0100 15'-------------10 ->     4'0101 19'0000001000000000101
  transition:     4'0100 15'--------------1 ->     4'0000 19'0000001000000000000
  transition:     4'1100 15'--------------0 ->     4'1101 19'0000000000000101101
  transition:     4'1100 15'--------------1 ->     4'0000 19'0000000000000100000
  transition:     4'0010 15'--------------0 ->     4'0011 19'0000010000000000011
  transition:     4'0010 15'--------------1 ->     4'0000 19'0000010000000000000
  transition:     4'1010 15'--0-----------0 ->     4'1011 19'0000000000010001011
  transition:     4'1010 15'--1-----------0 ->     4'1010 19'0000000000010001010
  transition:     4'1010 15'--------------1 ->     4'0000 19'0000000000010000000
  transition:     4'0110 15'--------------0 ->     4'0111 19'0000000100000000111
  transition:     4'0110 15'--------------1 ->     4'0000 19'0000000100000000000
  transition:     4'1110 15'-0------------0 ->     4'1110 19'1000000000000001110
  transition:     4'1110 15'-1------------0 ->     4'0000 19'1000000000000000000
  transition:     4'1110 15'--------------1 ->     4'0000 19'1000000000000000000
  transition:     4'0001 15'----------0---0 ->     4'0001 19'0010000000000000001
  transition:     4'0001 15'----------1---0 ->     4'0010 19'0010000000000000010
  transition:     4'0001 15'--------------1 ->     4'0000 19'0010000000000000000
  transition:     4'1001 15'--------------0 ->     4'1010 19'0000000000100001010
  transition:     4'1001 15'--------------1 ->     4'0000 19'0000000000100000000
  transition:     4'0101 15'------------0-0 ->     4'0101 19'0000100000000000101
  transition:     4'0101 15'------------1-0 ->     4'0110 19'0000100000000000110
  transition:     4'0101 15'--------------1 ->     4'0000 19'0000100000000000000
  transition:     4'1101 15'--------------0 ->     4'1110 19'0001000000000001110
  transition:     4'1101 15'--------------1 ->     4'0000 19'0001000000000000000
  transition:     4'0011 15'----000000----0 ->     4'0100 19'0000000000000010100
  transition:     4'0011 15'----100000----0 ->     4'1110 19'0000000000000011110
  transition:     4'0011 15'-----10000----0 ->     4'1110 19'0000000000000011110
  transition:     4'0011 15'------0010----0 ->     4'1110 19'0000000000000011110
  transition:     4'0011 15'------00-1----0 ->     4'1110 19'0000000000000011110
  transition:     4'0011 15'------10------0 ->     4'1110 19'0000000000000011110
  transition:     4'0011 15'-------1------0 ->     4'1110 19'0000000000000011110
  transition:     4'0011 15'--------------1 ->     4'0000 19'0000000000000010000
  transition:     4'1011 15'0-------------0 ->     4'1011 19'0000000000001001011
  transition:     4'1011 15'1-------------0 ->     4'1100 19'0000000000001001100
  transition:     4'1011 15'--------------1 ->     4'0000 19'0000000000001000000
  transition:     4'0111 15'--------------0 ->     4'1000 19'0000000010000001000
  transition:     4'0111 15'--------------1 ->     4'0000 19'0000000010000000000

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$869' from module `\fp_divider'.

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
  removing unused `$eq' cell `$procmux$105_CMP0'.
  removing unused `$eq' cell `$procmux$113_CMP0'.
  removing unused `$eq' cell `$procmux$117_CMP0'.
  removing unused `$eq' cell `$procmux$121_CMP0'.
  removing unused `$eq' cell `$procmux$122_CMP0'.
  removing unused `$eq' cell `$procmux$134_CMP0'.
  removing unused `$eq' cell `$procmux$135_CMP0'.
  removing unused `$eq' cell `$procmux$136_CMP0'.
  removing unused `$eq' cell `$procmux$163_CMP0'.
  removing unused `$eq' cell `$procmux$186_CMP0'.
  removing unused `$eq' cell `$procmux$201_CMP0'.
  removing unused `$eq' cell `$procmux$229_CMP0'.
  removing unused `$eq' cell `$procmux$627_CMP0'.
  removing unused `$logic_not' cell `$procmux$647_CMP0'.
  removing unused `$mux' cell `$procmux$650'.
  removing unused `$eq' cell `$procmux$653_CMP0'.
  removing unused `$pmux' cell `$procmux$652'.
  removing unused `$mux' cell `$procmux$657'.
  removing unused `$mux' cell `$procmux$661'.
  removing unused `$mux' cell `$procmux$666'.
  removing unused `$mux' cell `$procmux$672'.
  removing unused `$mux' cell `$procmux$676'.
  removing unused `$mux' cell `$procmux$680'.
  removing unused `$mux' cell `$procmux$685'.
  removing unused `$mux' cell `$procmux$688'.
  removing unused `$mux' cell `$procmux$693'.
  removing unused `$mux' cell `$procmux$696'.
  removing unused `$mux' cell `$procmux$699'.
  removing unused `$mux' cell `$procmux$704'.
  removing unused `$mux' cell `$procmux$708'.
  removing unused `$mux' cell `$procmux$712'.
  removing unused `$dff' cell `$procdff$775'.
  removed 32 unused temporary wires.
Removed 34 unused cells and 285 unused wires.

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$869' from module `\fp_divider'.
  Removing unused output signal $0\state[3:0] [0].
  Removing unused output signal $0\state[3:0] [1].
  Removing unused output signal $0\state[3:0] [2].
  Removing unused output signal $0\state[3:0] [3].

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\state$869' from module `\fp_divider' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> --------------1
  1000 -> -------------1-
  0100 -> ------------1--
  1100 -> -----------1---
  0010 -> ----------1----
  1010 -> ---------1-----
  0110 -> --------1------
  1110 -> -------1-------
  0001 -> ------1--------
  1001 -> -----1---------
  0101 -> ----1----------
  1101 -> ---1-----------
  0011 -> --1------------
  1011 -> -1-------------
  0111 -> 1--------------

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\state$869' from module `\fp_divider':
-------------------------------------

  Information on FSM $fsm$\state$869 (\state):

  Number of input signals:   15
  Number of output signals:  15
  Number of state bits:      15

  Input signals:
    0: \rst
    1: \a_m [23]
    2: \b_m [23]
    3: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:71$2_Y
    4: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:81$3_Y
    5: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6_Y
    6: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9_Y
    7: $logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$12_Y
    8: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$15_Y
    9: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$25_Y
   10: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$29_Y
   11: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:219$48_Y
   12: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$54_Y
   13: $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:294$72_Y
   14: $auto$rtlil.cc:1698:Or$824

  Output signals:
    0: $procmux$105_CMP
    1: $procmux$113_CMP
    2: $procmux$117_CMP
    3: $procmux$121_CMP
    4: $procmux$122_CMP
    5: $procmux$134_CMP
    6: $procmux$135_CMP
    7: $procmux$136_CMP
    8: $procmux$163_CMP
    9: $procmux$186_CMP
   10: $procmux$201_CMP
   11: $procmux$229_CMP
   12: $procmux$627_CMP
   13: $procmux$647_CMP
   14: $procmux$653_CMP

  State encoding:
    0: 15'--------------1  <RESET STATE>
    1: 15'-------------1-
    2: 15'------------1--
    3: 15'-----------1---
    4: 15'----------1----
    5: 15'---------1-----
    6: 15'--------1------
    7: 15'-------1-------
    8: 15'------1--------
    9: 15'-----1---------
   10: 15'----1----------
   11: 15'---1-----------
   12: 15'--1------------
   13: 15'-1-------------
   14: 15'1--------------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 15'-----------0--0   ->     0 15'010000000000000
      1:     0 15'--------------1   ->     0 15'010000000000000
      2:     0 15'-----------1--0   ->     8 15'010000000000000
      3:     1 15'--------------1   ->     0 15'000000000100000
      4:     1 15'---1----------0   ->     9 15'000000000100000
      5:     1 15'---0----------0   ->    14 15'000000000100000
      6:     2 15'--------------1   ->     0 15'000000100000000
      7:     2 15'-------------00   ->     2 15'000000100000000
      8:     2 15'-------------10   ->    10 15'000000100000000
      9:     3 15'--------------1   ->     0 15'000000000000010
     10:     3 15'--------------0   ->    11 15'000000000000010
     11:     4 15'--------------1   ->     0 15'000001000000000
     12:     4 15'--------------0   ->    12 15'000001000000000
     13:     5 15'--------------1   ->     0 15'000000000001000
     14:     5 15'--1-----------0   ->     5 15'000000000001000
     15:     5 15'--0-----------0   ->    13 15'000000000001000
     16:     6 15'--------------1   ->     0 15'000000010000000
     17:     6 15'--------------0   ->    14 15'000000010000000
     18:     7 15'-1------------0   ->     0 15'100000000000000
     19:     7 15'--------------1   ->     0 15'100000000000000
     20:     7 15'-0------------0   ->     7 15'100000000000000
     21:     8 15'--------------1   ->     0 15'001000000000000
     22:     8 15'----------1---0   ->     4 15'001000000000000
     23:     8 15'----------0---0   ->     8 15'001000000000000
     24:     9 15'--------------1   ->     0 15'000000000010000
     25:     9 15'--------------0   ->     5 15'000000000010000
     26:    10 15'--------------1   ->     0 15'000010000000000
     27:    10 15'------------1-0   ->     6 15'000010000000000
     28:    10 15'------------0-0   ->    10 15'000010000000000
     29:    11 15'--------------1   ->     0 15'000100000000000
     30:    11 15'--------------0   ->     7 15'000100000000000
     31:    12 15'--------------1   ->     0 15'000000000000001
     32:    12 15'----000000----0   ->     2 15'000000000000001
     33:    12 15'----100000----0   ->     7 15'000000000000001
     34:    12 15'-----10000----0   ->     7 15'000000000000001
     35:    12 15'------0010----0   ->     7 15'000000000000001
     36:    12 15'------00-1----0   ->     7 15'000000000000001
     37:    12 15'------10------0   ->     7 15'000000000000001
     38:    12 15'-------1------0   ->     7 15'000000000000001
     39:    13 15'--------------1   ->     0 15'000000000000100
     40:    13 15'1-------------0   ->     3 15'000000000000100
     41:    13 15'0-------------0   ->    13 15'000000000000100
     42:    14 15'--------------1   ->     0 15'000000001000000
     43:    14 15'--------------0   ->     1 15'000000001000000

-------------------------------------

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\state$869' from module `\fp_divider'.

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$960' in module `fp_divider' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$891' in module `fp_divider' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$899' (1) in module `\fp_divider' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$898 = \rst'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$964' in module `fp_divider' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$902' in module `fp_divider' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1012' in module `fp_divider' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1008' in module `fp_divider' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$1003' in module `fp_divider' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$999' in module `fp_divider' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$995' in module `fp_divider' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$991' in module `fp_divider' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$986' in module `fp_divider' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$906' in module `fp_divider' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$927' in module `fp_divider' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$973' in module `fp_divider' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$910' in module `fp_divider' with $logic_not.

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$995' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1012'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$994 = $auto$fsm_map.cc:74:implement_pattern_cache$1011
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$995' from module `\fp_divider'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$991' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1012'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$990 = $auto$fsm_map.cc:74:implement_pattern_cache$1011
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$991' from module `\fp_divider'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$964' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1012'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$963 = $auto$fsm_map.cc:74:implement_pattern_cache$1011
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$964' from module `\fp_divider'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$927' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1012'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$926 = $auto$fsm_map.cc:74:implement_pattern_cache$1011
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$927' from module `\fp_divider'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$902' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$1012'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$901 = $auto$fsm_map.cc:74:implement_pattern_cache$1011
    Removing $not cell `$auto$fsm_map.cc:77:implement_pattern_cache$902' from module `\fp_divider'.
Removed a total of 5 cells.

3.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
  removed 24 unused temporary wires.
Removed 34 unused cells and 309 unused wires.

3.12.5. Finished fast OPT passes.

3.13. Executing MEMORY pass.

3.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
Removed 34 unused cells and 309 unused wires.

3.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
Removed 34 unused cells and 309 unused wires.

3.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
Removed 34 unused cells and 309 unused wires.

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$procmux$86' (mux_bool) in module `\fp_divider' with constant driver `$procmux$86_Y = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$29_Y'.
Replacing $mux cell `$procmux$729' in module `fp_divider' with inverter.
Replacing $mux cell `$procmux$752' in module `fp_divider' with inverter.
Replacing $mux cell `$procmux$764' in module `fp_divider' with inverter.
Replacing $mux cell `$procmux$100' in module `fp_divider' with or-gate.
Replacing $mux cell `$procmux$103' in module `fp_divider' with or-gate.
Replacing $mux cell `$procmux$131' in module `fp_divider' with or-gate.
Replacing $mux cell `$procmux$160' in module `fp_divider' with or-gate.
Replacing $mux cell `$procmux$265' in module `fp_divider' with or-gate.
Replacing $mux cell `$procmux$279' in module `fp_divider' with or-gate.
Replacing $mux cell `$procmux$282' in module `fp_divider' with or-gate.
Replacing $mux cell `$procmux$296' in module `fp_divider' with or-gate.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
  removed 1 unused temporary wires.
Removed 34 unused cells and 310 unused wires.

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fp_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$145 (pure)
    Root of a mux tree: $procmux$162 (pure)
    Root of a mux tree: $procmux$200 (pure)
    Root of a mux tree: $procmux$209 (pure)
    Root of a mux tree: $procmux$228 (pure)
    Root of a mux tree: $procmux$258 (pure)
    Root of a mux tree: $procmux$276 (pure)
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$331 (pure)
    Root of a mux tree: $procmux$343 (pure)
    Root of a mux tree: $procmux$355 (pure)
    Root of a mux tree: $procmux$366 (pure)
    Root of a mux tree: $procmux$376 (pure)
    Root of a mux tree: $procmux$390 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$421 (pure)
    Root of a mux tree: $procmux$436 (pure)
    Root of a mux tree: $procmux$447 (pure)
    Root of a mux tree: $procmux$471 (pure)
    Root of a mux tree: $procmux$510 (pure)
    Root of a mux tree: $procmux$545 (pure)
    Root of a mux tree: $procmux$563 (pure)
    Root of a mux tree: $procmux$571 (pure)
    Root of a mux tree: $procmux$606 (pure)
    Root of a mux tree: $procmux$626 (pure)
    Root of a mux tree: $procmux$646 (pure)
    Root of a mux tree: $procmux$734 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$760 (pure)
    Root of a mux tree: $procmux$769 (pure)
    Root of a mux tree: $procmux$79 (pure)
    Root of a mux tree: $procmux$97 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fp_divider.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$796: { \state [6] \state [14] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$967: { $auto$fsm_map.cc:118:implement_pattern_cache$961 $auto$fsm_map.cc:118:implement_pattern_cache$957 $auto$fsm_map.cc:118:implement_pattern_cache$949 $auto$fsm_map.cc:118:implement_pattern_cache$945 $auto$fsm_map.cc:118:implement_pattern_cache$941 $auto$fsm_map.cc:118:implement_pattern_cache$937 $auto$fsm_map.cc:118:implement_pattern_cache$953 $auto$fsm_map.cc:118:implement_pattern_cache$965 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$913: { $auto$fsm_map.cc:118:implement_pattern_cache$907 $auto$fsm_map.cc:118:implement_pattern_cache$911 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$900: { \rst $auto$fsm_map.cc:118:implement_pattern_cache$892 $auto$fsm_map.cc:118:implement_pattern_cache$896 }
    Consolidated identical input bits for $mux cell $procmux$235:
      Old ports: A=8'00000000, B=8'11111111, Y=$procmux$235_Y
      New ports: A=1'0, B=1'1, Y=$procmux$235_Y [0]
      New connections: $procmux$235_Y [7:1] = { $procmux$235_Y [0] $procmux$235_Y [0] $procmux$235_Y [0] $procmux$235_Y [0] $procmux$235_Y [0] $procmux$235_Y [0] $procmux$235_Y [0] }
  Optimizing cells in module \fp_divider.
Performed a total of 5 changes.

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

3.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
Removed 34 unused cells and 310 unused wires.

3.17.8. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$procmux$235' (mux_bool) in module `\fp_divider' with constant driver `$procmux$235_Y [7] = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$29_Y'.

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fp_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$133 (pure)
    Root of a mux tree: $procmux$145 (pure)
    Root of a mux tree: $procmux$162 (pure)
    Root of a mux tree: $procmux$200 (pure)
    Root of a mux tree: $procmux$209 (pure)
    Root of a mux tree: $procmux$228 (pure)
    Root of a mux tree: $procmux$258 (pure)
    Root of a mux tree: $procmux$276 (pure)
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$331 (pure)
    Root of a mux tree: $procmux$343 (pure)
    Root of a mux tree: $procmux$355 (pure)
    Root of a mux tree: $procmux$366 (pure)
    Root of a mux tree: $procmux$376 (pure)
    Root of a mux tree: $procmux$390 (pure)
    Root of a mux tree: $procmux$406 (pure)
    Root of a mux tree: $procmux$421 (pure)
    Root of a mux tree: $procmux$436 (pure)
    Root of a mux tree: $procmux$447 (pure)
    Root of a mux tree: $procmux$471 (pure)
    Root of a mux tree: $procmux$510 (pure)
    Root of a mux tree: $procmux$545 (pure)
    Root of a mux tree: $procmux$563 (pure)
    Root of a mux tree: $procmux$571 (pure)
    Root of a mux tree: $procmux$606 (pure)
    Root of a mux tree: $procmux$626 (pure)
    Root of a mux tree: $procmux$646 (pure)
    Root of a mux tree: $procmux$734 (pure)
    Root of a mux tree: $procmux$757 (pure)
    Root of a mux tree: $procmux$760 (pure)
    Root of a mux tree: $procmux$769 (pure)
    Root of a mux tree: $procmux$79 (pure)
    Root of a mux tree: $procmux$97 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fp_divider.
Performed a total of 0 changes.

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

3.17.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
  removed 1 unused temporary wires.
Removed 34 unused cells and 311 unused wires.

3.17.15. Executing OPT_EXPR pass (perform const folding).

3.17.16. Finished OPT passes. (There is nothing left to do.)

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:71$2 ($logic_and) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:81$3 ($logic_and) with simplemap.
Mapping fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6 ($eq) with simplemap.
Mapping fp_divider.$ne$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$7 ($reduce_bool) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$8 ($logic_and) with simplemap.
Mapping fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9 ($eq) with simplemap.
Mapping fp_divider.$ne$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$10 ($reduce_bool) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$11 ($logic_and) with simplemap.
Mapping fp_divider.$logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$12 ($logic_or) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$15 ($logic_and) with simplemap.
Mapping fp_divider.$xor$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:117$17 ($xor) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$958 ($and) with simplemap.
Mapping fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$23 ($eq) with simplemap.
Mapping fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$24 ($logic_not) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$25 ($logic_and) with simplemap.
Mapping fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$27 ($eq) with simplemap.
Mapping fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$28 ($logic_not) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:142$29 ($logic_and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:52:get_lt$809 ($xor) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$962 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$960 ($logic_not) with simplemap.

3.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 1
Parameter \B_SIGNED = 1
Parameter \A_WIDTH = 8
Parameter \B_WIDTH = 10
Parameter \Y_WIDTH = 10
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=8\B_WIDTH=10\Y_WIDTH=10'.

3.18.3. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$806 using $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=8\B_WIDTH=10\Y_WIDTH=10.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$891 ($logic_not) with simplemap.
Mapping fp_divider.$auto$opt_reduce.cc:126:opt_mux$796 ($reduce_or) with simplemap.
Mapping fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:219$48 ($eq) with simplemap.
Mapping fp_divider.$ne$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:232$50 ($reduce_bool) with simplemap.
Mapping fp_divider.$or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:232$51 ($or) with simplemap.
Mapping fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$52 ($not) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$893 ($and) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$54 ($logic_and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$895 ($eq) with simplemap.
Mapping fp_divider.$or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:256$60 ($or) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:87:get_of$810 ($xor) with simplemap.
Mapping fp_divider.$or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:264$62 ($or) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:264$63 ($logic_and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$897 ($and) with simplemap.
Mapping fp_divider.$eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:266$65 ($eq) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:278$70 ($logic_and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:144:implement_pattern_cache$900 ($reduce_or) with simplemap.
Mapping fp_divider.$logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:294$72 ($logic_and) with simplemap.
Mapping fp_divider.$procmux$77 ($mux) with simplemap.

3.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=2'.

3.18.5. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$79 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping fp_divider.$procmux$82 ($mux) with simplemap.
Mapping fp_divider.$procmux$88 ($mux) with simplemap.
Mapping fp_divider.$procmux$91 ($mux) with simplemap.
Mapping fp_divider.$procmux$97 ($mux) with simplemap.
Mapping fp_divider.$procmux$100 ($or) with simplemap.
Mapping fp_divider.$procmux$103 ($or) with simplemap.
Mapping fp_divider.$procmux$110 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$948 ($eq) with simplemap.

3.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=4'.

3.18.7. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$112 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=4.
Mapping fp_divider.$procmux$115 ($mux) with simplemap.
Mapping fp_divider.$procmux$119 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$946 ($and) with simplemap.
Mapping fp_divider.$procmux$131 ($or) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$944 ($eq) with simplemap.
Mapping fp_divider.$procmux$133 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$942 ($and) with simplemap.

3.18.8. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 50
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=50\S_WIDTH=2'.

3.18.9. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$145 using $paramod\_90_pmux\WIDTH=50\S_WIDTH=2.
Mapping fp_divider.$procmux$160 ($or) with simplemap.

3.18.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=3'.

3.18.11. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$162 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=3.
Mapping fp_divider.$procmux$165 ($mux) with simplemap.
Mapping fp_divider.$procmux$168 ($mux) with simplemap.
Mapping fp_divider.$procmux$171 ($mux) with simplemap.
Mapping fp_divider.$procmux$174 ($mux) with simplemap.
Mapping fp_divider.$procmux$177 ($mux) with simplemap.
Mapping fp_divider.$procmux$180 ($mux) with simplemap.
Mapping fp_divider.$procmux$183 ($mux) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$813 using $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=8\B_WIDTH=10\Y_WIDTH=10.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$940 ($eq) with simplemap.
Mapping fp_divider.$procmux$198 ($mux) with simplemap.

3.18.12. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 23
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=23\S_WIDTH=2'.

3.18.13. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$200 using $paramod\_90_pmux\WIDTH=23\S_WIDTH=2.
Mapping fp_divider.$procmux$207 ($mux) with simplemap.

3.18.14. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 23
Parameter \S_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=23\S_WIDTH=4'.

3.18.15. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$209 using $paramod\_90_pmux\WIDTH=23\S_WIDTH=4.
Mapping fp_divider.$procmux$212 ($mux) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:52:get_lt$816 ($xor) with simplemap.
Mapping fp_divider.$procmux$216 ($mux) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:87:get_of$817 ($xor) with simplemap.
Mapping fp_divider.$procmux$223 ($mux) with simplemap.
Mapping fp_divider.$procmux$226 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$938 ($and) with simplemap.

3.18.16. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 8
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=8\S_WIDTH=2'.

3.18.17. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$228 using $paramod\_90_pmux\WIDTH=8\S_WIDTH=2.
Mapping fp_divider.$procmux$231 ($mux) with simplemap.
Mapping fp_divider.$procmux$237 ($mux) with simplemap.
Mapping fp_divider.$procmux$240 ($mux) with simplemap.
Mapping fp_divider.$procmux$245 ($mux) with simplemap.
Mapping fp_divider.$procmux$248 ($mux) with simplemap.
Mapping fp_divider.$procmux$251 ($mux) with simplemap.
Mapping fp_divider.$procmux$258 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping fp_divider.$procmux$261 ($mux) with simplemap.
Mapping fp_divider.$procmux$265 ($or) with simplemap.
Mapping fp_divider.$procmux$267 ($mux) with simplemap.
Mapping fp_divider.$procmux$270 ($mux) with simplemap.
Mapping fp_divider.$procmux$276 ($mux) with simplemap.
Mapping fp_divider.$procmux$279 ($or) with simplemap.
Mapping fp_divider.$procmux$282 ($or) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:58:get_gt$821 ($or) with simplemap.
Mapping fp_divider.$procmux$296 ($or) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:64:get_eq$822 ($reduce_and) with simplemap.
Mapping fp_divider.$procmux$298 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=3.
Mapping fp_divider.$procmux$301 ($mux) with simplemap.
Mapping fp_divider.$procmux$304 ($mux) with simplemap.
Mapping fp_divider.$procmux$307 ($mux) with simplemap.
Mapping fp_divider.$procmux$310 ($mux) with simplemap.
Mapping fp_divider.$procmux$313 ($mux) with simplemap.
Mapping fp_divider.$procmux$316 ($mux) with simplemap.
Mapping fp_divider.$procmux$319 ($mux) with simplemap.

3.18.18. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 51
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=51\S_WIDTH=2'.

3.18.19. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$331 using $paramod\_90_pmux\WIDTH=51\S_WIDTH=2.

3.18.20. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 6
Parameter \Y_WIDTH = 6
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6'.

3.18.21. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$826 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6.
Mapping fp_divider.$procmux$343 ($mux) with simplemap.
Mapping fp_divider.$procmux$353 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:144:implement_pattern_cache$1015 ($reduce_or) with simplemap.
Mapping fp_divider.$procmux$355 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=3.

3.18.22. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 10
Parameter \Y_WIDTH = 10
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=10\Y_WIDTH=10'.

3.18.23. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$829 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=10\Y_WIDTH=10.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$1014 ($and) with simplemap.
Mapping fp_divider.$procmux$364 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$1012 ($not) with simplemap.
Mapping fp_divider.$procmux$366 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.

3.18.24. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 24
Parameter \Y_WIDTH = 24
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=24'.

3.18.25. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$832 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=24.
Mapping fp_divider.$procmux$374 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$1010 ($and) with simplemap.
Mapping fp_divider.$procmux$376 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=3.
Mapping fp_divider.$procmux$379 ($mux) with simplemap.

3.18.26. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 7
Parameter \B_WIDTH = 8
Parameter \Y_WIDTH = 8
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=8\Y_WIDTH=8'.

3.18.27. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$835 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=8\Y_WIDTH=8.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$1008 ($logic_not) with simplemap.
Mapping fp_divider.$procmux$388 ($mux) with simplemap.
Mapping fp_divider.$procmux$390 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=3.
Mapping fp_divider.$procmux$393 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:144:implement_pattern_cache$1006 ($reduce_or) with simplemap.

3.18.28. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 10
Parameter \B_WIDTH = 1
Parameter \Y_WIDTH = 10
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=1\Y_WIDTH=10'.

3.18.29. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$838 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=1\Y_WIDTH=10.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$1005 ($and) with simplemap.
Mapping fp_divider.$procmux$406 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$1003 ($logic_not) with simplemap.
Mapping fp_divider.$procmux$421 ($mux) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$841 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=1\Y_WIDTH=10.
Mapping fp_divider.$procmux$436 ($mux) with simplemap.
Mapping fp_divider.$procmux$443 ($mux) with simplemap.
Mapping fp_divider.$procmux$445 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$1001 ($and) with simplemap.

3.18.30. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 10
Parameter \B_WIDTH = 10
Parameter \Y_WIDTH = 10
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=10\Y_WIDTH=10'.

3.18.31. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$844 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=10\Y_WIDTH=10.

3.18.32. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 10
Parameter \S_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=10\S_WIDTH=4'.

3.18.33. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$447 using $paramod\_90_pmux\WIDTH=10\S_WIDTH=4.
Mapping fp_divider.$procmux$450 ($mux) with simplemap.
Mapping fp_divider.$procmux$454 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$999 ($logic_not) with simplemap.
Mapping fp_divider.$procmux$469 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$997 ($and) with simplemap.

3.18.34. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 8
Parameter \B_WIDTH = 7
Parameter \Y_WIDTH = 10
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=7\Y_WIDTH=10'.

3.18.35. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$866 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=7\Y_WIDTH=10.

3.18.36. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 10
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=10\S_WIDTH=3'.

3.18.37. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$471 using $paramod\_90_pmux\WIDTH=10\S_WIDTH=3.
Mapping fp_divider.$procmux$474 ($mux) with simplemap.
Mapping fp_divider.$procmux$477 ($mux) with simplemap.
Mapping fp_divider.$procmux$480 ($mux) with simplemap.
Mapping fp_divider.$procmux$483 ($mux) with simplemap.
Mapping fp_divider.$procmux$486 ($mux) with simplemap.
Mapping fp_divider.$procmux$489 ($mux) with simplemap.
Mapping fp_divider.$procmux$492 ($mux) with simplemap.

3.18.38. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 51
Parameter \B_WIDTH = 51
Parameter \Y_WIDTH = 51
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=51\B_WIDTH=51\Y_WIDTH=51'.

3.18.39. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$847 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=51\B_WIDTH=51\Y_WIDTH=51.
Mapping fp_divider.$procmux$508 ($mux) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$863 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=7\Y_WIDTH=10.
Mapping fp_divider.$procmux$510 using $paramod\_90_pmux\WIDTH=10\S_WIDTH=3.
Mapping fp_divider.$procmux$513 ($mux) with simplemap.
Mapping fp_divider.$procmux$516 ($mux) with simplemap.
Mapping fp_divider.$procmux$519 ($mux) with simplemap.
Mapping fp_divider.$procmux$522 ($mux) with simplemap.
Mapping fp_divider.$procmux$525 ($mux) with simplemap.
Mapping fp_divider.$procmux$528 ($mux) with simplemap.
Mapping fp_divider.$procmux$531 ($mux) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:58:get_gt$850 ($not) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$993 ($and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:58:get_gt$851 ($or) with simplemap.
Mapping fp_divider.$procmux$543 ($mux) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:78:get_cf$852 ($not) with simplemap.

3.18.40. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 50
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=50\S_WIDTH=3'.

3.18.41. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$545 using $paramod\_90_pmux\WIDTH=50\S_WIDTH=3.
Mapping fp_divider.$auto$alumacc.cc:64:get_eq$854 ($reduce_and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:144:implement_pattern_cache$989 ($reduce_or) with simplemap.
Mapping fp_divider.$procmux$561 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$988 ($and) with simplemap.
Mapping fp_divider.$procmux$563 using $paramod\_90_pmux\WIDTH=23\S_WIDTH=2.
Mapping fp_divider.$procmux$569 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$986 ($logic_not) with simplemap.

3.18.42. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 22
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=22\S_WIDTH=2'.

3.18.43. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$571 using $paramod\_90_pmux\WIDTH=22\S_WIDTH=2.
Mapping fp_divider.$procmux$574 ($mux) with simplemap.
Mapping fp_divider.$procmux$579 ($mux) with simplemap.
Mapping fp_divider.$procmux$582 ($mux) with simplemap.
Mapping fp_divider.$procmux$587 ($mux) with simplemap.
Mapping fp_divider.$procmux$590 ($mux) with simplemap.
Mapping fp_divider.$procmux$593 ($mux) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:509:replace_alu$858 ($reduce_or) with simplemap.
Mapping fp_divider.$procmux$604 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$984 ($and) with simplemap.

3.18.44. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 6
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=6\S_WIDTH=2'.

3.18.45. Continuing TECHMAP pass.
Mapping fp_divider.$procmux$606 using $paramod\_90_pmux\WIDTH=6\S_WIDTH=2.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$860 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=1\Y_WIDTH=10.
Mapping fp_divider.$procmux$624 ($mux) with simplemap.
Mapping fp_divider.$procmux$626 ($mux) with simplemap.
Mapping fp_divider.$procmux$644 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$936 ($eq) with simplemap.
Mapping fp_divider.$procmux$646 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$934 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$904 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$982 ($eq) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$932 ($eq) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$980 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$906 ($logic_not) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$978 ($eq) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:144:implement_pattern_cache$930 ($reduce_or) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:144:implement_pattern_cache$976 ($reduce_or) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$975 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$908 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$929 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:172:map_fsm$887 ($dff) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$973 ($logic_not) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$910 ($logic_not) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$912 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$925 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:144:implement_pattern_cache$913 ($reduce_or) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$923 ($eq) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$915 ($eq) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$950 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$971 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$921 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$917 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$952 ($eq) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$969 ($eq) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$919 ($eq) with simplemap.
Mapping fp_divider.$procmux$729 ($not) with simplemap.
Mapping fp_divider.$procmux$731 ($mux) with simplemap.
Mapping fp_divider.$procmux$734 ($mux) with simplemap.
Mapping fp_divider.$procmux$752 ($not) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$954 ($and) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:144:implement_pattern_cache$967 ($reduce_or) with simplemap.
Mapping fp_divider.$procmux$754 ($mux) with simplemap.
Mapping fp_divider.$procmux$757 ($mux) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:121:implement_pattern_cache$966 ($and) with simplemap.
Mapping fp_divider.$procmux$760 ($mux) with simplemap.
Mapping fp_divider.$procmux$764 ($not) with simplemap.
Mapping fp_divider.$auto$fsm_map.cc:77:implement_pattern_cache$956 ($eq) with simplemap.
Mapping fp_divider.$procmux$766 ($mux) with simplemap.
Mapping fp_divider.$procmux$769 ($mux) with simplemap.
Mapping fp_divider.$procdff$771 ($dff) with simplemap.
Mapping fp_divider.$procdff$772 ($dff) with simplemap.
Mapping fp_divider.$procdff$773 ($dff) with simplemap.
Mapping fp_divider.$procdff$774 ($dff) with simplemap.
Mapping fp_divider.$procdff$776 ($dff) with simplemap.
Mapping fp_divider.$procdff$777 ($dff) with simplemap.
Mapping fp_divider.$procdff$778 ($dff) with simplemap.
Mapping fp_divider.$procdff$779 ($dff) with simplemap.
Mapping fp_divider.$procdff$780 ($dff) with simplemap.
Mapping fp_divider.$procdff$781 ($dff) with simplemap.
Mapping fp_divider.$procdff$782 ($dff) with simplemap.
Mapping fp_divider.$procdff$783 ($dff) with simplemap.
Mapping fp_divider.$procdff$784 ($dff) with simplemap.
Mapping fp_divider.$procdff$785 ($dff) with simplemap.
Mapping fp_divider.$procdff$786 ($dff) with simplemap.
Mapping fp_divider.$procdff$787 ($dff) with simplemap.
Mapping fp_divider.$procdff$788 ($dff) with simplemap.
Mapping fp_divider.$procdff$789 ($dff) with simplemap.
Mapping fp_divider.$procdff$790 ($dff) with simplemap.
Mapping fp_divider.$procdff$791 ($dff) with simplemap.
Mapping fp_divider.$procdff$792 ($dff) with simplemap.
Mapping fp_divider.$procdff$793 ($dff) with simplemap.
Mapping fp_divider.$procdff$794 ($dff) with simplemap.
Mapping fp_divider.$procdff$795 ($dff) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.$xor$<techmap.v>:262$1308 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.$xor$<techmap.v>:263$1309 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307 ($and) with simplemap.

3.18.46. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 10
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=10'.

3.18.47. Executing PROC pass (convert processes to netlists).

3.18.47.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.47.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.47.3. Executing PROC_INIT pass (extract init attributes).

3.18.47.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.47.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=10.$proc$<techmap.v>:207$3521'.
     1/20: $0\p[9:0] [8]
     2/20: $0\g[9:0] [8]
     3/20: $0\p[9:0] [6]
     4/20: $0\g[9:0] [6]
     5/20: $0\p[9:0] [4]
     6/20: $0\g[9:0] [4]
     7/20: $0\p[9:0] [2]
     8/20: $0\g[9:0] [2]
     9/20: $0\p[9:0] [9]
    10/20: $0\g[9:0] [9]
    11/20: $0\p[9:0] [5]
    12/20: $0\g[9:0] [5]
    13/20: $0\p[9:0] [7]
    14/20: $0\g[9:0] [7]
    15/20: $0\p[9:0] [3]
    16/20: $0\g[9:0] [3]
    17/20: $0\p[9:0] [1]
    18/20: $0\g[9:0] [1]
    19/20: $0\g[9:0] [0]
    20/20: $0\p[9:0] [0]

3.18.47.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=10.\g' from process `$paramod\_90_lcu\WIDTH=10.$proc$<techmap.v>:207$3521'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=10.\p' from process `$paramod\_90_lcu\WIDTH=10.$proc$<techmap.v>:207$3521'.

3.18.47.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.47.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=10.$proc$<techmap.v>:207$3521'.
Cleaned up 0 empty switches.

3.18.48. Executing OPT pass (performing simple optimizations).

3.18.48.1. Executing OPT_EXPR pass (perform const folding).

3.18.48.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=10'.
Removed a total of 0 cells.

3.18.48.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.48.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=10..
  removing unused `$and' cell `$and$<techmap.v>:222$3526'.
  removing unused `$and' cell `$and$<techmap.v>:222$3541'.
  removing unused `$and' cell `$and$<techmap.v>:222$3547'.
  removing unused `$and' cell `$and$<techmap.v>:230$3550'.
  removing unused `$and' cell `$and$<techmap.v>:230$3553'.
  removing unused `$and' cell `$and$<techmap.v>:230$3556'.
  removing unused `$and' cell `$and$<techmap.v>:230$3559'.
  removing unused `$and' cell `$and$<techmap.v>:230$3562'.
  removing unused `$and' cell `$and$<techmap.v>:230$3565'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 23 unused temporary wires.
Removed 43 unused cells and 334 unused wires.

3.18.48.5. Finished fast OPT passes.

3.18.49. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$806.lcu using $paramod\_90_lcu\WIDTH=10.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$806.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$806.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$procmux$79.$and$<techmap.v>:434$1478 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$79.$reduce_or$<techmap.v>:441$1479 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$79.$and$<techmap.v>:434$1477 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$79.$ternary$<techmap.v>:445$1476 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$79.$reduce_or$<techmap.v>:445$1475 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$112.$and$<techmap.v>:434$1507 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$112.$reduce_or$<techmap.v>:441$1508 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$112.$and$<techmap.v>:434$1506 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$112.$and$<techmap.v>:434$1505 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$112.$and$<techmap.v>:434$1504 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$112.$ternary$<techmap.v>:445$1503 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$112.$reduce_or$<techmap.v>:445$1502 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$133.$and$<techmap.v>:434$1478 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$133.$reduce_or$<techmap.v>:441$1479 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$133.$and$<techmap.v>:434$1477 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$133.$ternary$<techmap.v>:445$1476 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$133.$reduce_or$<techmap.v>:445$1475 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1584 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1585 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1583 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1582 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1581 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1580 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1579 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1578 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1577 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1576 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1575 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1574 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1573 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1572 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1571 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1570 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1569 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1568 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1567 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1566 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1565 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1564 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1563 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1562 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1561 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1560 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1559 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1558 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1557 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1556 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1555 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1554 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1553 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1552 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1551 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1550 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1549 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1548 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1547 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1546 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1545 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1544 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1543 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1542 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1541 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1540 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1539 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1538 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1537 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:441$1536 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$and$<techmap.v>:434$1535 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$and$<techmap.v>:434$1534 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$ternary$<techmap.v>:445$1533 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$145.$reduce_or$<techmap.v>:445$1532 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$162.$and$<techmap.v>:434$1591 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$162.$reduce_or$<techmap.v>:441$1592 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$162.$and$<techmap.v>:434$1590 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$162.$and$<techmap.v>:434$1589 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$162.$ternary$<techmap.v>:445$1588 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$162.$reduce_or$<techmap.v>:445$1587 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:262$1308 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:263$1309 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307 ($and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$813.lcu using $paramod\_90_lcu\WIDTH=10.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$813.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$813.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1668 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1669 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1667 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1666 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1665 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1664 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1663 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1662 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1661 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1660 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1659 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1658 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1657 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1656 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1655 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1654 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1653 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1652 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1651 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1650 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1649 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1648 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:441$1647 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$and$<techmap.v>:434$1646 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$and$<techmap.v>:434$1645 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$ternary$<techmap.v>:445$1644 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$200.$reduce_or$<techmap.v>:445$1643 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1720 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1721 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1719 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1718 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1717 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1716 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1715 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1714 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1713 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1712 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1711 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1710 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1709 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1708 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1707 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1706 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1705 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1704 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1703 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1702 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1701 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1700 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:441$1699 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$and$<techmap.v>:434$1698 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$and$<techmap.v>:434$1697 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$and$<techmap.v>:434$1696 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$and$<techmap.v>:434$1695 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$ternary$<techmap.v>:445$1694 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$209.$reduce_or$<techmap.v>:445$1693 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$reduce_or$<techmap.v>:441$1797 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$reduce_or$<techmap.v>:441$1798 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$reduce_or$<techmap.v>:441$1796 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$reduce_or$<techmap.v>:441$1795 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$reduce_or$<techmap.v>:441$1794 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$reduce_or$<techmap.v>:441$1793 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$reduce_or$<techmap.v>:441$1792 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$reduce_or$<techmap.v>:441$1791 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$and$<techmap.v>:434$1790 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$and$<techmap.v>:434$1789 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$ternary$<techmap.v>:445$1788 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$228.$reduce_or$<techmap.v>:445$1787 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$258.$and$<techmap.v>:434$1478 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$258.$reduce_or$<techmap.v>:441$1479 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$258.$and$<techmap.v>:434$1477 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$258.$ternary$<techmap.v>:445$1476 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$258.$reduce_or$<techmap.v>:445$1475 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$298.$and$<techmap.v>:434$1591 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$298.$reduce_or$<techmap.v>:441$1592 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$298.$and$<techmap.v>:434$1590 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$298.$and$<techmap.v>:434$1589 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$298.$ternary$<techmap.v>:445$1588 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$298.$reduce_or$<techmap.v>:445$1587 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1929 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1930 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1928 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1927 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1926 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1925 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1924 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1923 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1922 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1921 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1920 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1919 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1918 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1917 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1916 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1915 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1914 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1913 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1912 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1911 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1910 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1909 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1908 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1907 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1906 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1905 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1904 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1903 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1902 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1901 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1900 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1899 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1898 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1897 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1896 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1895 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1894 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1893 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1892 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1891 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1890 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1889 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1888 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1887 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1886 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1885 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1884 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1883 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1882 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1881 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:441$1880 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$and$<techmap.v>:434$1879 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$and$<techmap.v>:434$1878 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$ternary$<techmap.v>:445$1877 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$331.$reduce_or$<techmap.v>:445$1876 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:262$1934 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:263$1935 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.$and$<techmap.v>:260$1933 ($and) with simplemap.

3.18.50. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 6
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=6'.

3.18.51. Executing PROC pass (convert processes to netlists).

3.18.51.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.51.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.51.3. Executing PROC_INIT pass (extract init attributes).

3.18.51.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.51.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=6.$proc$<techmap.v>:207$4632'.
     1/12: $0\p[5:0] [4]
     2/12: $0\g[5:0] [4]
     3/12: $0\p[5:0] [2]
     4/12: $0\g[5:0] [2]
     5/12: $0\p[5:0] [5]
     6/12: $0\g[5:0] [5]
     7/12: $0\p[5:0] [3]
     8/12: $0\g[5:0] [3]
     9/12: $0\p[5:0] [1]
    10/12: $0\g[5:0] [1]
    11/12: $0\g[5:0] [0]
    12/12: $0\p[5:0] [0]

3.18.51.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=6.\g' from process `$paramod\_90_lcu\WIDTH=6.$proc$<techmap.v>:207$4632'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=6.\p' from process `$paramod\_90_lcu\WIDTH=6.$proc$<techmap.v>:207$4632'.

3.18.51.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.51.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=6.$proc$<techmap.v>:207$4632'.
Cleaned up 0 empty switches.

3.18.52. Executing OPT pass (performing simple optimizations).

3.18.52.1. Executing OPT_EXPR pass (perform const folding).

3.18.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=6'.
Removed a total of 0 cells.

3.18.52.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.52.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=6..
  removing unused `$and' cell `$and$<techmap.v>:222$4637'.
  removing unused `$and' cell `$and$<techmap.v>:222$4646'.
  removing unused `$and' cell `$and$<techmap.v>:230$4649'.
  removing unused `$and' cell `$and$<techmap.v>:230$4652'.
  removing unused `$and' cell `$and$<techmap.v>:230$4655'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 15 unused temporary wires.
Removed 48 unused cells and 349 unused wires.

3.18.52.5. Finished fast OPT passes.

3.18.53. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$826.lcu using $paramod\_90_lcu\WIDTH=6.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.$ternary$<techmap.v>:258$1932 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.$not$<techmap.v>:258$1931 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$826.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$826.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$procmux$355.$and$<techmap.v>:434$1591 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$355.$reduce_or$<techmap.v>:441$1592 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$355.$and$<techmap.v>:434$1590 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$355.$and$<techmap.v>:434$1589 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$355.$ternary$<techmap.v>:445$1588 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$355.$reduce_or$<techmap.v>:445$1587 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:263$1994 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992 ($and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$829.lcu using $paramod\_90_lcu\WIDTH=10.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$829.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$829.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$procmux$366.$and$<techmap.v>:434$1478 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$366.$reduce_or$<techmap.v>:441$1479 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$366.$and$<techmap.v>:434$1477 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$366.$ternary$<techmap.v>:445$1476 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$366.$reduce_or$<techmap.v>:445$1475 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:263$2002 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000 ($and) with simplemap.

3.18.54. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 24
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=24'.

3.18.55. Executing PROC pass (convert processes to netlists).

3.18.55.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.55.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.55.3. Executing PROC_INIT pass (extract init attributes).

3.18.55.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.55.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=24.$proc$<techmap.v>:207$4862'.
     1/48: $0\p[23:0] [22]
     2/48: $0\g[23:0] [22]
     3/48: $0\p[23:0] [20]
     4/48: $0\g[23:0] [20]
     5/48: $0\p[23:0] [18]
     6/48: $0\g[23:0] [18]
     7/48: $0\p[23:0] [16]
     8/48: $0\g[23:0] [16]
     9/48: $0\p[23:0] [14]
    10/48: $0\g[23:0] [14]
    11/48: $0\p[23:0] [12]
    12/48: $0\g[23:0] [12]
    13/48: $0\p[23:0] [10]
    14/48: $0\g[23:0] [10]
    15/48: $0\p[23:0] [8]
    16/48: $0\g[23:0] [8]
    17/48: $0\p[23:0] [6]
    18/48: $0\g[23:0] [6]
    19/48: $0\p[23:0] [4]
    20/48: $0\g[23:0] [4]
    21/48: $0\p[23:0] [2]
    22/48: $0\g[23:0] [2]
    23/48: $0\p[23:0] [21]
    24/48: $0\g[23:0] [21]
    25/48: $0\p[23:0] [17]
    26/48: $0\g[23:0] [17]
    27/48: $0\p[23:0] [13]
    28/48: $0\g[23:0] [13]
    29/48: $0\p[23:0] [9]
    30/48: $0\g[23:0] [9]
    31/48: $0\p[23:0] [5]
    32/48: $0\g[23:0] [5]
    33/48: $0\p[23:0] [19]
    34/48: $0\g[23:0] [19]
    35/48: $0\p[23:0] [11]
    36/48: $0\g[23:0] [11]
    37/48: $0\p[23:0] [23]
    38/48: $0\g[23:0] [23]
    39/48: $0\p[23:0] [15]
    40/48: $0\g[23:0] [15]
    41/48: $0\p[23:0] [7]
    42/48: $0\g[23:0] [7]
    43/48: $0\p[23:0] [3]
    44/48: $0\g[23:0] [3]
    45/48: $0\p[23:0] [1]
    46/48: $0\g[23:0] [1]
    47/48: $0\g[23:0] [0]
    48/48: $0\p[23:0] [0]

3.18.55.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=24.\g' from process `$paramod\_90_lcu\WIDTH=24.$proc$<techmap.v>:207$4862'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=24.\p' from process `$paramod\_90_lcu\WIDTH=24.$proc$<techmap.v>:207$4862'.

3.18.55.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.55.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=24.$proc$<techmap.v>:207$4862'.
Cleaned up 0 empty switches.

3.18.56. Executing OPT pass (performing simple optimizations).

3.18.56.1. Executing OPT_EXPR pass (perform const folding).

3.18.56.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=24'.
Removed a total of 0 cells.

3.18.56.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.56.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=24..
  removing unused `$and' cell `$and$<techmap.v>:222$4867'.
  removing unused `$and' cell `$and$<techmap.v>:222$4903'.
  removing unused `$and' cell `$and$<techmap.v>:222$4921'.
  removing unused `$and' cell `$and$<techmap.v>:222$4930'.
  removing unused `$and' cell `$and$<techmap.v>:230$4933'.
  removing unused `$and' cell `$and$<techmap.v>:230$4936'.
  removing unused `$and' cell `$and$<techmap.v>:230$4939'.
  removing unused `$and' cell `$and$<techmap.v>:230$4942'.
  removing unused `$and' cell `$and$<techmap.v>:230$4945'.
  removing unused `$and' cell `$and$<techmap.v>:230$4948'.
  removing unused `$and' cell `$and$<techmap.v>:230$4951'.
  removing unused `$and' cell `$and$<techmap.v>:230$4954'.
  removing unused `$and' cell `$and$<techmap.v>:230$4957'.
  removing unused `$and' cell `$and$<techmap.v>:230$4960'.
  removing unused `$and' cell `$and$<techmap.v>:230$4963'.
  removing unused `$and' cell `$and$<techmap.v>:230$4966'.
  removing unused `$and' cell `$and$<techmap.v>:230$4969'.
  removing unused `$and' cell `$and$<techmap.v>:230$4972'.
  removing unused `$and' cell `$and$<techmap.v>:230$4975'.
  removing unused `$and' cell `$and$<techmap.v>:230$4978'.
  removing unused `$and' cell `$and$<techmap.v>:230$4981'.
  removing unused `$and' cell `$and$<techmap.v>:230$4984'.
  removing unused `$and' cell `$and$<techmap.v>:230$4987'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 51 unused temporary wires.
Removed 71 unused cells and 400 unused wires.

3.18.56.5. Finished fast OPT passes.

3.18.57. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$832.lcu using $paramod\_90_lcu\WIDTH=24.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.$not$<techmap.v>:258$1998 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$832.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$832.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$procmux$376.$and$<techmap.v>:434$1591 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$376.$reduce_or$<techmap.v>:441$1592 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$376.$and$<techmap.v>:434$1590 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$376.$and$<techmap.v>:434$1589 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$376.$ternary$<techmap.v>:445$1588 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$376.$reduce_or$<techmap.v>:445$1587 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:263$2010 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.$and$<techmap.v>:260$2008 ($and) with simplemap.

3.18.58. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=8'.

3.18.59. Executing PROC pass (convert processes to netlists).

3.18.59.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.59.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.59.3. Executing PROC_INIT pass (extract init attributes).

3.18.59.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.59.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$5090'.
     1/16: $0\p[7:0] [6]
     2/16: $0\g[7:0] [6]
     3/16: $0\p[7:0] [4]
     4/16: $0\g[7:0] [4]
     5/16: $0\p[7:0] [2]
     6/16: $0\g[7:0] [2]
     7/16: $0\p[7:0] [5]
     8/16: $0\g[7:0] [5]
     9/16: $0\p[7:0] [7]
    10/16: $0\g[7:0] [7]
    11/16: $0\p[7:0] [3]
    12/16: $0\g[7:0] [3]
    13/16: $0\p[7:0] [1]
    14/16: $0\g[7:0] [1]
    15/16: $0\g[7:0] [0]
    16/16: $0\p[7:0] [0]

3.18.59.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=8.\g' from process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$5090'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=8.\p' from process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$5090'.

3.18.59.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.59.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=8.$proc$<techmap.v>:207$5090'.
Cleaned up 0 empty switches.

3.18.60. Executing OPT pass (performing simple optimizations).

3.18.60.1. Executing OPT_EXPR pass (perform const folding).

3.18.60.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=8'.
Removed a total of 0 cells.

3.18.60.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.60.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=8..
  removing unused `$and' cell `$and$<techmap.v>:222$5095'.
  removing unused `$and' cell `$and$<techmap.v>:222$5107'.
  removing unused `$and' cell `$and$<techmap.v>:222$5113'.
  removing unused `$and' cell `$and$<techmap.v>:230$5116'.
  removing unused `$and' cell `$and$<techmap.v>:230$5119'.
  removing unused `$and' cell `$and$<techmap.v>:230$5122'.
  removing unused `$and' cell `$and$<techmap.v>:230$5125'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 19 unused temporary wires.
Removed 78 unused cells and 419 unused wires.

3.18.60.5. Finished fast OPT passes.

3.18.61. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$835.lcu using $paramod\_90_lcu\WIDTH=8.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.$ternary$<techmap.v>:258$2007 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$835.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$835.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$procmux$390.$and$<techmap.v>:434$1591 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$390.$reduce_or$<techmap.v>:441$1592 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$390.$and$<techmap.v>:434$1590 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$390.$and$<techmap.v>:434$1589 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$390.$ternary$<techmap.v>:445$1588 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$390.$reduce_or$<techmap.v>:445$1587 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.$xor$<techmap.v>:262$2021 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.$xor$<techmap.v>:263$2022 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020 ($and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$838.lcu using $paramod\_90_lcu\WIDTH=10.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$838.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$838.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.$xor$<techmap.v>:262$2021 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.$xor$<techmap.v>:263$2022 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020 ($and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$841.lcu using $paramod\_90_lcu\WIDTH=10.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$841.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$841.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.$xor$<techmap.v>:262$2054 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.$xor$<techmap.v>:263$2055 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.$and$<techmap.v>:260$2053 ($and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$844.lcu using $paramod\_90_lcu\WIDTH=10.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$844.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$844.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2070 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2071 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2069 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2068 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2067 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2066 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2065 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2064 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2063 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:441$2062 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$and$<techmap.v>:434$2061 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$and$<techmap.v>:434$2060 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$and$<techmap.v>:434$2059 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$and$<techmap.v>:434$2058 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$ternary$<techmap.v>:445$2057 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$447.$reduce_or$<techmap.v>:445$2056 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:263$2110 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108 ($and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$866.lcu using $paramod\_90_lcu\WIDTH=10.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$866.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$866.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2124 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2125 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2123 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2122 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2121 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2120 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2119 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2118 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2117 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:441$2116 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$and$<techmap.v>:434$2115 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$and$<techmap.v>:434$2114 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$and$<techmap.v>:434$2113 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$ternary$<techmap.v>:445$2112 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$471.$reduce_or$<techmap.v>:445$2111 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.$xor$<techmap.v>:262$2199 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.$xor$<techmap.v>:263$2200 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.$and$<techmap.v>:260$2198 ($and) with simplemap.

3.18.62. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 51
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=51'.

3.18.63. Executing PROC pass (convert processes to netlists).

3.18.63.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.63.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.63.3. Executing PROC_INIT pass (extract init attributes).

3.18.63.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.63.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=51.$proc$<techmap.v>:207$5805'.
     1/102: $0\p[50:0] [50]
     2/102: $0\g[50:0] [50]
     3/102: $0\p[50:0] [48]
     4/102: $0\g[50:0] [48]
     5/102: $0\p[50:0] [46]
     6/102: $0\g[50:0] [46]
     7/102: $0\p[50:0] [44]
     8/102: $0\g[50:0] [44]
     9/102: $0\p[50:0] [42]
    10/102: $0\g[50:0] [42]
    11/102: $0\p[50:0] [40]
    12/102: $0\g[50:0] [40]
    13/102: $0\p[50:0] [38]
    14/102: $0\g[50:0] [38]
    15/102: $0\p[50:0] [36]
    16/102: $0\g[50:0] [36]
    17/102: $0\p[50:0] [34]
    18/102: $0\g[50:0] [34]
    19/102: $0\p[50:0] [32]
    20/102: $0\g[50:0] [32]
    21/102: $0\p[50:0] [30]
    22/102: $0\g[50:0] [30]
    23/102: $0\p[50:0] [28]
    24/102: $0\g[50:0] [28]
    25/102: $0\p[50:0] [26]
    26/102: $0\g[50:0] [26]
    27/102: $0\p[50:0] [24]
    28/102: $0\g[50:0] [24]
    29/102: $0\p[50:0] [22]
    30/102: $0\g[50:0] [22]
    31/102: $0\p[50:0] [20]
    32/102: $0\g[50:0] [20]
    33/102: $0\p[50:0] [18]
    34/102: $0\g[50:0] [18]
    35/102: $0\p[50:0] [16]
    36/102: $0\g[50:0] [16]
    37/102: $0\p[50:0] [14]
    38/102: $0\g[50:0] [14]
    39/102: $0\p[50:0] [12]
    40/102: $0\g[50:0] [12]
    41/102: $0\p[50:0] [10]
    42/102: $0\g[50:0] [10]
    43/102: $0\p[50:0] [8]
    44/102: $0\g[50:0] [8]
    45/102: $0\p[50:0] [6]
    46/102: $0\g[50:0] [6]
    47/102: $0\p[50:0] [4]
    48/102: $0\g[50:0] [4]
    49/102: $0\p[50:0] [2]
    50/102: $0\g[50:0] [2]
    51/102: $0\p[50:0] [49]
    52/102: $0\g[50:0] [49]
    53/102: $0\p[50:0] [45]
    54/102: $0\g[50:0] [45]
    55/102: $0\p[50:0] [41]
    56/102: $0\g[50:0] [41]
    57/102: $0\p[50:0] [37]
    58/102: $0\g[50:0] [37]
    59/102: $0\p[50:0] [33]
    60/102: $0\g[50:0] [33]
    61/102: $0\p[50:0] [29]
    62/102: $0\g[50:0] [29]
    63/102: $0\p[50:0] [25]
    64/102: $0\g[50:0] [25]
    65/102: $0\p[50:0] [21]
    66/102: $0\g[50:0] [21]
    67/102: $0\p[50:0] [17]
    68/102: $0\g[50:0] [17]
    69/102: $0\p[50:0] [13]
    70/102: $0\g[50:0] [13]
    71/102: $0\p[50:0] [9]
    72/102: $0\g[50:0] [9]
    73/102: $0\p[50:0] [5]
    74/102: $0\g[50:0] [5]
    75/102: $0\p[50:0] [43]
    76/102: $0\g[50:0] [43]
    77/102: $0\p[50:0] [35]
    78/102: $0\g[50:0] [35]
    79/102: $0\p[50:0] [27]
    80/102: $0\g[50:0] [27]
    81/102: $0\p[50:0] [19]
    82/102: $0\g[50:0] [19]
    83/102: $0\p[50:0] [11]
    84/102: $0\g[50:0] [11]
    85/102: $0\p[50:0] [39]
    86/102: $0\g[50:0] [39]
    87/102: $0\p[50:0] [23]
    88/102: $0\g[50:0] [23]
    89/102: $0\p[50:0] [47]
    90/102: $0\g[50:0] [47]
    91/102: $0\p[50:0] [31]
    92/102: $0\g[50:0] [31]
    93/102: $0\p[50:0] [15]
    94/102: $0\g[50:0] [15]
    95/102: $0\p[50:0] [7]
    96/102: $0\g[50:0] [7]
    97/102: $0\p[50:0] [3]
    98/102: $0\g[50:0] [3]
    99/102: $0\p[50:0] [1]
   100/102: $0\g[50:0] [1]
   101/102: $0\g[50:0] [0]
   102/102: $0\p[50:0] [0]

3.18.63.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=51.\g' from process `$paramod\_90_lcu\WIDTH=51.$proc$<techmap.v>:207$5805'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=51.\p' from process `$paramod\_90_lcu\WIDTH=51.$proc$<techmap.v>:207$5805'.

3.18.63.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.63.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=51.$proc$<techmap.v>:207$5805'.
Cleaned up 0 empty switches.

3.18.64. Executing OPT pass (performing simple optimizations).

3.18.64.1. Executing OPT_EXPR pass (perform const folding).

3.18.64.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=51'.
Removed a total of 0 cells.

3.18.64.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.64.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=51..
  removing unused `$and' cell `$and$<techmap.v>:222$5810'.
  removing unused `$and' cell `$and$<techmap.v>:222$5885'.
  removing unused `$and' cell `$and$<techmap.v>:222$5921'.
  removing unused `$and' cell `$and$<techmap.v>:222$5939'.
  removing unused `$and' cell `$and$<techmap.v>:222$5948'.
  removing unused `$and' cell `$and$<techmap.v>:230$5951'.
  removing unused `$and' cell `$and$<techmap.v>:230$5954'.
  removing unused `$and' cell `$and$<techmap.v>:230$5957'.
  removing unused `$and' cell `$and$<techmap.v>:230$5960'.
  removing unused `$and' cell `$and$<techmap.v>:230$5963'.
  removing unused `$and' cell `$and$<techmap.v>:230$5966'.
  removing unused `$and' cell `$and$<techmap.v>:230$5969'.
  removing unused `$and' cell `$and$<techmap.v>:230$5972'.
  removing unused `$and' cell `$and$<techmap.v>:230$5975'.
  removing unused `$and' cell `$and$<techmap.v>:230$5978'.
  removing unused `$and' cell `$and$<techmap.v>:230$5981'.
  removing unused `$and' cell `$and$<techmap.v>:230$5984'.
  removing unused `$and' cell `$and$<techmap.v>:230$5987'.
  removing unused `$and' cell `$and$<techmap.v>:230$5990'.
  removing unused `$and' cell `$and$<techmap.v>:230$5993'.
  removing unused `$and' cell `$and$<techmap.v>:230$5996'.
  removing unused `$and' cell `$and$<techmap.v>:230$5999'.
  removing unused `$and' cell `$and$<techmap.v>:230$6002'.
  removing unused `$and' cell `$and$<techmap.v>:230$6005'.
  removing unused `$and' cell `$and$<techmap.v>:230$6008'.
  removing unused `$and' cell `$and$<techmap.v>:230$6011'.
  removing unused `$and' cell `$and$<techmap.v>:230$6014'.
  removing unused `$and' cell `$and$<techmap.v>:230$6017'.
  removing unused `$and' cell `$and$<techmap.v>:230$6020'.
  removing unused `$and' cell `$and$<techmap.v>:230$6023'.
  removing unused `$and' cell `$and$<techmap.v>:230$6026'.
  removing unused `$and' cell `$and$<techmap.v>:230$6029'.
  removing unused `$and' cell `$and$<techmap.v>:230$6032'.
  removing unused `$and' cell `$and$<techmap.v>:230$6035'.
  removing unused `$and' cell `$and$<techmap.v>:230$6038'.
  removing unused `$and' cell `$and$<techmap.v>:230$6041'.
  removing unused `$and' cell `$and$<techmap.v>:230$6044'.
  removing unused `$and' cell `$and$<techmap.v>:230$6047'.
  removing unused `$and' cell `$and$<techmap.v>:230$6050'.
  removing unused `$and' cell `$and$<techmap.v>:230$6053'.
  removing unused `$and' cell `$and$<techmap.v>:230$6056'.
  removing unused `$and' cell `$and$<techmap.v>:230$6059'.
  removing unused `$and' cell `$and$<techmap.v>:230$6062'.
  removing unused `$and' cell `$and$<techmap.v>:230$6065'.
  removing unused `$and' cell `$and$<techmap.v>:230$6068'.
  removing unused `$and' cell `$and$<techmap.v>:230$6071'.
  removing unused `$and' cell `$and$<techmap.v>:230$6074'.
  removing unused `$and' cell `$and$<techmap.v>:230$6077'.
  removing unused `$and' cell `$and$<techmap.v>:230$6080'.
  removing unused `$and' cell `$and$<techmap.v>:230$6083'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 105 unused temporary wires.
Removed 128 unused cells and 524 unused wires.

3.18.64.5. Finished fast OPT passes.

3.18.65. Continuing TECHMAP pass.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$847.lcu using $paramod\_90_lcu\WIDTH=51.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$847.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$847.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:263$2110 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108 ($and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$863.lcu using $paramod\_90_lcu\WIDTH=10.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$863.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$863.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2124 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2125 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2123 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2122 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2121 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2120 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2119 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2118 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2117 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:441$2116 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$and$<techmap.v>:434$2115 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$and$<techmap.v>:434$2114 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$and$<techmap.v>:434$2113 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$ternary$<techmap.v>:445$2112 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$510.$reduce_or$<techmap.v>:445$2111 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2388 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2389 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2387 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2386 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2385 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2384 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2383 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2382 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2381 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2380 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2379 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2378 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2377 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2376 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2375 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2374 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2373 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2372 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2371 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2370 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2369 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2368 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2367 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2366 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2365 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2364 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2363 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2362 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2361 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2360 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2359 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2358 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2357 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2356 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2355 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2354 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2353 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2352 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2351 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2350 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2349 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2348 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2347 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2346 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2345 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2344 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2343 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2342 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2341 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:441$2340 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$and$<techmap.v>:434$2339 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$and$<techmap.v>:434$2338 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$and$<techmap.v>:434$2337 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$ternary$<techmap.v>:445$2336 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$545.$reduce_or$<techmap.v>:445$2335 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1668 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1669 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1667 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1666 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1665 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1664 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1663 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1662 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1661 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1660 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1659 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1658 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1657 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1656 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1655 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1654 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1653 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1652 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1651 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1650 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1649 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1648 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:441$1647 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$and$<techmap.v>:434$1646 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$and$<techmap.v>:434$1645 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$ternary$<techmap.v>:445$1644 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$563.$reduce_or$<techmap.v>:445$1643 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2521 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2522 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2520 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2519 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2518 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2517 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2516 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2515 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2514 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2513 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2512 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2511 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2510 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2509 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2508 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2507 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2506 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2505 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2504 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2503 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2502 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:441$2501 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$and$<techmap.v>:434$2500 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$and$<techmap.v>:434$2499 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$ternary$<techmap.v>:445$2498 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$571.$reduce_or$<techmap.v>:445$2497 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$reduce_or$<techmap.v>:441$2672 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$reduce_or$<techmap.v>:441$2673 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$reduce_or$<techmap.v>:441$2671 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$reduce_or$<techmap.v>:441$2670 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$reduce_or$<techmap.v>:441$2669 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$reduce_or$<techmap.v>:441$2668 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$and$<techmap.v>:434$2667 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$and$<techmap.v>:434$2666 ($and) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$ternary$<techmap.v>:445$2665 ($mux) with simplemap.
Mapping fp_divider.$techmap$procmux$606.$reduce_or$<techmap.v>:445$2664 ($reduce_or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:262$2021 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:263$2022 ($xor) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020 ($and) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$860.lcu using $paramod\_90_lcu\WIDTH=10.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019 ($mux) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018 ($not) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$860.B_conv ($pos) with simplemap.
Mapping fp_divider.$auto$alumacc.cc:474:replace_alu$860.A_conv ($pos) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:229$3564 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:229$3561 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:229$3558 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:229$3555 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:229$3552 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:229$3549 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3546 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3543 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3540 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3537 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3534 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3531 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3528 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3525 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:212$3523 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:229$3563 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:229$3560 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:229$3557 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:229$3554 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:229$3551 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:229$3548 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:222$3544 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:222$3538 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:222$3535 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:222$3532 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:222$3529 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3545 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3542 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3539 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3536 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3533 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3530 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3527 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3524 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:212$3522 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:229$3564 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:229$3561 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:229$3558 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:229$3555 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:229$3552 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:229$3549 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3546 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3543 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3540 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3537 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3534 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3531 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3528 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3525 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:212$3523 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3563 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3560 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3557 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3554 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3551 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3548 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:222$3544 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:222$3538 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:222$3535 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:222$3532 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:222$3529 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3545 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3542 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3539 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3536 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3533 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3530 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3527 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3524 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:212$3522 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:229$4654 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:229$4651 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:229$4648 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:221$4645 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:221$4642 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:221$4639 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:221$4636 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:212$4634 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:229$4653 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:229$4650 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:229$4647 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:222$4643 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:222$4640 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:221$4644 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:221$4641 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:221$4638 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:221$4635 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:212$4633 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4892 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4889 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4886 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4883 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4880 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4877 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4874 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4871 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4868 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4865 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:212$4863 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5111 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5108 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5105 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5102 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5099 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5096 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5093 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:212$5091 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5931 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5928 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5925 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5922 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5919 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5916 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5913 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5910 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5907 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5904 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5901 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5898 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5895 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5892 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5889 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5886 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5883 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5880 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5877 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5874 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5871 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5868 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5865 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5862 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5859 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5856 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5853 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5850 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5847 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5844 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5841 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5838 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5835 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5832 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5829 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5826 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5823 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5820 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5817 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5814 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5811 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5808 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:212$5806 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:212$3522 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3524 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3527 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3530 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3533 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3536 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3539 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3542 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3545 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:222$3529 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:222$3532 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:222$3535 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:222$3538 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:222$3544 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3548 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3551 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3554 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3557 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3560 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3563 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:212$3523 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3525 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3528 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3531 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3534 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3537 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3540 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3543 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3546 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:229$3549 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:229$3552 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:229$3555 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:229$3558 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:229$3561 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:229$3564 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4895 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4898 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4901 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4904 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4907 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4910 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4913 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4916 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4919 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4922 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4925 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4928 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4870 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4873 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4876 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4879 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4882 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4885 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4888 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4891 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4894 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4897 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4900 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4906 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4909 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4912 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4915 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4918 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4924 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:222$4927 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4931 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4934 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4937 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4940 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4943 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4946 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4949 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4952 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4955 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4958 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4961 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4964 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4967 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4970 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4973 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4976 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4979 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4982 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4985 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:212$4864 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4866 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4869 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4872 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4875 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4878 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4881 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4884 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4887 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4890 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4893 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4896 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4899 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4902 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4905 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4908 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4911 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4914 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4917 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4920 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4923 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4926 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4929 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4932 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4935 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4938 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4941 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4944 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4947 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4950 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4953 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4956 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4959 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4962 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4965 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4968 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4971 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4974 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4977 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4980 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4983 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:229$4986 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:222$5098 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:222$5101 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:222$5104 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:222$5110 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:229$5114 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:229$5117 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:229$5120 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:229$5123 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:212$5092 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5094 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5097 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5100 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5103 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5106 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5109 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5112 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:229$5115 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:229$5118 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:229$5121 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:229$5124 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:212$3522 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:221$3524 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:221$3527 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:221$3530 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:221$3533 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:221$3536 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:221$3539 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:221$3542 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:221$3545 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:222$3529 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:222$3532 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:222$3535 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:222$3538 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:222$3544 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:229$3548 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:229$3551 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:229$3554 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:229$3557 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:229$3560 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:229$3563 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:212$3523 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:221$3525 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:221$3528 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:221$3531 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:221$3534 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:221$3537 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:221$3540 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:221$3543 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:221$3546 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:229$3549 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:229$3552 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:229$3555 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:229$3558 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:229$3561 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$or$<techmap.v>:229$3564 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:212$3522 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:221$3524 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:221$3527 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:221$3530 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:221$3533 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:221$3536 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:221$3539 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:221$3542 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:221$3545 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:222$3529 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:222$3532 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:222$3535 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:222$3538 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:222$3544 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:229$3548 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:229$3551 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:229$3554 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:229$3557 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:229$3560 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:229$3563 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:212$3523 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:221$3525 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:221$3528 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:221$3531 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:221$3534 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:221$3537 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:221$3540 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:221$3543 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:221$3546 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:229$3549 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:229$3552 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:229$3555 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:229$3558 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:229$3561 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$or$<techmap.v>:229$3564 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:212$3522 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:221$3524 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:221$3527 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:221$3530 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:221$3533 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:221$3536 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:221$3539 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:221$3542 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:221$3545 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:222$3529 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:222$3532 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:222$3535 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:222$3538 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:222$3544 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:229$3548 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:229$3551 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:229$3554 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:229$3557 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:229$3560 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:229$3563 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:212$3523 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:221$3525 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:221$3528 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:221$3531 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:221$3534 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:221$3537 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:221$3540 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:221$3543 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:221$3546 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:229$3549 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:229$3552 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:229$3555 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:229$3558 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:229$3561 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$or$<techmap.v>:229$3564 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:212$3522 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3524 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3527 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3530 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3533 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3536 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3539 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3542 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3545 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:222$3529 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:222$3532 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:222$3535 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:222$3538 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:222$3544 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3548 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3551 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3554 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3557 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3560 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3563 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:212$3523 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3525 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3528 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3531 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3534 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3537 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3540 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3543 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3546 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:229$3549 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:229$3552 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:229$3555 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:229$3558 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:229$3561 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:229$3564 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5934 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5937 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5940 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5943 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:221$5946 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5813 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5816 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5819 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5822 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5825 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5828 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5831 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5834 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5837 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5840 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5843 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5846 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5849 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5852 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5855 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5858 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5861 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5864 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5867 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5870 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5873 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5876 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5879 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5882 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5888 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5891 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5894 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5897 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5900 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5903 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5906 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5909 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5912 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5915 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5918 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5924 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5927 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5930 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5933 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5936 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5942 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:222$5945 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5949 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5952 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5955 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5958 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5961 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5964 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5967 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5970 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5973 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5976 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5979 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5982 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5985 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5988 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5991 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5994 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$5997 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6000 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6003 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6006 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6009 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6012 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6015 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6018 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6021 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6024 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6027 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6030 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6033 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6036 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6039 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6042 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6045 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6048 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6051 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6054 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6057 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6060 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6063 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6066 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6069 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6072 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6075 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6078 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:229$6081 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:212$5807 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5809 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5812 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5815 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5818 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5821 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5824 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5827 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5830 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5833 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5836 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5839 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5842 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5845 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5848 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5851 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5854 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5857 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5860 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5863 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5866 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5869 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5872 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5875 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5878 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5881 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5884 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5887 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5890 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5893 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5896 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5899 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5902 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5905 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5908 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5911 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5914 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5917 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5920 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5923 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5926 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5929 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5932 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5935 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5938 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5941 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5944 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:221$5947 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5950 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5953 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5956 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5959 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5962 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5965 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5968 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5971 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5974 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5977 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5980 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5983 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5986 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5989 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5992 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5995 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$5998 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6001 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6004 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6007 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6010 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6013 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6016 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6019 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6022 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6025 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6028 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6031 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6034 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6037 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6040 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6043 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6046 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6049 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6052 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6055 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6058 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6061 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6064 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6067 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6070 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6073 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6076 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6079 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$or$<techmap.v>:229$6082 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:212$3522 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3524 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3527 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3530 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3533 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3536 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3539 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3542 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3545 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:222$3529 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:222$3532 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:222$3535 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:222$3538 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:222$3544 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3548 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3551 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3554 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3557 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3560 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3563 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:212$3523 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3525 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3528 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3531 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3534 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3537 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3540 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3543 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3546 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:229$3549 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:229$3552 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:229$3555 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:229$3558 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:229$3561 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:229$3564 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:212$3522 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3524 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3527 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3530 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3533 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3536 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3539 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3542 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3545 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:222$3529 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:222$3532 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:222$3535 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:222$3538 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:222$3544 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3548 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3551 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3554 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3557 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3560 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3563 ($and) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:212$3523 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3525 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3528 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3531 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3534 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3537 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3540 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3543 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3546 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:229$3549 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:229$3552 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:229$3555 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:229$3558 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:229$3561 ($or) with simplemap.
Mapping fp_divider.$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:229$3564 ($or) with simplemap.
No more expansions possible.

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1128' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1120 [6] = \b_e [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1127' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1120 [5] = \b_e [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1126' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1120 [4] = \b_e [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1125' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1120 [3] = \b_e [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1124' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1120 [2] = \b_e [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1123' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1120 [1] = \b_e [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1122' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1120 [0] = \b_e [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1131' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1120 [9] = \b_e [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1130' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1120 [8] = \b_e [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3764' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [49] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3763' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [48] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3762' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [47] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3761' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [46] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3760' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [45] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3759' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [44] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3758' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [43] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3757' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [42] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3756' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [41] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3755' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [40] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3754' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [39] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3753' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [38] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3752' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [37] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3751' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [36] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3750' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [35] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3749' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [34] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3748' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [33] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3747' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [32] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3746' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3745' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3744' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3743' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3742' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3741' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3740' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3739' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3738' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3737' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3736' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3735' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3734' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3733' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3732' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3731' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1070' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1062 [6] = \a_e [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1069' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1062 [5] = \a_e [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1068' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1062 [4] = \a_e [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1067' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1062 [3] = \a_e [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1066' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1062 [2] = \a_e [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1065' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1062 [1] = \a_e [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1064' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1062 [0] = \a_e [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1073' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1062 [9] = \a_e [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1072' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1062 [8] = \a_e [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3730' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3729' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3728' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3727' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3726' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3725' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3724' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3723' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3722' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3721' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3720' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3719' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3718' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3717' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3716' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3715' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$145.$and$<techmap.v>:434$1535_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3714' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1536_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3712' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1537_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [1]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3710' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1538_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3708' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1539_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3706' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1540_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [4]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3704' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1541_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [5]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3702' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1542_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [6]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3700' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1543_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3698' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1544_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [8]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3696' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1545_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [9]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3694' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1546_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [10]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3692' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1547_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [11]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3690' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1548_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [12]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3688' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1549_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [13]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3686' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1550_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [14]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3684' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1551_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [15]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3682' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1552_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [16]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3680' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1553_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [17]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3678' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1554_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [18]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3676' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1555_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [19]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3674' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1556_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [20]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3672' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1557_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [21]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3670' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1558_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [22]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3668' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1559_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [23]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3666' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1560_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [24]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3664' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1561_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [25]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3662' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1562_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [26]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3660' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1563_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [27]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3658' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1564_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [28]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3656' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1565_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [29]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3654' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1566_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [30]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3650' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1568_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [32]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3652' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1567_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [31]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3648' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1569_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [33]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3646' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1570_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [34]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3644' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1571_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [35]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3642' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1572_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [36]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3640' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1573_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [37]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3638' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1574_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [38]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3636' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1575_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [39]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3632' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1577_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [41]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3630' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1578_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [42]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3628' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1579_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [43]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3626' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1580_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [44]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3624' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1581_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [45]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3622' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1582_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [46]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3620' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1583_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [47]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3618' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1585_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [49]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3616' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1584_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [48]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6134' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [50] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [50]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6132' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [48] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [48]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6133' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [49] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [49]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6116' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [32] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [32]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6117' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [33] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [33]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6118' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [34] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [34]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6119' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [35] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [35]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6120' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [36] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [36]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6121' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [37] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [37]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6122' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [38] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [38]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6123' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [39] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [39]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6124' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [40] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [40]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6125' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [41] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [41]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6126' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [42] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [42]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6127' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [43] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [43]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6128' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [44] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [44]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6129' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [45] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [45]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6130' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [46] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [46]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6131' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [47] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [47]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6100' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [16] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6101' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [17] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6102' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [18] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6103' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [19] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6104' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [20] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6105' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [21] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6106' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [22] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6107' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [23] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6108' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [24] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6109' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [25] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6110' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [26] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6111' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [27] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6112' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [28] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6113' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [29] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6114' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [30] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6115' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [31] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6092' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6093' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [9] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6094' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [10] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6095' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [11] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6096' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [12] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6097' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [13] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6098' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [14] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6099' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [15] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6088' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6089' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6090' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6091' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [7] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6086' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6087' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6085' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6084' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$ternary$<techmap.v>:258$2197_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$847.$not$<techmap.v>:258$2196_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7186' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.lcu.$and$<techmap.v>:212$5806_Y = $techmap$auto$alumacc.cc:474:replace_alu$847.$xor$<techmap.v>:262$2199_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3608' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$133.$and$<techmap.v>:434$1478_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3610' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$133.$reduce_or$<techmap.v>:441$1479_Y = $techmap$procmux$133.$and$<techmap.v>:434$1477_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3918' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3919' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [9] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3914' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3883' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:262$1308_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3915' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3884' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:262$1308_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3916' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3885' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:262$1308_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3917' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [7] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3912' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3881' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:262$1308_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3913' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3882' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:262$1308_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3911' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3901' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3910' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$ternary$<techmap.v>:258$1306_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3900' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3879' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:262$1308_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7187' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:212$3522_Y = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7207' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$815 [0] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3903' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3902' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7189' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3527_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7209' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3528_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7213' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$815 [3] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3539_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3905' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3904' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7190' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3530_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7210' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3531_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7194' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3542_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3907' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [7] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3906' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7191' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3533_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7211' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3534_Y = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7214' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$or$<techmap.v>:221$3543_Y = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3909' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [9] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3908' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$and$<techmap.v>:260$1307_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4988' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [0] = \z_m [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4762' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:263$2002_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3634' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$145.$reduce_or$<techmap.v>:441$1576_Y = $techmap$procmux$145.$and$<techmap.v>:434$1534_Y [40]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3574' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3497' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3476' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$xor$<techmap.v>:262$1308_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3573' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [7] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3496' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3475' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$xor$<techmap.v>:262$1308_Y [7] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3572' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3495' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [6]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7047' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3534_Y = $techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3533_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3571' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3494' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3570' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3493' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3569' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3492' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3568' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3491' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3567' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3490' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3566' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3489' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7071' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:212$3522_Y = $techmap$auto$alumacc.cc:474:replace_alu$806.$xor$<techmap.v>:262$1308_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7037' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$808 [8] = $techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:229$3563_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3575' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$ternary$<techmap.v>:258$1306_Y [9] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3498' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$and$<techmap.v>:260$1307_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3477' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$xor$<techmap.v>:262$1308_Y [9] = $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7066' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:221$3536_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7046' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$or$<techmap.v>:221$3537_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7041' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$808 [9] = $techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:229$3551_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1185' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1182 [1] = \a_e [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1186' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1182 [2] = \a_e [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1187' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1182 [3] = \a_e [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1188' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1182 [4] = \a_e [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1189' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1182 [5] = \a_e [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1190' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1182 [6] = \a_e [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1244' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1241 [1] = \b_e [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1245' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1241 [2] = \b_e [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1246' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1241 [3] = \b_e [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1247' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1241 [4] = \b_e [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1248' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1241 [5] = \b_e [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1249' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1241 [6] = \b_e [6]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1482' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1483' in module `fp_divider'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3009' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$3007 [0] = \rst'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4998' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [10] = \z_m [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4797' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [10] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4997' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [9] = \z_m [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4796' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [9] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4996' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [8] = \z_m [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4795' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [8] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4995' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [7] = \z_m [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4794' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4994' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [6] = \z_m [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4793' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1318' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1315 [1] = \count [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1319' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1315 [2] = \count [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1320' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1315 [3] = \count [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1397' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1395 [0] = \rst'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4993' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [5] = \z_m [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4792' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4992' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [4] = \z_m [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4791' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4991' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [3] = \z_m [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4790' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4990' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [2] = \z_m [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4789' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4989' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [1] = \z_m [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4788' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1489' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1487 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1491' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1487 [2] = $logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$12_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1492' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1487 [3] = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$15_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1519' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1513 [4] = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$15_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1515' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1513 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1516' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1513 [1] = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1518' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1513 [3] = $logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$12_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4787' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [0] = \z_m [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5005' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [17] = \z_m [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4755' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [17] = \z_m [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5004' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [16] = \z_m [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4754' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [16] = \z_m [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5007' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [19] = \z_m [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4757' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [19] = \z_m [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5006' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [18] = \z_m [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4756' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [18] = \z_m [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5009' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [21] = \z_m [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4759' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [21] = \z_m [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5008' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [20] = \z_m [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4758' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [20] = \z_m [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5011' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [23] = \z_m [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4761' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [23] = \z_m [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5010' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [22] = \z_m [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4760' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [22] = \z_m [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4747' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [9] = \z_m [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4746' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [8] = \z_m [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4999' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [11] = \z_m [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4749' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [11] = \z_m [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4748' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [10] = \z_m [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5001' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [13] = \z_m [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4751' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [13] = \z_m [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5000' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [12] = \z_m [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4750' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [12] = \z_m [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5003' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [15] = \z_m [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4753' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [15] = \z_m [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5002' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$ternary$<techmap.v>:258$1999_Y [14] = \z_m [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4752' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [14] = \z_m [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4743' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [5] = \z_m [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4742' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [4] = \z_m [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4745' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [7] = \z_m [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4744' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [6] = \z_m [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4741' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [3] = \z_m [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4740' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [2] = \z_m [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4739' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [1] = \z_m [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7135' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:212$4863_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7271' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [0] = \z_m [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7272' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [1] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4865_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7133' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4868_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7273' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4869_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7284' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [3] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4901_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7132' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4871_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7274' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4872_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7225' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4904_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7131' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4874_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7275' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4875_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7285' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4905_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7290' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [7] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4919_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7130' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4877_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7276' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4878_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7226' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4907_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4798' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7129' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4880_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7277' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4881_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7286' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4908_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7231' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4922_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4800' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4799' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7128' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4883_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7278' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4884_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7227' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4910_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4802' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4801' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7127' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4886_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7279' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4887_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7287' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4911_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7291' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4923_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7293' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [15] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4928_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4804' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4803' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7126' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4889_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7280' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4890_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7228' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4913_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4806' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4805' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7125' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4892_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7281' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4893_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7288' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4914_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7232' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4925_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4808' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4807' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7222' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4895_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7282' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4896_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7229' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4916_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4810' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4809' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$and$<techmap.v>:260$2000_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7223' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:221$4898_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7283' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4899_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7289' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4917_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7292' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$or$<techmap.v>:221$4926_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7294' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [23] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4931_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4786' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:263$2002_Y [24] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4931_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7296' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [19] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4937_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7301' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [21] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4952_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7312' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [22] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4985_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7311' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [20] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4982_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7300' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [17] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4949_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7310' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [18] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4979_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1606' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1600 [4] = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$15_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1602' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1600 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1603' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1600 [1] = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1604' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1600 [2] = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1605' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1600 [3] = $logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$12_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7309' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [16] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4976_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7295' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [11] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4934_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7299' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [13] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4946_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7308' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [14] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4973_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7307' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [12] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4970_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7298' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [9] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4943_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7306' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [10] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4967_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7305' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [8] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4964_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7297' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [5] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4940_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7304' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [6] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4961_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7303' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [4] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4958_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7302' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$834 [2] = $techmap$auto$alumacc.cc:474:replace_alu$832.lcu.$and$<techmap.v>:229$4955_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1593' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1596' in module `fp_divider'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4720' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [9] = \z_e [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4719' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [8] = \z_e [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4718' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [7] = \z_e [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4717' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [6] = \z_e [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4716' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [5] = \z_e [5]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1597' in module `fp_divider'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4715' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [4] = \z_e [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4711' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [0] = \z_e [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4712' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [1] = \z_e [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4713' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [2] = \z_e [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4714' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$ternary$<techmap.v>:258$1991_Y [3] = \z_e [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5126' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$ternary$<techmap.v>:258$2007_Y [0] = \z_e [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5056' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:263$2010_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5127' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$ternary$<techmap.v>:258$2007_Y [1] = \z_e [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5065' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$and$<techmap.v>:260$2008_Y [0] = \z_e [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7143' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:212$5091_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7321' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$837 [0] = \z_e [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5128' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$ternary$<techmap.v>:258$2007_Y [2] = \z_e [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5066' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$and$<techmap.v>:260$2008_Y [1] = \z_e [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5129' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$ternary$<techmap.v>:258$2007_Y [3] = \z_e [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5067' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$and$<techmap.v>:260$2008_Y [2] = \z_e [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5130' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$ternary$<techmap.v>:258$2007_Y [4] = \z_e [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5068' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$and$<techmap.v>:260$2008_Y [3] = \z_e [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5131' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$ternary$<techmap.v>:258$2007_Y [5] = \z_e [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5069' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$and$<techmap.v>:260$2008_Y [4] = \z_e [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5132' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$ternary$<techmap.v>:258$2007_Y [6] = \z_e [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5070' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$and$<techmap.v>:260$2008_Y [5] = \z_e [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5133' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$ternary$<techmap.v>:258$2007_Y [7] = \z_e [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5055' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [7] = \z_e [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5071' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$and$<techmap.v>:260$2008_Y [6] = \z_e [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2772' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2770 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2773' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2770 [1] = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$6_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2774' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2770 [2] = $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$9_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2775' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2770 [3] = $logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$12_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2776' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2770 [4] = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:109$15_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2777' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2770 [5] = $logic_and$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:136$25_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4710' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4709' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4708' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4707' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [6] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1815' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1816' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1817' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1818' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1819' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1820' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1821' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1822' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1823' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1824' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1825' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1826' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1827' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1828' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1829' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1830' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1850' in module `fp_divider'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4706' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4705' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4704' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4703' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4702' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [1] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1851' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1869' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1872' in module `fp_divider'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4701' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$and$<techmap.v>:260$1992_Y [0] = \z_e [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4689' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [9] = \z_e [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7101' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3536_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7081' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3537_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4687' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [7] = \z_e [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7102' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3533_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7082' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3534_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4685' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [5] = \z_e [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7103' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3530_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7083' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3531_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4686' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [6] = \z_e [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7099' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3542_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7079' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3543_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4683' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [3] = \z_e [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7104' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3527_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7084' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$or$<techmap.v>:221$3528_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4681' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [1] = \z_e [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7106' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:212$3522_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7086' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [0] = \z_e [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7085' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [1] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3524_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4682' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [2] = \z_e [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7080' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [3] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3539_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4684' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [4] = \z_e [4]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7078' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [7] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:221$3545_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4688' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [8] = \z_e [8]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7076' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [9] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3551_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4700' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:263$1994_Y [10] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3551_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7072' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [8] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3563_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7077' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [5] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3548_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7073' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [6] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3560_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1873' in module `fp_divider'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7074' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [4] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3557_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7075' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$831 [2] = $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:229$3554_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4690' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:263$1994_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4668' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$355.$and$<techmap.v>:434$1591_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4672' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$355.$reduce_or$<techmap.v>:441$1592_Y = $auto$simplemap.cc:127:simplemap_reduce$4669'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4661' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$ternary$<techmap.v>:258$1932_Y [5] = \count [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4660' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$ternary$<techmap.v>:258$1932_Y [4] = \count [4]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2030' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2031' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2032' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2033' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2034' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2035' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2036' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2037' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2038' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2039' in module `fp_divider'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7027' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7017' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6986' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:262$2021_Y [0] = \z_e [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7028' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7018' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [1] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7007' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7693' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:212$3522_Y = \z_e [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7713' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$862 [0] = \z_e [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7029' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7019' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7008' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [1] = \z_e [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7030' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7020' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [3] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7009' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [2] = \z_e [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7031' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7021' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7010' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [3] = \z_e [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7032' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7022' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [5] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7011' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [4] = \z_e [4]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7033' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7023' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [6] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7012' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [5] = \z_e [5]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7034' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7024' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [7] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7013' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [6] = \z_e [6]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7035' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7025' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [8] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7014' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [7] = \z_e [7]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$7036' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$not$<techmap.v>:258$2018_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$7026' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$ternary$<techmap.v>:258$2019_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7015' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [8] = \z_e [8]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5246' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5236' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5205' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$xor$<techmap.v>:262$2021_Y [0] = \b_e [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5247' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5237' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [1] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5226' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7368' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.lcu.$and$<techmap.v>:212$3522_Y = \b_e [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7388' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$843 [0] = \b_e [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5248' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5238' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5227' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [1] = \b_e [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5249' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5239' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [3] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5228' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [2] = \b_e [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5250' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5240' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5229' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [3] = \b_e [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5251' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5241' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [5] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5230' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [4] = \b_e [4]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5252' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5242' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [6] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5231' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [5] = \b_e [5]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5253' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5243' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [7] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5232' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [6] = \b_e [6]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5254' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5244' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [8] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5233' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [7] = \b_e [7]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5255' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$not$<techmap.v>:258$2018_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5245' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$ternary$<techmap.v>:258$2019_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5234' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [8] = \b_e [8]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2126' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2127' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2128' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2129' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2130' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2131' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2132' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2133' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2134' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2135' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2156' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2157' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2158' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2159' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2160' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2161' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2162' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2163' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2164' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2165' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2166' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2167' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2168' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2169' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2170' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2171' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2172' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2173' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2174' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2175' in module `fp_divider'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5195' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5185' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5154' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$xor$<techmap.v>:262$2021_Y [0] = \a_e [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5196' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5186' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [1] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5175' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7333' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.lcu.$and$<techmap.v>:212$3522_Y = \a_e [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7353' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$840 [0] = \a_e [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5197' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5187' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5176' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [1] = \a_e [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5198' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5188' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [3] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5177' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [2] = \a_e [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5199' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5189' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5178' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [3] = \a_e [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5200' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5190' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [5] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5179' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [4] = \a_e [4]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5201' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5191' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [6] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5180' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [5] = \a_e [5]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5202' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5192' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [7] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5181' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [6] = \a_e [6]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5203' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5193' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [8] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5182' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [7] = \a_e [7]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5204' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$not$<techmap.v>:258$2018_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5194' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$ternary$<techmap.v>:258$2019_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5183' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [8] = \a_e [8]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2211' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2212' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2213' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2214' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2215' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2216' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2217' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2218' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2219' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2220' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2241' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2242' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2243' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2244' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2245' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2246' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2247' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2248' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2249' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2250' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2251' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2252' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2253' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2254' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2255' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2256' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2257' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2258' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2259' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2260' in module `fp_divider'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2828' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2826 [0] = \rst'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2567' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2568' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2569' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2570' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2571' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2572' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2573' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2574' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2575' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2576' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2577' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2578' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2579' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2580' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2581' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2582' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2583' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2584' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2585' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2586' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2587' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2588' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2589' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2590' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2591' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2592' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2593' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2594' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2595' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2596' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2597' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2598' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2599' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2600' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2601' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2602' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2603' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2604' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2605' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2606' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2607' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2608' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2609' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2610' in module `fp_divider'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4656' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$ternary$<techmap.v>:258$1932_Y [0] = \count [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4606' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:263$1935_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:262$1934_Y [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2657' in module `fp_divider'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4657' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$ternary$<techmap.v>:258$1932_Y [1] = \count [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4601' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:262$1934_Y [1] = \count [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4613' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$and$<techmap.v>:260$1933_Y [0] = \count [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7124' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:212$4633_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7114' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$828 [0] = \count [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2658' in module `fp_divider'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4658' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$ternary$<techmap.v>:258$1932_Y [2] = \count [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4602' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:262$1934_Y [2] = \count [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4614' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$and$<techmap.v>:260$1933_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7113' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$828 [1] = $techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:221$4635_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2659' in module `fp_divider'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4659' (??0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$ternary$<techmap.v>:258$1932_Y [3] = \count [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4603' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:262$1934_Y [3] = \count [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4615' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$and$<techmap.v>:260$1933_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7108' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$828 [2] = $techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:229$4650_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2660' in module `fp_divider'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4604' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:262$1934_Y [4] = \count [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4616' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$and$<techmap.v>:260$1933_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7122' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:221$4638_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7112' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:221$4639_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7110' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$828 [3] = $techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:221$4644_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2661' in module `fp_divider'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4605' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:262$1934_Y [5] = \count [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4617' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$and$<techmap.v>:260$1933_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7107' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$828 [4] = $techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:229$4653_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2662' in module `fp_divider'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2838' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2836 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2852' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2850 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2901' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2899 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2938' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2936 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2911' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2909 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2948' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2946 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2925' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2923 [0] = \rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2926' (?0) in module `\fp_divider' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2923 [1] = $logic_or$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$12_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3488' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$806.$xor$<techmap.v>:263$1309_Y [10] = $techmap$auto$alumacc.cc:474:replace_alu$806.lcu.$and$<techmap.v>:229$3551_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$3867' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$162.$and$<techmap.v>:434$1591_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3871' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$162.$reduce_or$<techmap.v>:441$1592_Y = $auto$simplemap.cc:127:simplemap_reduce$3868'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7218' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$815 [2] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3554_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7219' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$815 [4] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3557_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7216' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$815 [5] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3548_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7220' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$815 [6] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:229$3560_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3899' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:263$1309_Y [10] = $auto$alumacc.cc:491:replace_alu$815 [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4331' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$298.$and$<techmap.v>:434$1591_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4335' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$298.$reduce_or$<techmap.v>:441$1592_Y = $auto$simplemap.cc:127:simplemap_reduce$4332'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4471' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [26] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4392' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1906_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [26]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4470' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [25] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4394' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1905_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [25]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4469' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [24] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4396' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1904_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [24]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4468' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [23] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4398' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1903_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [23]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4467' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [22] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4400' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1902_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [22]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4466' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [21] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4402' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1901_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [21]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4465' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [20] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4404' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1900_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [20]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4464' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [19] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4406' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1899_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [19]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4463' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [18] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4408' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1898_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [18]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4462' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [17] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4410' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1897_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [17]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4461' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4412' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1896_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4460' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4414' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1895_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4459' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4416' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1894_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4458' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4418' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1893_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4457' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4420' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1892_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4456' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4422' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1891_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4455' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4424' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1890_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4454' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4426' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1889_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4453' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4428' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1888_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4452' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4430' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1887_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4451' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4432' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1886_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4450' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4434' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1885_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4449' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4436' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1884_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4448' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4438' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1883_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4447' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4440' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1882_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4446' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4442' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1881_Y = $techmap$procmux$331.$and$<techmap.v>:434$1878_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4445' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1879_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4496' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$331.$and$<techmap.v>:434$1878_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4444' (00) in module `\fp_divider' with constant driver `$techmap$procmux$331.$reduce_or$<techmap.v>:441$1880_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4618' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$and$<techmap.v>:260$1933_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7121' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:221$4641_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7111' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$or$<techmap.v>:221$4642_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7109' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$828 [5] = $techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:229$4647_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4612' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:263$1935_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$826.lcu.$and$<techmap.v>:229$4647_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5072' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$and$<techmap.v>:260$2008_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7325' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5103_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5102_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5064' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:263$2010_Y [8] = $auto$alumacc.cc:491:replace_alu$837 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5184' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$and$<techmap.v>:260$2020_Y [9] = \a_e [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5174' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$838.$xor$<techmap.v>:263$2022_Y [10] = $auto$alumacc.cc:491:replace_alu$840 [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5235' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$and$<techmap.v>:260$2020_Y [9] = \b_e [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5225' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$841.$xor$<techmap.v>:263$2022_Y [10] = $auto$alumacc.cc:491:replace_alu$843 [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5287' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5288' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5289' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5290' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5291' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5292' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5293' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5294' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [7] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5295' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5296' (??1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$ternary$<techmap.v>:258$2052_Y [9] = $techmap$auto$alumacc.cc:474:replace_alu$844.$not$<techmap.v>:258$2051_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7403' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.lcu.$and$<techmap.v>:212$3522_Y = $techmap$auto$alumacc.cc:474:replace_alu$844.$xor$<techmap.v>:262$2054_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5276' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$844.$xor$<techmap.v>:263$2055_Y [10] = $auto$alumacc.cc:491:replace_alu$846 [9]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5453' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5443' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5412' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109_Y [0] = \b [23]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5454' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5444' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5413' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109_Y [1] = \b [24]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5455' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5445' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5414' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109_Y [2] = \b [25]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5456' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5446' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5415' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109_Y [3] = \b [26]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5457' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5447' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5416' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109_Y [4] = \b [27]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5458' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5448' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5417' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109_Y [5] = \b [28]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5459' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5449' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5418' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109_Y [6] = \b [29]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5460' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5450' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [7] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5461' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5451' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [8] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5420' (01) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109_Y [8] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5462' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$not$<techmap.v>:258$2106_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$5452' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$ternary$<techmap.v>:258$2107_Y [9] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5421' (01) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:262$2109_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5433' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7438' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:212$3522_Y = \b [23]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7458' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$868 [0] = \b [23]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5434' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7459' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$868 [1] = $techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3524_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5435' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7469' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$868 [2] = $techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3554_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5436' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7440' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3527_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7460' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3528_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7464' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$868 [3] = $techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3539_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5437' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7470' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$868 [4] = $techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3557_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5438' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7441' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3530_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7461' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3531_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7467' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$868 [5] = $techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3548_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5439' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7471' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$868 [6] = $techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3560_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7445' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3542_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5440' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [7] = \b [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7442' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3533_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7462' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3534_Y = \b [30]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7465' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3543_Y = \b [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5441' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7457' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3563_Y = $auto$alumacc.cc:491:replace_alu$868 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7472' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$868 [8] = $auto$alumacc.cc:491:replace_alu$868 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7450' (11) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:222$3538_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7453' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:229$3551_Y = $auto$alumacc.cc:491:replace_alu$868 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5442' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$and$<techmap.v>:260$2108_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7443' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$and$<techmap.v>:221$3536_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7463' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.lcu.$or$<techmap.v>:221$3537_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7468' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$868 [9] = $auto$alumacc.cc:491:replace_alu$868 [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5432' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:263$2110_Y [10] = $auto$alumacc.cc:491:replace_alu$868 [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5649' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$847.$xor$<techmap.v>:263$2200_Y [51] = $auto$alumacc.cc:491:replace_alu$849 [50]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6227' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6217' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6186' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109_Y [0] = \a [23]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6228' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6218' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6187' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109_Y [1] = \a [24]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6229' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6219' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6188' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109_Y [2] = \a [25]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6230' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6220' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6189' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109_Y [3] = \a [26]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6231' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6221' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6190' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109_Y [4] = \a [27]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6232' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6222' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6191' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109_Y [5] = \a [28]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6233' (1) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6223' (101) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6192' (?0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109_Y [6] = \a [29]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6234' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6224' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [7] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6235' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6225' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [8] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6194' (01) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109_Y [8] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$6236' (0) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$not$<techmap.v>:258$2106_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6226' (011) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$ternary$<techmap.v>:258$2107_Y [9] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6195' (01) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:262$2109_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6207' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7658' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:212$3522_Y = \a [23]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7678' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$865 [0] = \a [23]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6208' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7679' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$865 [1] = $techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3524_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6209' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7689' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$865 [2] = $techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3554_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6210' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7660' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3527_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7680' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3528_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7684' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$865 [3] = $techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3539_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6211' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7690' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$865 [4] = $techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3557_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6212' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7661' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3530_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7681' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3531_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7687' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$865 [5] = $techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3548_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6213' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7691' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$865 [6] = $techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3560_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7665' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3542_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6214' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [7] = \a [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7662' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3533_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7682' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3534_Y = \a [30]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7685' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3543_Y = \a [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6215' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7677' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3563_Y = $auto$alumacc.cc:491:replace_alu$865 [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7692' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$865 [8] = $auto$alumacc.cc:491:replace_alu$865 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7670' (11) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:222$3538_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7673' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:229$3551_Y = $auto$alumacc.cc:491:replace_alu$865 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6216' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$and$<techmap.v>:260$2108_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7663' (const_and) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$and$<techmap.v>:221$3536_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7683' (00) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.lcu.$or$<techmap.v>:221$3537_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7688' (and_or_buffer) in module `\fp_divider' with constant driver `$auto$alumacc.cc:491:replace_alu$865 [9] = $auto$alumacc.cc:491:replace_alu$865 [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6206' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:263$2110_Y [10] = $auto$alumacc.cc:491:replace_alu$865 [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6569' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [48] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6324' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2388_Y = $auto$simplemap.cc:127:simplemap_reduce$6321'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6570' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [49] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6328' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2389_Y = $auto$simplemap.cc:127:simplemap_reduce$6325'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6568' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [47] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6332' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2387_Y = $auto$simplemap.cc:127:simplemap_reduce$6329'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6567' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [46] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6336' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2386_Y = $auto$simplemap.cc:127:simplemap_reduce$6333'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6566' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [45] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6340' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2385_Y = $auto$simplemap.cc:127:simplemap_reduce$6337'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6565' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [44] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6344' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2384_Y = $auto$simplemap.cc:127:simplemap_reduce$6341'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6564' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [43] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6348' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2383_Y = $auto$simplemap.cc:127:simplemap_reduce$6345'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6563' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [42] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6352' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2382_Y = $auto$simplemap.cc:127:simplemap_reduce$6349'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6562' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [41] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6356' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2381_Y = $auto$simplemap.cc:127:simplemap_reduce$6353'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6561' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [40] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6360' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2380_Y = $auto$simplemap.cc:127:simplemap_reduce$6357'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6560' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [39] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6364' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2379_Y = $auto$simplemap.cc:127:simplemap_reduce$6361'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6559' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [38] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6368' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2378_Y = $auto$simplemap.cc:127:simplemap_reduce$6365'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6558' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [37] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6372' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2377_Y = $auto$simplemap.cc:127:simplemap_reduce$6369'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6557' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [36] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6376' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2376_Y = $auto$simplemap.cc:127:simplemap_reduce$6373'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6556' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [35] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6380' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2375_Y = $auto$simplemap.cc:127:simplemap_reduce$6377'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6555' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [34] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6384' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2374_Y = $auto$simplemap.cc:127:simplemap_reduce$6381'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6554' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [33] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6388' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2373_Y = $auto$simplemap.cc:127:simplemap_reduce$6385'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6553' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [32] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6392' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2372_Y = $auto$simplemap.cc:127:simplemap_reduce$6389'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6552' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [31] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6396' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2371_Y = $auto$simplemap.cc:127:simplemap_reduce$6393'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6551' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [30] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6400' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2370_Y = $auto$simplemap.cc:127:simplemap_reduce$6397'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6550' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [29] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6404' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2369_Y = $auto$simplemap.cc:127:simplemap_reduce$6401'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6549' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [28] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6408' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2368_Y = $auto$simplemap.cc:127:simplemap_reduce$6405'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6548' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [27] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6412' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2367_Y = $auto$simplemap.cc:127:simplemap_reduce$6409'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6547' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [26] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6416' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2366_Y = $auto$simplemap.cc:127:simplemap_reduce$6413'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6546' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [25] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6420' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2365_Y = $auto$simplemap.cc:127:simplemap_reduce$6417'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6545' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [24] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6424' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2364_Y = $auto$simplemap.cc:127:simplemap_reduce$6421'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6544' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [23] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6428' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2363_Y = $auto$simplemap.cc:127:simplemap_reduce$6425'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6543' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [22] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6432' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2362_Y = $auto$simplemap.cc:127:simplemap_reduce$6429'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6542' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [21] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6436' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2361_Y = $auto$simplemap.cc:127:simplemap_reduce$6433'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6541' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [20] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6440' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2360_Y = $auto$simplemap.cc:127:simplemap_reduce$6437'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6540' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [19] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6444' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2359_Y = $auto$simplemap.cc:127:simplemap_reduce$6441'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6539' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [18] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6448' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2358_Y = $auto$simplemap.cc:127:simplemap_reduce$6445'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6538' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [17] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6452' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2357_Y = $auto$simplemap.cc:127:simplemap_reduce$6449'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6537' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6456' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2356_Y = $auto$simplemap.cc:127:simplemap_reduce$6453'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6536' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6460' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2355_Y = $auto$simplemap.cc:127:simplemap_reduce$6457'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6535' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6464' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2354_Y = $auto$simplemap.cc:127:simplemap_reduce$6461'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6534' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6468' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2353_Y = $auto$simplemap.cc:127:simplemap_reduce$6465'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6533' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6472' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2352_Y = $auto$simplemap.cc:127:simplemap_reduce$6469'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6532' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6476' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2351_Y = $auto$simplemap.cc:127:simplemap_reduce$6473'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6531' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6480' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2350_Y = $auto$simplemap.cc:127:simplemap_reduce$6477'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6530' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6484' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2349_Y = $auto$simplemap.cc:127:simplemap_reduce$6481'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6529' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6488' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2348_Y = $auto$simplemap.cc:127:simplemap_reduce$6485'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6528' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6492' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2347_Y = $auto$simplemap.cc:127:simplemap_reduce$6489'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6527' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6496' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2346_Y = $auto$simplemap.cc:127:simplemap_reduce$6493'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6526' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6500' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2345_Y = $auto$simplemap.cc:127:simplemap_reduce$6497'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6525' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6504' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2344_Y = $auto$simplemap.cc:127:simplemap_reduce$6501'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6524' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6508' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2343_Y = $auto$simplemap.cc:127:simplemap_reduce$6505'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6523' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6512' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2342_Y = $auto$simplemap.cc:127:simplemap_reduce$6509'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6522' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6516' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2341_Y = $auto$simplemap.cc:127:simplemap_reduce$6513'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6521' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$545.$and$<techmap.v>:434$2339_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6520' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$545.$reduce_or$<techmap.v>:441$2340_Y = $auto$simplemap.cc:127:simplemap_reduce$6517'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6970' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$606.$and$<techmap.v>:434$2667_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6955' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$606.$reduce_or$<techmap.v>:441$2672_Y = $techmap$procmux$606.$and$<techmap.v>:434$2666_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6971' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$606.$and$<techmap.v>:434$2667_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6957' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$606.$reduce_or$<techmap.v>:441$2673_Y = $techmap$procmux$606.$and$<techmap.v>:434$2666_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6969' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$606.$and$<techmap.v>:434$2667_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6959' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$606.$reduce_or$<techmap.v>:441$2671_Y = $techmap$procmux$606.$and$<techmap.v>:434$2666_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6968' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$606.$and$<techmap.v>:434$2667_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6961' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$606.$reduce_or$<techmap.v>:441$2670_Y = $techmap$procmux$606.$and$<techmap.v>:434$2666_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6967' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$606.$and$<techmap.v>:434$2667_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6963' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$606.$reduce_or$<techmap.v>:441$2669_Y = $techmap$procmux$606.$and$<techmap.v>:434$2666_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6966' (const_and) in module `\fp_divider' with constant driver `$techmap$procmux$606.$and$<techmap.v>:434$2667_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6965' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$procmux$606.$reduce_or$<techmap.v>:441$2668_Y = $techmap$procmux$606.$and$<techmap.v>:434$2666_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7016' (and_or_buffer) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$and$<techmap.v>:260$2020_Y [9] = \z_e [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7006' (0?) in module `\fp_divider' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:263$2022_Y [10] = $auto$alumacc.cc:491:replace_alu$862 [9]'.

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5430' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5431'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:263$2110_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$866.$xor$<techmap.v>:263$2110_Y [9]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5430' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5045' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5151'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5044 = $auto$simplemap.cc:127:simplemap_reduce$5150
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5045' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$4725' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5138'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [4]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4725' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$4724' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5137'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [3]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4724' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$4723' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5136'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [2]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4723' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$4722' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5135'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [1]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4722' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$4721' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5134'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [0]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4721' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7095' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7139'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$829.lcu.$and$<techmap.v>:222$3535_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5102_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7095' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4680' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5048'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$829.$xor$<techmap.v>:262$1993_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4680' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4340' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5544'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4339 = $auto$simplemap.cc:127:simplemap_reduce$5543
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4340' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4278' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5408'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$4277 [0] = $auto$simplemap.cc:127:simplemap_reduce$5407 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4278' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3926' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4727'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [6]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3926' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3925' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4726'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [5]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3925' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3924' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5138'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [4]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3924' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3923' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5137'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [3]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3923' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3922' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5136'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [2]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3922' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3921' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5135'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [1]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3921' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3920' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5134'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [0]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3920' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3876' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6318'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3875 = $auto$simplemap.cc:127:simplemap_reduce$6317
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3876' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3605' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4279'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3603 [1] = $auto$simplemap.cc:127:simplemap_reduce$4277 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3605' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3604' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5408'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$3603 [0] = $auto$simplemap.cc:127:simplemap_reduce$5407 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3604' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3582' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4727'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [6]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3582' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3581' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4726'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [5]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3581' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3580' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5138'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [4]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3580' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3579' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5137'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [3]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3579' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3578' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5136'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [2]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3578' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3577' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5135'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [1]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3577' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3576' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5134'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [0]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3576' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6722' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4677'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6721 = $auto$simplemap.cc:127:simplemap_reduce$4676
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6722' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3469' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3880'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$xor$<techmap.v>:262$1308_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:262$1308_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3469' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$3468' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$3889'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$xor$<techmap.v>:262$1308_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$813.$xor$<techmap.v>:263$1309_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$3468' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2784' is identical to cell `$auto$simplemap.cc:177:logic_reduce$2888'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2781 [2] = $auto$simplemap.cc:168:logic_reduce$2885 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2784' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2783' is identical to cell `$auto$simplemap.cc:177:logic_reduce$2887'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2781 [1] = $auto$simplemap.cc:168:logic_reduce$2885 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2783' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2782' is identical to cell `$auto$simplemap.cc:177:logic_reduce$2886'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2781 [0] = $auto$simplemap.cc:168:logic_reduce$2885 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2782' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6204' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6205'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:263$2110_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$863.$xor$<techmap.v>:263$2110_Y [9]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6204' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$5140' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4727'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [6]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5140' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1861' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7188'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1856 [4] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:221$3524_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1861' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1860' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7196'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1856 [3] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:222$3529_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1860' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1859' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7197'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1856 [2] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:222$3532_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1859' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1858' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7198'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1856 [1] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:222$3535_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1858' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1857' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1856 [0] = $techmap$auto$alumacc.cc:474:replace_alu$813.lcu.$and$<techmap.v>:222$3538_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1857' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1612' is identical to cell `$auto$simplemap.cc:177:logic_reduce$2887'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1610 [1] = $auto$simplemap.cc:168:logic_reduce$2885 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1612' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1611' is identical to cell `$auto$simplemap.cc:177:logic_reduce$2886'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1610 [0] = $auto$simplemap.cc:168:logic_reduce$2885 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1611' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3928' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4729'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [8]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3928' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3929' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4730'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [9] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [9]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3929' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6996' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5048'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:263$2022_Y [0] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6996' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6992' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5054'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:262$2021_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6992' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6991' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5053'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:262$2021_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6991' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6990' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5052'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:262$2021_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6990' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6989' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5051'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:262$2021_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6989' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6988' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5050'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:262$2021_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6988' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6987' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5049'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:262$2021_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:262$2009_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6987' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1523' is identical to cell `$auto$simplemap.cc:177:logic_reduce$2886'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1522 [0] = $auto$simplemap.cc:168:logic_reduce$2885 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1523' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1412' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4738'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1410 [0] = $techmap$auto$alumacc.cc:474:replace_alu$832.$xor$<techmap.v>:262$2001_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1412' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1317' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4600'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1315 [0] = $techmap$auto$alumacc.cc:474:replace_alu$826.$xor$<techmap.v>:262$1934_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1317' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3584' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4729'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [8] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [8]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3584' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3585' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4730'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [9] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [9]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3585' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1251' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5213'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1241 [8] = $techmap$auto$alumacc.cc:474:replace_alu$841.$xor$<techmap.v>:262$2021_Y [8]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1251' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1250' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5212'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1241 [7] = $techmap$auto$alumacc.cc:474:replace_alu$841.$xor$<techmap.v>:262$2021_Y [7]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1250' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1243' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5215'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1241 [0] = $techmap$auto$alumacc.cc:474:replace_alu$841.$xor$<techmap.v>:263$2022_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1243' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1252' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5214'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1241 [9] = $techmap$auto$alumacc.cc:474:replace_alu$841.$xor$<techmap.v>:262$2021_Y [9]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1252' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1192' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5162'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1182 [8] = $techmap$auto$alumacc.cc:474:replace_alu$838.$xor$<techmap.v>:262$2021_Y [8]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1192' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1191' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5161'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1182 [7] = $techmap$auto$alumacc.cc:474:replace_alu$838.$xor$<techmap.v>:262$2021_Y [7]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1191' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1184' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5164'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1182 [0] = $techmap$auto$alumacc.cc:474:replace_alu$838.$xor$<techmap.v>:263$2022_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1184' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1193' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5163'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1182 [9] = $techmap$auto$alumacc.cc:474:replace_alu$838.$xor$<techmap.v>:262$2021_Y [9]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1193' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1161' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1282'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [11] = $auto$simplemap.cc:168:logic_reduce$1270 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1161' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1160' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1281'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [10] = $auto$simplemap.cc:168:logic_reduce$1270 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1160' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1159' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1280'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [9] = $auto$simplemap.cc:168:logic_reduce$1270 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1159' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1158' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1279'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [8] = $auto$simplemap.cc:168:logic_reduce$1270 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1158' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1157' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1278'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [7] = $auto$simplemap.cc:168:logic_reduce$1270 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1157' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1156' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1277'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [6] = $auto$simplemap.cc:168:logic_reduce$1270 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1156' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1155' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1276'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [5] = $auto$simplemap.cc:168:logic_reduce$1270 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1155' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1154' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1275'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [4] = $auto$simplemap.cc:168:logic_reduce$1270 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1154' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1153' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1274'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [3] = $auto$simplemap.cc:168:logic_reduce$1270 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1153' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1152' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1273'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [2] = $auto$simplemap.cc:168:logic_reduce$1270 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1152' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1151' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1272'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [1] = $auto$simplemap.cc:168:logic_reduce$1270 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1151' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1150' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1271'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1149 [0] = $auto$simplemap.cc:168:logic_reduce$1270 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1150' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1137' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1258'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1134 [2] = $auto$simplemap.cc:127:simplemap_reduce$1255 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1137' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1136' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1257'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1134 [1] = $auto$simplemap.cc:127:simplemap_reduce$1255 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1136' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1129' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5212'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1120 [7] = $techmap$auto$alumacc.cc:474:replace_alu$841.$xor$<techmap.v>:262$2021_Y [7]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1129' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1103' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1223'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [11] = $auto$simplemap.cc:168:logic_reduce$1211 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1103' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1102' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1222'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [10] = $auto$simplemap.cc:168:logic_reduce$1211 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1102' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1101' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1221'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [9] = $auto$simplemap.cc:168:logic_reduce$1211 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1101' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1100' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1220'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [8] = $auto$simplemap.cc:168:logic_reduce$1211 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1100' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1099' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1219'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [7] = $auto$simplemap.cc:168:logic_reduce$1211 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1099' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1098' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1218'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [6] = $auto$simplemap.cc:168:logic_reduce$1211 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1098' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1097' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1217'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [5] = $auto$simplemap.cc:168:logic_reduce$1211 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1097' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1096' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1216'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [4] = $auto$simplemap.cc:168:logic_reduce$1211 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1096' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1095' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1215'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [3] = $auto$simplemap.cc:168:logic_reduce$1211 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1095' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1094' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1214'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [2] = $auto$simplemap.cc:168:logic_reduce$1211 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1094' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1093' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1213'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [1] = $auto$simplemap.cc:168:logic_reduce$1211 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1093' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1092' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1212'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1091 [0] = $auto$simplemap.cc:168:logic_reduce$1211 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1092' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1079' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1076 [2] = $auto$simplemap.cc:127:simplemap_reduce$1196 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1079' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1078' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1198'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1076 [1] = $auto$simplemap.cc:127:simplemap_reduce$1196 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1078' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1071' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5161'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1062 [7] = $techmap$auto$alumacc.cc:474:replace_alu$838.$xor$<techmap.v>:262$2021_Y [7]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1071' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7696' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7140'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3530_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5099_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7696' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7695' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7141'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3527_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5096_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7695' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7694' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7142'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3524_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5093_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7694' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3583' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5141'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$806.$not$<techmap.v>:258$1305_Y [7] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [7]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3583' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$3927' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5141'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$813.$not$<techmap.v>:258$1305_Y [7] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [7]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$3927' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$4728' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5141'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [7] = $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [7]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4728' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$5139' is identical to cell `$auto$simplemap.cc:37:simplemap_not$4726'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$835.$not$<techmap.v>:258$2006_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$829.$not$<techmap.v>:258$1990_Y [5]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$5139' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1392' is identical to cell `$auto$simplemap.cc:37:simplemap_not$5035'.
    Redirecting output \Y: $eq$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:238$52_Y = $techmap$auto$alumacc.cc:474:replace_alu$832.$not$<techmap.v>:258$1998_Y [23]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1392' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3866' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1314'.
    Redirecting output \Y: $techmap$procmux$145.$reduce_or$<techmap.v>:445$1532_Y = $auto$opt_reduce.cc:132:opt_mux$797
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3866' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1586' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1223'.
    Redirecting output \Y: $procmux$160_Y = $auto$simplemap.cc:168:logic_reduce$1211 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1586' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4281' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3607'.
    Redirecting output \Y: $techmap$procmux$209.$reduce_or$<techmap.v>:445$1693_Y = $techmap$procmux$112.$reduce_or$<techmap.v>:445$1502_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4281' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4330' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4323'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:445$1475_Y = $techmap$procmux$228.$reduce_or$<techmap.v>:445$1787_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4330' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1855' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1282'.
    Redirecting output \Y: $procmux$296_Y = $auto$simplemap.cc:168:logic_reduce$1270 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1855' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$4599' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1314'.
    Redirecting output \Y: $techmap$procmux$331.$reduce_or$<techmap.v>:445$1876_Y = $auto$opt_reduce.cc:132:opt_mux$797
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$4599' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5153' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5047'.
    Redirecting output \Y: $techmap$procmux$390.$reduce_or$<techmap.v>:445$1587_Y = $techmap$procmux$376.$reduce_or$<techmap.v>:445$1587_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5153' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5546' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4342'.
    Redirecting output \Y: $techmap$procmux$471.$reduce_or$<techmap.v>:445$2111_Y = $techmap$procmux$298.$reduce_or$<techmap.v>:445$1587_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5546' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6320' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$3878'.
    Redirecting output \Y: $techmap$procmux$510.$reduce_or$<techmap.v>:445$2111_Y = $techmap$procmux$162.$reduce_or$<techmap.v>:445$1587_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6320' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6724' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4679'.
    Redirecting output \Y: $techmap$procmux$545.$reduce_or$<techmap.v>:445$2335_Y = $techmap$procmux$355.$reduce_or$<techmap.v>:445$1587_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6724' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6953' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4323'.
    Redirecting output \Y: $techmap$procmux$571.$reduce_or$<techmap.v>:445$2497_Y = $techmap$procmux$228.$reduce_or$<techmap.v>:445$1787_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6953' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$3592' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$4323'.
    Redirecting output \Y: $techmap$procmux$79.$reduce_or$<techmap.v>:445$1475_Y = $techmap$procmux$228.$reduce_or$<techmap.v>:445$1787_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$3592' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7716' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7324'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3531_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5100_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7716' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7715' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7323'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$or$<techmap.v>:221$3528_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$or$<techmap.v>:221$5097_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7715' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7714' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7322'.
    Redirecting output \Y: $auto$alumacc.cc:491:replace_alu$862 [1] = $auto$alumacc.cc:491:replace_alu$837 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7714' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7709' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7318'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3554_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:229$5117_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7709' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7703' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7314'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:222$3532_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:222$5101_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7703' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7702' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7313'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:222$3529_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:222$5098_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7702' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6998' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5058'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:263$2022_Y [2] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:263$2010_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6998' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6997' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5057'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:263$2022_Y [1] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:263$2010_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6997' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2786' is identical to cell `$auto$simplemap.cc:177:logic_reduce$2890'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2785 [0] = $auto$simplemap.cc:168:logic_reduce$2889 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2786' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6286' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6285'.
    Redirecting output \Y: $techmap$procmux$510.$and$<techmap.v>:434$2115_Y [9] = $techmap$procmux$510.$and$<techmap.v>:434$2115_Y [8]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$6286' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5512' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5511'.
    Redirecting output \Y: $techmap$procmux$471.$and$<techmap.v>:434$2115_Y [9] = $techmap$procmux$471.$and$<techmap.v>:434$2115_Y [8]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5512' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1615' is identical to cell `$auto$simplemap.cc:177:logic_reduce$2890'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1614 = $auto$simplemap.cc:168:logic_reduce$2889 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1615' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1168' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1289'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1162 [5] = $auto$simplemap.cc:168:logic_reduce$1283 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1168' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1167' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1288'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1162 [4] = $auto$simplemap.cc:168:logic_reduce$1283 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1167' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1166' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1287'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1162 [3] = $auto$simplemap.cc:168:logic_reduce$1283 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1166' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1165' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1286'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1162 [2] = $auto$simplemap.cc:168:logic_reduce$1283 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1165' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1164' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1285'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1162 [1] = $auto$simplemap.cc:168:logic_reduce$1283 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1164' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1163' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1284'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1162 [0] = $auto$simplemap.cc:168:logic_reduce$1283 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1163' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1138' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1259'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1134 [3] = $auto$simplemap.cc:127:simplemap_reduce$1255 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1138' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1110' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1230'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1104 [5] = $auto$simplemap.cc:168:logic_reduce$1224 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1110' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1109' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1229'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1104 [4] = $auto$simplemap.cc:168:logic_reduce$1224 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1109' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1108' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1228'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1104 [3] = $auto$simplemap.cc:168:logic_reduce$1224 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1108' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1107' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1227'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1104 [2] = $auto$simplemap.cc:168:logic_reduce$1224 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1107' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1106' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1226'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1104 [1] = $auto$simplemap.cc:168:logic_reduce$1224 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1106' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1105' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1225'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1104 [0] = $auto$simplemap.cc:168:logic_reduce$1224 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1105' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1080' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1200'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1076 [3] = $auto$simplemap.cc:127:simplemap_reduce$1196 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1080' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7699' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7138'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:221$3539_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:221$5105_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7699' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7724' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7330'.
    Redirecting output \Y: $auto$alumacc.cc:491:replace_alu$862 [2] = $auto$alumacc.cc:491:replace_alu$837 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7724' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7719' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7326'.
    Redirecting output \Y: $auto$alumacc.cc:491:replace_alu$862 [3] = $auto$alumacc.cc:491:replace_alu$837 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7719' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7710' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7319'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3557_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:229$5120_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7710' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7707' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7317'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3548_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:229$5114_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7707' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7000' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5060'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:263$2022_Y [4] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:263$2010_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7000' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6999' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5059'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:263$2022_Y [3] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:263$2010_Y [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6999' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1172' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1293'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1169 [2] = $auto$simplemap.cc:168:logic_reduce$1290 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1172' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1171' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1292'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1169 [1] = $auto$simplemap.cc:168:logic_reduce$1290 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1171' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1170' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1291'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1169 [0] = $auto$simplemap.cc:168:logic_reduce$1290 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1170' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1142' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1263'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1140 [1] = $auto$simplemap.cc:127:simplemap_reduce$1261 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1142' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1114' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1234'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1111 [2] = $auto$simplemap.cc:168:logic_reduce$1231 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1114' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1113' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1233'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1111 [1] = $auto$simplemap.cc:168:logic_reduce$1231 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1113' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1112' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1232'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1111 [0] = $auto$simplemap.cc:168:logic_reduce$1231 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1112' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1084' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1204'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1082 [1] = $auto$simplemap.cc:127:simplemap_reduce$1202 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1084' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7725' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7331'.
    Redirecting output \Y: $auto$alumacc.cc:491:replace_alu$862 [4] = $auto$alumacc.cc:491:replace_alu$837 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7725' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7722' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7329'.
    Redirecting output \Y: $auto$alumacc.cc:491:replace_alu$862 [5] = $auto$alumacc.cc:491:replace_alu$837 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7722' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7711' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7320'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.lcu.$and$<techmap.v>:229$3560_Y = $techmap$auto$alumacc.cc:474:replace_alu$835.lcu.$and$<techmap.v>:229$5123_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$7711' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7002' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5062'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:263$2022_Y [6] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:263$2010_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7002' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7001' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5061'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:474:replace_alu$860.$xor$<techmap.v>:263$2022_Y [5] = $techmap$auto$alumacc.cc:474:replace_alu$835.$xor$<techmap.v>:263$2010_Y [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7001' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1174' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1295'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1173 = $auto$simplemap.cc:168:logic_reduce$1294
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1174' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1116' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1236'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1115 = $auto$simplemap.cc:168:logic_reduce$1235
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1116' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1176' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1297'.
    Redirecting output \Y: $ne$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$10_Y = $auto$simplemap.cc:168:logic_reduce$1296
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1176' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1118' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1238'.
    Redirecting output \Y: $ne$/home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/source/fp_divider.v:102$7_Y = $auto$simplemap.cc:168:logic_reduce$1237
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1118' from module `\fp_divider'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$7332' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$7726'.
    Redirecting output \Y: $auto$alumacc.cc:491:replace_alu$837 [6] = $auto$alumacc.cc:491:replace_alu$862 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$7332' from module `\fp_divider'.
Removed a total of 166 cells.

3.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3791'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1467'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4667'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4666'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4665'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4664'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4663'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4662'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3285'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3286'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3287'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3288'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3289'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3290'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3291'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3292'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3293'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3294'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3295'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3296'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3297'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3298'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3299'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3300'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3301'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3302'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3303'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3304'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3305'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3306'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3307'.
  removing unused `$_DFF_P_' cell `$auto$simplemap.cc:420:simplemap_dff$3308'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3478'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3479'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3480'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3481'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3482'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3483'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3484'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3485'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3486'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3792'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3793'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3794'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3795'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3796'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3797'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3798'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3799'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3800'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3801'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3802'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3803'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3804'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3805'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3806'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3807'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3808'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3809'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3810'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3811'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3812'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3813'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$3814'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3841'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3842'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3843'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3844'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3845'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3846'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3847'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3848'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3849'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3850'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3851'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3852'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3853'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3854'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3855'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3856'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3857'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3858'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3859'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3860'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3861'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3862'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3863'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$3864'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3890'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3891'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3892'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3893'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3894'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3895'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3896'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$3897'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5012'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5013'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5014'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5015'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5016'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5017'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5018'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5019'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5020'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5021'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5022'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5023'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5024'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5025'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5026'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5027'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5028'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5029'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5030'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5031'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5032'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5033'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$5034'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$5286'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7038'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7039'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7040'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7042'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7053'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7054'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7055'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7057'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7091'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7094'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7117'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7118'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7136'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7137'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7201'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7203'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7204'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7205'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7244'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7249'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7251'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7252'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7315'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7316'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7327'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7328'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7338'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7345'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7348'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7358'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7363'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7373'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7380'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7383'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7393'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7398'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7408'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7415'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7418'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7428'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7433'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7698'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7705'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$7708'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7718'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$7723'.
  removed 1656 unused temporary wires.
Removed 294 unused cells and 2180 unused wires.

3.19.5. Finished fast OPT passes.

3.20. Executing ABC pass (technology mapping using ABC).

3.20.1. Extracting gate netlist of module `\fp_divider' to `<abc-temp-dir>/input.blif'..
Extracted 3233 gates and 3743 wires to a netlist network with 508 inputs and 440 outputs.

3.20.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       75
ABC RESULTS:            ANDNOT cells:      193
ABC RESULTS:              AOI3 cells:       62
ABC RESULTS:              AOI4 cells:       63
ABC RESULTS:               MUX cells:      760
ABC RESULTS:              NAND cells:      169
ABC RESULTS:               NOR cells:       80
ABC RESULTS:               NOT cells:      191
ABC RESULTS:              OAI3 cells:      181
ABC RESULTS:              OAI4 cells:      129
ABC RESULTS:                OR cells:      396
ABC RESULTS:             ORNOT cells:       62
ABC RESULTS:              XNOR cells:       49
ABC RESULTS:               XOR cells:      165
ABC RESULTS:        internal signals:     2795
ABC RESULTS:           input signals:      508
ABC RESULTS:          output signals:      440
Removing temp directory.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9349' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9319' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9301' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9283' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9268' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9250' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9235' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9220' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9207' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9197' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8859' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8848' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8837' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8826' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8813' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8802' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8790' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8779' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8765' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8754' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8742' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8731' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8718' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8707' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8695' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8684' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8671' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8660' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8648' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8117' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8082' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8079' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8077' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8075' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8073' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8071' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8069' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8067' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8065' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8063' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8061' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8059' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8057' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8055' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8053' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8051' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8049' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8047' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8045' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8043' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8041' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8039' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8037' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8035' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8033' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8031' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8029' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8027' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8025' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8023' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8021' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8019' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8017' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8015' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8013' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8011' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8009' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8007' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8005' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8003' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8001' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7999' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7997' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7995' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7993' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7991' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7989' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7987' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7985' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7983' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7981' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7979' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7977' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7975' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7973' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7971' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7969' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7967' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7965' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7963' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7961' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7959' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7957' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7955' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7953' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7951' in module `fp_divider'.
Optimizing away select inverter for $_MUX_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7947' in module `fp_divider'.

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
  Cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8129' is identical to cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8128'.
    Redirecting output \Y: $abc$7728$n1349 = $abc$7728$n1348
    Removing $_AND_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8129' from module `\fp_divider'.
  Cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8904' is identical to cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7755'.
    Redirecting output \Y: $abc$7728$n2124 = $abc$7728$n975
    Removing $_NOR_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8904' from module `\fp_divider'.
  Cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8926' is identical to cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7751'.
    Redirecting output \Y: $abc$7728$n2146 = $abc$7728$n971
    Removing $_NOR_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8926' from module `\fp_divider'.
  Cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9304' is identical to cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8937'.
    Redirecting output \Y: $abc$7728$n2524_1 = $abc$7728$n2157
    Removing $_XOR_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9304' from module `\fp_divider'.
  Cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9324' is identical to cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9322'.
    Redirecting output \Y: $abc$7728$n2544_1 = $abc$7728$n2542_1
    Removing $_NOR_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9324' from module `\fp_divider'.
  Cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9386' is identical to cell `$abc$7728$auto$blifparse.cc:371:parse_blif$7794'.
    Redirecting output \Y: $abc$7728$n2606_1 = $abc$7728$n1014
    Removing $_NOR_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9386' from module `\fp_divider'.
  Cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9480' is identical to cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9479'.
    Redirecting output \Y: $abc$7728$n2700_1 = $abc$7728$n2699_1
    Removing $_NOR_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9480' from module `\fp_divider'.
  Cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9635' is identical to cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9634'.
    Redirecting output \Y: $abc$7728$n2855_1 = $abc$7728$n2854_1
    Removing $_NOR_ cell `$abc$7728$auto$blifparse.cc:371:parse_blif$9635' from module `\fp_divider'.
Removed a total of 8 cells.

3.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
  removing unused `$_NOT_' cell `$abc$7728$auto$blifparse.cc:371:parse_blif$8645'.
  removed 1730 unused temporary wires.
Removed 295 unused cells and 3910 unused wires.

3.21.5. Finished fast OPT passes.

3.22. Executing HIERARCHY pass (managing design hierarchy).

3.22.1. Analyzing design hierarchy..
Top module:  \fp_divider

3.22.2. Analyzing design hierarchy..
Top module:  \fp_divider
Removed 0 unused modules.

3.23. Printing statistics.

=== fp_divider ===

   Number of wires:               2201
   Number of wire bits:           3158
   Number of public wires:          36
   Number of public wire bits:     568
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3006
     $_ANDNOT_                     193
     $_AND_                         74
     $_AOI3_                        62
     $_AOI4_                        63
     $_DFF_P_                      440
     $_MUX_                        760
     $_NAND_                       169
     $_NOR_                         74
     $_NOT_                        190
     $_OAI3_                       181
     $_OAI4_                       129
     $_ORNOT_                       62
     $_OR_                         396
     $_XNOR_                        49
     $_XOR_                        164

3.24. Executing CHECK pass (checking for obvious problems).
checking module fp_divider..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=704.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\fp_divider':
  mapped 440 $_DFF_P_ cells to \DFFPOSX1 cells.

5. Executing ABC pass (technology mapping using ABC).

5.1. Extracting gate netlist of module `\fp_divider' to `<abc-temp-dir>/input.blif'..
Extracted 2566 gates and 3074 wires to a netlist network with 508 inputs and 440 outputs.

5.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.00 sec
ABC: Memory =    0.38 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       73
ABC RESULTS:           AOI21X1 cells:      174
ABC RESULTS:           AOI22X1 cells:      178
ABC RESULTS:             INVX1 cells:      475
ABC RESULTS:            MUX2X1 cells:        2
ABC RESULTS:           NAND2X1 cells:      314
ABC RESULTS:           NAND3X1 cells:      109
ABC RESULTS:            NOR2X1 cells:      348
ABC RESULTS:            NOR3X1 cells:        1
ABC RESULTS:           OAI21X1 cells:      576
ABC RESULTS:           OAI22X1 cells:       70
ABC RESULTS:             OR2X2 cells:       43
ABC RESULTS:           XNOR2X1 cells:       24
ABC RESULTS:            XOR2X1 cells:       18
ABC RESULTS:        internal signals:     2126
ABC RESULTS:           input signals:      508
ABC RESULTS:          output signals:      440
Removing temp directory.

6. Executing FLATTEN pass (flatten design).
No more expansions possible.
Removed 0 unused cells and 3078 unused wires.

7. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port fp_divider.clk: Missing option -inpad.
Don't map input port fp_divider.input_a: Missing option -inpad.
Mapping port fp_divider.input_a_ack using BUFX2.
Don't map input port fp_divider.input_a_stb: Missing option -inpad.
Don't map input port fp_divider.input_b: Missing option -inpad.
Mapping port fp_divider.input_b_ack using BUFX2.
Don't map input port fp_divider.input_b_stb: Missing option -inpad.
Mapping port fp_divider.output_z using BUFX2.
Don't map input port fp_divider.output_z_ack: Missing option -inpad.
Mapping port fp_divider.output_z_stb using BUFX2.
Don't map input port fp_divider.rst: Missing option -inpad.

8. Executing OPT pass (performing simple optimizations).

8.1. Executing OPT_EXPR pass (perform const folding).

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fp_divider..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fp_divider.
Performed a total of 0 changes.

8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_divider'.
Removed a total of 0 cells.

8.6. Executing OPT_RMDFF pass (remove dff with constant values).

8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_divider..
Removed 0 unused cells and 3078 unused wires.

8.8. Executing OPT_EXPR pass (perform const folding).

8.9. Finished OPT passes. (There is nothing left to do.)

9. Executing BLIF backend.

End of script. Logfile hash: 588a92af6e
CPU: user 1.77s system 0.03s, MEM: 67.14 MB total, 33.49 MB resident
Yosys 0.7+632 (git sha1 2353d28f, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 21% 20x opt_merge (0 sec), 14% 21x opt_expr (0 sec), ...
Cleaning up output syntax
Cleaning Up blif file syntax
Running blifFanout (iterative)

Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 77 (load 2257.11) from node state<14>,
driven by DFFPOSX1 with strength 313.624 (fF driven at latency 200)
Top fanout load-to-strength ratio is 16.3032 (latency = 3260.63 ps)
Top input node fanout is 440 (load 17827) from node clk.
Warning 1: load of 176.992 is 1.62848 times greater than strongest gate NOR2X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 3: load of 624.547 is 5.74636 times greater than strongest gate NOR2X1
Warning 4: load of 644.565 is 5.93055 times greater than strongest gate NOR2X1
Warning 5: load of 802.16 is 7.38056 times greater than strongest gate NOR2X1
Warning 11: load of 1662.24 is 16.4018 times greater than strongest gate NAND3X1
198 gates exceed specified minimum load.
229 buffers were added.
45 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 2729    	Out: 2684    	-45
	"2" gates	In: 151    	Out: 183    	+32

gates resized: 18
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 16 (load 617.601) from node _193_,
driven by INVX4 with strength 417.401 (fF driven at latency 200)
Top fanout load-to-strength ratio is 2.35198 (latency = 470.397 ps)
Top input node fanout is 57 (load 764.638) from node clk.
Warning 1: load of 442.815 is 1.07102 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 42: load of 467.504 is 1.13074 times greater than strongest gate BUFX4
Warning 44: load of 176.992 is 1.62848 times greater than strongest gate NOR2X1
Warning 46: load of 165.864 is 1.62849 times greater than strongest gate OAI21X1
Warning 47: load of 175.492 is 1.73163 times greater than strongest gate NAND3X1
Warning 52: load of 200.481 is 1.96838 times greater than strongest gate OAI21X1
Warning 53: load of 249.552 is 2.45016 times greater than strongest gate OAI21X1
229 gates exceed specified minimum load.
7 buffers were added.
227 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 2684    	Out: 2684    	+0
	"2" gates	In: 412    	Out: 187    	-225
	"4" gates	In: 5    	Out: 228    	+223
	"8" gates	In: 8    	Out: 10    	+2

gates resized: 234
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 16 (load 617.601) from node _193_,
driven by INVX8 with strength 834.803 (fF driven at latency 200)
Top fanout load-to-strength ratio is 2.35198 (latency = 470.397 ps)
Top input node fanout is 16 (load 350.695) from node rst.
Warning 1: load of 423.537 is 1.02439 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 3: load of 531.033 is 1.28439 times greater than strongest gate BUFX4
Warning 4: load of 571.009 is 1.38108 times greater than strongest gate BUFX4
Warning 11: load of 585.242 is 1.41551 times greater than strongest gate BUFX4
Warning 85: load of 609.931 is 1.47522 times greater than strongest gate BUFX4
Warning 164: load of 176.992 is 1.62848 times greater than strongest gate NOR2X1
Warning 166: load of 165.864 is 1.62849 times greater than strongest gate OAI21X1
Warning 168: load of 175.492 is 1.73163 times greater than strongest gate NAND3X1
Warning 170: load of 196.973 is 1.94359 times greater than strongest gate NAND3X1
Warning 174: load of 200.481 is 1.96838 times greater than strongest gate OAI21X1
Warning 175: load of 249.552 is 2.45016 times greater than strongest gate OAI21X1
355 gates exceed specified minimum load.
0 buffers were added.
7 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 2684    	Out: 2684    	+0
	"2" gates	In: 194    	Out: 187    	-7
	"4" gates	In: 228    	Out: 235    	+7
	"8" gates	In: 10    	Out: 10    	+0

gates resized: 7
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 16 (load 617.601) from node _193_,
driven by INVX8 with strength 834.803 (fF driven at latency 200)
Top fanout load-to-strength ratio is 2.35198 (latency = 470.397 ps)
Top input node fanout is 16 (load 350.695) from node rst.
Warning 1: load of 444.746 is 1.07569 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 10: load of 531.033 is 1.28439 times greater than strongest gate BUFX4
Warning 11: load of 571.009 is 1.38108 times greater than strongest gate BUFX4
Warning 18: load of 585.242 is 1.41551 times greater than strongest gate BUFX4
Warning 92: load of 609.931 is 1.47522 times greater than strongest gate BUFX4
Warning 171: load of 176.992 is 1.62848 times greater than strongest gate NOR2X1
Warning 173: load of 165.864 is 1.62849 times greater than strongest gate OAI21X1
Warning 175: load of 175.492 is 1.73163 times greater than strongest gate NAND3X1
Warning 177: load of 196.973 is 1.94359 times greater than strongest gate NAND3X1
Warning 181: load of 200.481 is 1.96838 times greater than strongest gate OAI21X1
Warning 182: load of 249.552 is 2.45016 times greater than strongest gate OAI21X1
362 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 2684    	Out: 2684    	+0
	"2" gates	In: 187    	Out: 187    	+0
	"4" gates	In: 235    	Out: 235    	+0
	"8" gates	In: 10    	Out: 10    	+0

gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/synthesis
Files:
   Verilog: /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/synthesis/fp_divider.rtl.v
   Verilog: /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/synthesis/fp_divider.rtlnopwr.v
   Spice:   /home/naufal/Documents/auc/ravacancy/rsyn-x/x/demo/designs/fp_div/synthesis/fp_divider.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
Synthesis script ended on Tue Aug 14 15:56:00 EET 2018
